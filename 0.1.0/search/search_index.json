{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Home kintone-java-sdk is the SDK of kintone REST API client on Java Getting Started Quickstart Reference Authentication Connection Record Record RecordModel FieldModel CommentModel BulkRequest BulkRequest BulkRequestModel App App AppModel FormFields FormFields Input Input Lookup Member Selection Time Related_record System FormLayout KintoneAPIException File File FileModel Member License MIT Copyright Copyright(c) Cybozu, Inc.","title":"Home"},{"location":"#home","text":"kintone-java-sdk is the SDK of kintone REST API client on Java","title":"Home"},{"location":"#getting-started","text":"Quickstart","title":"Getting Started"},{"location":"#reference","text":"Authentication Connection Record Record RecordModel FieldModel CommentModel BulkRequest BulkRequest BulkRequestModel App App AppModel FormFields FormFields Input Input Lookup Member Selection Time Related_record System FormLayout KintoneAPIException File File FileModel Member","title":"Reference"},{"location":"#license","text":"MIT","title":"License"},{"location":"#copyright","text":"Copyright(c) Cybozu, Inc.","title":"Copyright"},{"location":"getting-started/quickstart/","text":"Quickstart Requirement Java SE (Version 8 or later) maven (Version 3.5.4 or later) kintone-java-sdk Code example Get record sample Source code import com.cybozu.kintone.client.authentication.*; import com.cybozu.kintone.client.connection.*; import com.cybozu.kintone.client.model.record.*; import com.cybozu.kintone.client.module.record.*; String USERNAME = \"cybozu\"; String PASSWORD = \"cybozu\"; // Init authenticationAuth Auth kintoneAuthWithPassword = new Auth(); kintoneAuthWithPassword.setPasswordAuth(USERNAME, PASSWORD); // Init Connection without \"guest space ID\" Connection kintoneOnDemoDomain = new Connection(\"sample.domain.dot\", kintoneAuthWithPassword); // Init Record Module Record kintoneRecordManager = new Record(kintoneOnDemoDomain); // execute GET RECORD API Integer appID = 1; Integer recordID = 1; try { GetRecordResponse response = kintoneRecordManager.getRecord(appID, recordID); } catch (Exception e) { System.out.println(e.getMessage()); } Response success { \"record\":{ // record data should be here } } Response error { id: '{ID}', code: '{CODE}', message: '{Message string}', } Bulk request sample Source code import java.util.*; import com.cybozu.kintone.client.authentication.*; import com.cybozu.kintone.client.connection.*; import com.cybozu.kintone.client.constant.*; import com.cybozu.kintone.client.model.record.*; import com.cybozu.kintone.client.model.record.field.*; import com.cybozu.kintone.client.module.record.*; import com.cybozu.kintone.client.model.bulkrequest.*; import com.cybozu.kintone.client.module.bulkrequest.*; String USERNAME = \"cybozu\"; String PASSWORD = \"cybozu\"; // Init authenticationAuth Auth kintoneAuthWithPassword = new Auth(); kintoneAuthWithPassword.setPasswordAuth(USERNAME, PASSWORD); // Init Connection without \"guest space ID\" Connection kintoneOnDemoDomain = new Connection(\"sample.domain.dot\", kintoneAuthWithPassword); // Init BulkRequest Module BulkRequest bulkRequestManager = new BulkRequest(kintoneOnDemoDomain); // update record & delete records with bulk request HashMap<String, FieldValue> record1 = new HashMap<String, FieldValue>(); ArrayList<RecordUpdateItem> dataUpdate = new ArrayList<RecordUpdateItem>(); Integer recordID = 1; Integer revision = 1; FieldValue fv1 = new FieldValue(); fv1.setType(FieldType.NUMBER); fv1.setValue(\"2222\"); record1.put(\"FieldCode1\", fv1); dataUpdate.add(new RecordUpdateItem(recordID, revision, null, record1)); ArrayList<Integer> recordIDsDelete = new ArrayList<Integer>(); recordIDsDelete.add(1); recordIDsDelete.add(2); recordIDsDelete.add(3); Integer appID = 1; bulkRequest.deleteRecords(appID, recordIDsDelete); bulkRequest.updateRecords(appID, dataUpdate); // execute BulkRequest try { BulkRequestResponse responses = bulkRequestManager.execute(); // get results ArrayList<Object> results = responses.getResults(); HashMap result1 = (HashMap)results.get(0); UpdateRecordsResponse result2 = (UpdateRecordsResponse)results.get(1); // data Response of the delete request System.out.println(\"delete request: \" + result1.toString()); // data Response of the update request ArrayList<RecordUpdateResponseItem> result21 = result2.getRecords(); System.out.println(\"update request ID: \" + result21.get(0).getID()); System.out.println(\"update request Revison: \" + result21.get(0).getRevision()); } catch (Exception e) { System.out.println(e.getMessage()); } Response success { \"record\":{ // record data should be here } } Response error { id: '{ID}', code: '{CODE}', message: '{Message string}', }","title":"Quickstart"},{"location":"getting-started/quickstart/#quickstart","text":"","title":"Quickstart"},{"location":"getting-started/quickstart/#requirement","text":"Java SE (Version 8 or later) maven (Version 3.5.4 or later) kintone-java-sdk","title":"Requirement"},{"location":"getting-started/quickstart/#code-example","text":"Get record sample Source code import com.cybozu.kintone.client.authentication.*; import com.cybozu.kintone.client.connection.*; import com.cybozu.kintone.client.model.record.*; import com.cybozu.kintone.client.module.record.*; String USERNAME = \"cybozu\"; String PASSWORD = \"cybozu\"; // Init authenticationAuth Auth kintoneAuthWithPassword = new Auth(); kintoneAuthWithPassword.setPasswordAuth(USERNAME, PASSWORD); // Init Connection without \"guest space ID\" Connection kintoneOnDemoDomain = new Connection(\"sample.domain.dot\", kintoneAuthWithPassword); // Init Record Module Record kintoneRecordManager = new Record(kintoneOnDemoDomain); // execute GET RECORD API Integer appID = 1; Integer recordID = 1; try { GetRecordResponse response = kintoneRecordManager.getRecord(appID, recordID); } catch (Exception e) { System.out.println(e.getMessage()); } Response success { \"record\":{ // record data should be here } } Response error { id: '{ID}', code: '{CODE}', message: '{Message string}', } Bulk request sample Source code import java.util.*; import com.cybozu.kintone.client.authentication.*; import com.cybozu.kintone.client.connection.*; import com.cybozu.kintone.client.constant.*; import com.cybozu.kintone.client.model.record.*; import com.cybozu.kintone.client.model.record.field.*; import com.cybozu.kintone.client.module.record.*; import com.cybozu.kintone.client.model.bulkrequest.*; import com.cybozu.kintone.client.module.bulkrequest.*; String USERNAME = \"cybozu\"; String PASSWORD = \"cybozu\"; // Init authenticationAuth Auth kintoneAuthWithPassword = new Auth(); kintoneAuthWithPassword.setPasswordAuth(USERNAME, PASSWORD); // Init Connection without \"guest space ID\" Connection kintoneOnDemoDomain = new Connection(\"sample.domain.dot\", kintoneAuthWithPassword); // Init BulkRequest Module BulkRequest bulkRequestManager = new BulkRequest(kintoneOnDemoDomain); // update record & delete records with bulk request HashMap<String, FieldValue> record1 = new HashMap<String, FieldValue>(); ArrayList<RecordUpdateItem> dataUpdate = new ArrayList<RecordUpdateItem>(); Integer recordID = 1; Integer revision = 1; FieldValue fv1 = new FieldValue(); fv1.setType(FieldType.NUMBER); fv1.setValue(\"2222\"); record1.put(\"FieldCode1\", fv1); dataUpdate.add(new RecordUpdateItem(recordID, revision, null, record1)); ArrayList<Integer> recordIDsDelete = new ArrayList<Integer>(); recordIDsDelete.add(1); recordIDsDelete.add(2); recordIDsDelete.add(3); Integer appID = 1; bulkRequest.deleteRecords(appID, recordIDsDelete); bulkRequest.updateRecords(appID, dataUpdate); // execute BulkRequest try { BulkRequestResponse responses = bulkRequestManager.execute(); // get results ArrayList<Object> results = responses.getResults(); HashMap result1 = (HashMap)results.get(0); UpdateRecordsResponse result2 = (UpdateRecordsResponse)results.get(1); // data Response of the delete request System.out.println(\"delete request: \" + result1.toString()); // data Response of the update request ArrayList<RecordUpdateResponseItem> result21 = result2.getRecords(); System.out.println(\"update request ID: \" + result21.get(0).getID()); System.out.println(\"update request Revison: \" + result21.get(0).getRevision()); } catch (Exception e) { System.out.println(e.getMessage()); } Response success { \"record\":{ // record data should be here } } Response error { id: '{ID}', code: '{CODE}', message: '{Message string}', }","title":"Code example"},{"location":"reference/app-model/","text":"AppModel Gets the basic information about the app. Permissions to view the App is needed. API Tokens cannot be used with this API. Constructor Parameter (none) Sample code Init App Model Source code AppModel appModel = new AppModel(); Methods getAppId() Get the appId Parameter (none) Return Integer Sample code get App Id Source code Integer addId = appModel.getAppId(); getCode() Get the code Parameter (none) Return String Sample code get Code Source code String code = appModel.getCode(); getName() Get the name Parameter (none) Return String Sample code get Name Source code String name = appModel.getName(); getDescription() Get the description Parameter (none) Return String Sample code get Description Source code String description = appModel.getDescription(); getSpaceId() Get the spaceId Parameter (none) Return Integer Sample code get Space Id Source code Integer spaceId = appModel.getSpaceId(); getThreadId() Get the threadId Parameter (none) Return Integer Sample code get Thread Id Source code Integer threadId = appModel.getThreadId(); getCreator() Get the creator Parameter (none) Return Member Sample code get Creator Source code Member member = appModel.getCreator(); getModifier() Get the modifier Parameter (none) Return Member Sample code get Modifier Source code Member member = appModel.getModifier(); getCreatedAt() Get the createdAt Parameter (none) Return Date Sample code get Create Date Source code Date date = appModel.getCreatedAt(); getModifiedAt() Get the modifiedAt Parameter (none) Return Date Sample code get Modified Date Source code Date date = appModel.getModifiedAt(); Reference Get App on developer network Get Apps on developer network Get Form fields on developer network Get Form Layout on developer network","title":"App Model"},{"location":"reference/app-model/#appmodel","text":"Gets the basic information about the app. Permissions to view the App is needed. API Tokens cannot be used with this API.","title":"AppModel"},{"location":"reference/app-model/#constructor","text":"","title":"Constructor"},{"location":"reference/app-model/#parameter","text":"(none)","title":"Parameter"},{"location":"reference/app-model/#sample-code","text":"Init App Model Source code AppModel appModel = new AppModel();","title":"Sample code"},{"location":"reference/app-model/#methods","text":"","title":"Methods"},{"location":"reference/app-model/#getappid","text":"Get the appId Parameter (none) Return Integer Sample code get App Id Source code Integer addId = appModel.getAppId();","title":"getAppId()"},{"location":"reference/app-model/#getcode","text":"Get the code Parameter (none) Return String Sample code get Code Source code String code = appModel.getCode();","title":"getCode()"},{"location":"reference/app-model/#getname","text":"Get the name Parameter (none) Return String Sample code get Name Source code String name = appModel.getName();","title":"getName()"},{"location":"reference/app-model/#getdescription","text":"Get the description Parameter (none) Return String Sample code get Description Source code String description = appModel.getDescription();","title":"getDescription()"},{"location":"reference/app-model/#getspaceid","text":"Get the spaceId Parameter (none) Return Integer Sample code get Space Id Source code Integer spaceId = appModel.getSpaceId();","title":"getSpaceId()"},{"location":"reference/app-model/#getthreadid","text":"Get the threadId Parameter (none) Return Integer Sample code get Thread Id Source code Integer threadId = appModel.getThreadId();","title":"getThreadId()"},{"location":"reference/app-model/#getcreator","text":"Get the creator Parameter (none) Return Member Sample code get Creator Source code Member member = appModel.getCreator();","title":"getCreator()"},{"location":"reference/app-model/#getmodifier","text":"Get the modifier Parameter (none) Return Member Sample code get Modifier Source code Member member = appModel.getModifier();","title":"getModifier()"},{"location":"reference/app-model/#getcreatedat","text":"Get the createdAt Parameter (none) Return Date Sample code get Create Date Source code Date date = appModel.getCreatedAt();","title":"getCreatedAt()"},{"location":"reference/app-model/#getmodifiedat","text":"Get the modifiedAt Parameter (none) Return Date Sample code get Modified Date Source code Date date = appModel.getModifiedAt();","title":"getModifiedAt()"},{"location":"reference/app-model/#reference","text":"Get App on developer network Get Apps on developer network Get Form fields on developer network Get Form Layout on developer network","title":"Reference"},{"location":"reference/app/","text":"App Gets general information of an App, including the name, description, related Space, creator and updater information. Permissions to view the App is needed. API Tokens cannot be used with this API. Constructor Parameter Name Type Required Description connection Connection yes The connection module of this SDK. Sample code Init app module Source code App appManagerment = new App(connection); Methods getApp(appId) Get single app Parameter Name Type Required Description appId Integer yes The kintone app ID Return AppModel Sample code get App Source code Integer appID = 1; App appManagerment = new App(connection); AppModel app = appManagerment.getApp(appID); getApps(offset, limit) Get multiple apps Parameter Name Type Required Description offset Integer (optional) The offset off data result limit Integer (optional) The limit number of result Return List< AppModel > Sample code Get Apps Source code Integer offset = 10; Integer limit = 50; App appManagerment = new App(connection); List app_list = appManagerment.getApps(offset, limit); getAppsByIDs(ids, offset, limit) Get multiple apps by list of ids Parameter Name Type Required Description ids List<Integer> yes The array of app ids offset Integer (optional) The offset off data result limit Integer (optional) The limit number of result Return List< AppModel > Sample code get Apps By IDs Source code Integer offset = 1; Integer limit = 10; List ids = new List (); ids.add(1); ids.add(2); ids.add(3); App appManagerment = new App(connection); List app_list = appManagerment.getAppsByIDs(ids, offset, limit); getAppsByCodes(codes, offset, limit) Get multiple apps by a list of codes Parameter Name Type Required Description codes List<String> yes The array of app codes offset Integer (optional) The offset off data result limit Integer (optional) The limit number of result Return List< AppModel > Sample code get Apps By Codes Source code Integer offset = 1; Integer limit = 10; List codes = new List (); codes.add('APP_CODE_1'); codes.add('APP_CODE_2'); App appManagerment = new App(connection); List app_list = appManagerment.getAppsByCodes(codes, offset, limit); getAppsByName(name, offset, limit) Get multiple apps by name Parameter Name Type Required Description name String yes The app name offset Integer (optional) The offset off data result limit Integer (optional) The limit number of result Return List< AppModel > Sample code get Apps By Name Source code String name = \"sample_app_name\"; Integer offset = 1; Integer limit = 10; App appManagerment = new App(connection); List app_list = appManagerment.getAppsByName(name, offset, limit); getAppsBySpaceIDs(spaceIds, offset, limit) Get multiple apps by list of space's ids Parameter Name Type Required Description spaceIds List<Integer> yes The array of space ids offset Integer (optional) The offset off data result limit Integer (optional) The limit number of result Return List< AppModel > Sample code get Apps By Space IDs Source code Integer offset = 1; Integer limit = 10; List spaceIds = new List (); App appManagerment = new App(connection); List app_list = appManagerment.getAppsBySpaceIDs(spaceIds, offset, limit); getFormFields(appId, lang, isPreview) Get field of form in kintone app Parameter Name Type Required Description appId Integer yes The app ID lang LanguageSetting (optional) The language code. Support: DEFAULT: Default language setting of system JA: Japanese language setting ZH: Chinese language setting EN: English language setting isPreview Boolean (optional) Get the app form fields with a pre-live settings . Return FormFields Sample code get FormFields Source code Integer appID = 1; LanguageSetting lang = LanguageSetting.JA; Boolean isPreview = true; App appManagerment = new App(connection); FormFields fields = appManagerment.getFormFields(appID, lang, isPreview); getFormLayout(appId, isPreview) Get layout of form in kintone app Parameter Name Type Required Description appId Integer yes The kintone app id isPreview Boolean (optional) Get the app form layout with a pre-live settings . Return FormLayout Sample code get FormLayout Source code Integer appID = 1; Boolean isPreview = true; App appManagerment = new App(connection); FormFields fields = appManagerment.getFormLayout(appID, isPreview); Reference Get App on developer network Get Apps on developer network Get Form fields on developer network Get Form Layout on developer network","title":"App"},{"location":"reference/app/#app","text":"Gets general information of an App, including the name, description, related Space, creator and updater information. Permissions to view the App is needed. API Tokens cannot be used with this API.","title":"App"},{"location":"reference/app/#constructor","text":"","title":"Constructor"},{"location":"reference/app/#parameter","text":"Name Type Required Description connection Connection yes The connection module of this SDK.","title":"Parameter"},{"location":"reference/app/#sample-code","text":"Init app module Source code App appManagerment = new App(connection);","title":"Sample code"},{"location":"reference/app/#methods","text":"","title":"Methods"},{"location":"reference/app/#getappappid","text":"Get single app","title":"getApp(appId)"},{"location":"reference/app/#parameter_1","text":"Name Type Required Description appId Integer yes The kintone app ID Return AppModel Sample code get App Source code Integer appID = 1; App appManagerment = new App(connection); AppModel app = appManagerment.getApp(appID);","title":"Parameter"},{"location":"reference/app/#getappsoffset-limit","text":"Get multiple apps Parameter Name Type Required Description offset Integer (optional) The offset off data result limit Integer (optional) The limit number of result Return List< AppModel > Sample code Get Apps Source code Integer offset = 10; Integer limit = 50; App appManagerment = new App(connection); List app_list = appManagerment.getApps(offset, limit);","title":"getApps(offset, limit)"},{"location":"reference/app/#getappsbyidsids-offset-limit","text":"Get multiple apps by list of ids Parameter Name Type Required Description ids List<Integer> yes The array of app ids offset Integer (optional) The offset off data result limit Integer (optional) The limit number of result Return List< AppModel > Sample code get Apps By IDs Source code Integer offset = 1; Integer limit = 10; List ids = new List (); ids.add(1); ids.add(2); ids.add(3); App appManagerment = new App(connection); List app_list = appManagerment.getAppsByIDs(ids, offset, limit);","title":"getAppsByIDs(ids, offset, limit)"},{"location":"reference/app/#getappsbycodescodes-offset-limit","text":"Get multiple apps by a list of codes Parameter Name Type Required Description codes List<String> yes The array of app codes offset Integer (optional) The offset off data result limit Integer (optional) The limit number of result Return List< AppModel > Sample code get Apps By Codes Source code Integer offset = 1; Integer limit = 10; List codes = new List (); codes.add('APP_CODE_1'); codes.add('APP_CODE_2'); App appManagerment = new App(connection); List app_list = appManagerment.getAppsByCodes(codes, offset, limit);","title":"getAppsByCodes(codes, offset, limit)"},{"location":"reference/app/#getappsbynamename-offset-limit","text":"Get multiple apps by name Parameter Name Type Required Description name String yes The app name offset Integer (optional) The offset off data result limit Integer (optional) The limit number of result Return List< AppModel > Sample code get Apps By Name Source code String name = \"sample_app_name\"; Integer offset = 1; Integer limit = 10; App appManagerment = new App(connection); List app_list = appManagerment.getAppsByName(name, offset, limit);","title":"getAppsByName(name, offset, limit)"},{"location":"reference/app/#getappsbyspaceidsspaceids-offset-limit","text":"Get multiple apps by list of space's ids Parameter Name Type Required Description spaceIds List<Integer> yes The array of space ids offset Integer (optional) The offset off data result limit Integer (optional) The limit number of result Return List< AppModel > Sample code get Apps By Space IDs Source code Integer offset = 1; Integer limit = 10; List spaceIds = new List (); App appManagerment = new App(connection); List app_list = appManagerment.getAppsBySpaceIDs(spaceIds, offset, limit);","title":"getAppsBySpaceIDs(spaceIds, offset, limit)"},{"location":"reference/app/#getformfieldsappid-lang-ispreview","text":"Get field of form in kintone app Parameter Name Type Required Description appId Integer yes The app ID lang LanguageSetting (optional) The language code. Support: DEFAULT: Default language setting of system JA: Japanese language setting ZH: Chinese language setting EN: English language setting isPreview Boolean (optional) Get the app form fields with a pre-live settings . Return FormFields Sample code get FormFields Source code Integer appID = 1; LanguageSetting lang = LanguageSetting.JA; Boolean isPreview = true; App appManagerment = new App(connection); FormFields fields = appManagerment.getFormFields(appID, lang, isPreview);","title":"getFormFields(appId, lang, isPreview)"},{"location":"reference/app/#getformlayoutappid-ispreview","text":"Get layout of form in kintone app Parameter Name Type Required Description appId Integer yes The kintone app id isPreview Boolean (optional) Get the app form layout with a pre-live settings . Return FormLayout Sample code get FormLayout Source code Integer appID = 1; Boolean isPreview = true; App appManagerment = new App(connection); FormFields fields = appManagerment.getFormLayout(appID, isPreview);","title":"getFormLayout(appId, isPreview)"},{"location":"reference/app/#reference","text":"Get App on developer network Get Apps on developer network Get Form fields on developer network Get Form Layout on developer network","title":"Reference"},{"location":"reference/authentication/","text":"Authentication Authentication module will be used by Connection . This module allow we authenticate with kintone app by password authenticator or API token authenticator. This module is also support basic authenticator. Warning If both the Token and Password Authentication are specified, the Token Authentication will be ignored and the Password authentication will be used. Constructor Parameter (none) Sample code Init authentication module Source code Auth kintoneAuth = new Auth(); Methods setPasswordAuth(username, password) Set password authentication for Authentication module. Parameter Name Type Required Description username String yes The username that is able to authenticate on kintone app password String yes The password that is able to authenticate on kintone app Return Auth Sample code Set password authentication Source code String username = \"cybozu\"; String password = \"cybozu\"; kintoneAuth.setPasswordAuth(username, password); setApiToken(apiTokenString) Set Api Token for Authentication module. Parameter Name Type Required Description apiToken String yes The apiToken that is able to authenticate on kintone app Return Auth Set APIToken authentication Source code String apiToken = \"123456789abcdefghijklmnopqrstuvwxyz\"; kintoneAuth.setApiToken(apiToken); setBasicAuth(username, password) Set Basic authentication for Authentication module. Parameter Name Type Required Description username String yes The username that is able to authenticate on kintone app password String yes The password that is able to authenticate on kintone app Return Auth Sample code Set basic authentication Source code String username = \"cybozu\"; String password = \"cybozu\"; kintoneAuth.setBasicAuth(username, password); createHeaderCredentials() Provide the list of HTTP Headers which use to authentication in. Parameter (none) Return Array<HTTPHeader> Sample code Provide the list of HTTP Headers which use to authentication in Source code for (HTTPHeader header : kintoneAuth.createHeaderCredentials()) { connection.setRequestProperty(header.getKey(), header.getValue()); }","title":"Authentication"},{"location":"reference/authentication/#authentication","text":"Authentication module will be used by Connection . This module allow we authenticate with kintone app by password authenticator or API token authenticator. This module is also support basic authenticator. Warning If both the Token and Password Authentication are specified, the Token Authentication will be ignored and the Password authentication will be used.","title":"Authentication"},{"location":"reference/authentication/#constructor","text":"Parameter (none) Sample code Init authentication module Source code Auth kintoneAuth = new Auth();","title":"Constructor"},{"location":"reference/authentication/#methods","text":"","title":"Methods"},{"location":"reference/authentication/#setpasswordauthusername-password","text":"Set password authentication for Authentication module. Parameter Name Type Required Description username String yes The username that is able to authenticate on kintone app password String yes The password that is able to authenticate on kintone app Return Auth Sample code Set password authentication Source code String username = \"cybozu\"; String password = \"cybozu\"; kintoneAuth.setPasswordAuth(username, password);","title":"setPasswordAuth(username, password)"},{"location":"reference/authentication/#setapitokenapitokenstring","text":"Set Api Token for Authentication module. Parameter Name Type Required Description apiToken String yes The apiToken that is able to authenticate on kintone app Return Auth Set APIToken authentication Source code String apiToken = \"123456789abcdefghijklmnopqrstuvwxyz\"; kintoneAuth.setApiToken(apiToken);","title":"setApiToken(apiTokenString)"},{"location":"reference/authentication/#setbasicauthusername-password","text":"Set Basic authentication for Authentication module. Parameter Name Type Required Description username String yes The username that is able to authenticate on kintone app password String yes The password that is able to authenticate on kintone app Return Auth Sample code Set basic authentication Source code String username = \"cybozu\"; String password = \"cybozu\"; kintoneAuth.setBasicAuth(username, password);","title":"setBasicAuth(username, password)"},{"location":"reference/authentication/#createheadercredentials","text":"Provide the list of HTTP Headers which use to authentication in. Parameter (none) Return Array<HTTPHeader> Sample code Provide the list of HTTP Headers which use to authentication in Source code for (HTTPHeader header : kintoneAuth.createHeaderCredentials()) { connection.setRequestProperty(header.getKey(), header.getValue()); }","title":"createHeaderCredentials()"},{"location":"reference/bulk-request-model/","text":"Bulk Request Model Store a list of requests and responses for a bulk request. BulkRequestModel Constructor Parameter (none) Methods addRequest(bulkRequestItem) Parameter Name Type Description bulkRequestItem BulkRequestItem The BulkRequest Item. Return (none) Sample code add Request Source code BulkRequestModel bulkRequestModel = new BulkRequestModel(); Integer appID = 1; HashMap record = new HashMap (); FieldValue fv = new FieldValue(); fv.setType(\"SINGLE_LINE_TEXT\"); fv.setValue(\"test_value\"); record.put(\"sample_FieldCode\", fv); AddRecordRequest addRecordRequest = new AddRecordRequest(appID, record); BulkRequestItem bulkRequestItem = new BulkRequestItem(\"POST\", \"/k/v1/record.json\", addRecordRequest); bulkRequestModel.addRequest(bulkRequestItem); BulkRequestItem Constructor Parameter Name Type Description method String The API method name. api String The path of the API. payload Object The parameters to be passed onto the API.Contents and formats will change depending on the API. Sample code Init Bulk Request Item Source code Integer appID = 1; HashMap record = new HashMap (); FieldValue fv = new FieldValue(); fv.setType(\"SINGLE_LINE_TEXT\"); fv.setValue(\"test_value\"); record.put(\"sample_FieldCode\", fv); AddRecordRequest addRecordRequest = new AddRecordRequest(appID, record); BulkRequestItem bulkRequestItem = new BulkRequestItem(\"POST\", \"/k/v1/record.json\", addRecordRequest); BulkRequestResponse Constructor Parameter (none) Methods getResults() Parameter (none) Return ArrayList<Object> Sample code get Results Source code BulkRequest bulkRequestManager = new BulkRequest(connection); Integer appID = 1; Integer recordID =1; Integer revision = 1; ArrayList assignees = new ArrayList (); assignees.add(\"sample_user\"); bulkRequestManager.updateRecordAssignees(appID, recordID, assignees, revision); BulkRequestResponse responses = bulkRequestManager.execute(); // get results ArrayList<Object> results = responses.getResults(); UpdateRecordResponse result1 = (UpdateRecordResponse)results.get(0);","title":"Bulk Request Model"},{"location":"reference/bulk-request-model/#bulk-request-model","text":"Store a list of requests and responses for a bulk request.","title":"Bulk Request Model"},{"location":"reference/bulk-request-model/#bulkrequestmodel","text":"","title":"BulkRequestModel"},{"location":"reference/bulk-request-model/#constructor","text":"Parameter (none)","title":"Constructor"},{"location":"reference/bulk-request-model/#methods","text":"","title":"Methods"},{"location":"reference/bulk-request-model/#addrequestbulkrequestitem","text":"Parameter Name Type Description bulkRequestItem BulkRequestItem The BulkRequest Item. Return (none) Sample code add Request Source code BulkRequestModel bulkRequestModel = new BulkRequestModel(); Integer appID = 1; HashMap record = new HashMap (); FieldValue fv = new FieldValue(); fv.setType(\"SINGLE_LINE_TEXT\"); fv.setValue(\"test_value\"); record.put(\"sample_FieldCode\", fv); AddRecordRequest addRecordRequest = new AddRecordRequest(appID, record); BulkRequestItem bulkRequestItem = new BulkRequestItem(\"POST\", \"/k/v1/record.json\", addRecordRequest); bulkRequestModel.addRequest(bulkRequestItem);","title":"addRequest(bulkRequestItem)"},{"location":"reference/bulk-request-model/#bulkrequestitem","text":"","title":"BulkRequestItem"},{"location":"reference/bulk-request-model/#constructor_1","text":"Parameter Name Type Description method String The API method name. api String The path of the API. payload Object The parameters to be passed onto the API.Contents and formats will change depending on the API. Sample code Init Bulk Request Item Source code Integer appID = 1; HashMap record = new HashMap (); FieldValue fv = new FieldValue(); fv.setType(\"SINGLE_LINE_TEXT\"); fv.setValue(\"test_value\"); record.put(\"sample_FieldCode\", fv); AddRecordRequest addRecordRequest = new AddRecordRequest(appID, record); BulkRequestItem bulkRequestItem = new BulkRequestItem(\"POST\", \"/k/v1/record.json\", addRecordRequest);","title":"Constructor"},{"location":"reference/bulk-request-model/#bulkrequestresponse","text":"","title":"BulkRequestResponse"},{"location":"reference/bulk-request-model/#constructor_2","text":"Parameter (none)","title":"Constructor"},{"location":"reference/bulk-request-model/#methods_1","text":"","title":"Methods"},{"location":"reference/bulk-request-model/#getresults","text":"Parameter (none) Return ArrayList<Object> Sample code get Results Source code BulkRequest bulkRequestManager = new BulkRequest(connection); Integer appID = 1; Integer recordID =1; Integer revision = 1; ArrayList assignees = new ArrayList (); assignees.add(\"sample_user\"); bulkRequestManager.updateRecordAssignees(appID, recordID, assignees, revision); BulkRequestResponse responses = bulkRequestManager.execute(); // get results ArrayList<Object> results = responses.getResults(); UpdateRecordResponse result1 = (UpdateRecordResponse)results.get(0);","title":"getResults()"},{"location":"reference/bulk-request/","text":"BulkRequest The Bulk Request API allows multiple API requests to run on multiple kintone apps. The below API can be used with the Bulk Request API: Add Record Add Records Update Record Update Records Delete Records Update Status Update Statuses Update Assignees Constructor Parameter Name Type Required Description connection Connection yes The connection module of this SDK. Sample code Init bulk request module Source code BulkRequest bulkRequestManager = new BulkRequest(connection); Methods All below methods (excluded execute() method) will add request to queue, you must execute the execute() function to get result of BulkRequest. addRecord(app, record) Parameter See at Record - addRecord Return BulkRequest Sample code add Record Source code BulkRequest bulkRequestManager = new BulkRequest(connection); HashMap record = new HashMap (); Integer appID = 1; FieldValue fv = new FieldValue(); fv.setType(FieldType.SINGLE_LINE_TEXT); fv.setValue(\"sample_AddRecord\"); record.put(\"FieldCode1\", fv); bulkRequestManager.addRecord(appID, record); addRecords(app, records) Parameter See at Record - addRecords Return BulkRequest Sample code add multiple Records Source code BulkRequest bulkRequestManager = new BulkRequest(connection); ArrayList > records = new ArrayList >(); HashMap record1 = new HashMap (); HashMap record2 = new HashMap (); Integer appID = 1; FieldValue fv = new FieldValue(); fv.setType(FieldType.SINGLE_LINE_TEXT); fv.setValue(\"sample_AddRecords1\"); FieldValue fv2 = new FieldValue(); fv2.setType(FieldType.SINGLE_LINE_TEXT); fv2.setValue(\"sample_AddRecords2\"); record1.put(\"FieldCode1\", fv); record2.put(\"FieldCode1\", fv2); records.add(record1); records.add(record2); bulkRequestManager.addRecords(appID, records); updateRecordByID(app, id, record, revision) Parameter See at Record - updateRecordByID Return BulkRequest Sample code update Record By ID Source code BulkRequest bulkRequestManager = new BulkRequest(connection); HashMap record = new HashMap (); Integer appID = 1; Integer recordID = 1; Integer revision = 1; FieldValue fv = new FieldValue(); fv.setType(FieldType.SINGLE_LINE_TEXT); fv.setValue(\"sample_updateRecordById\"); record.put(\"FieldCode1\", fv); bulkRequestManager.updateRecordByID(appID, recordID, record, revision); updateRecordByUpdateKey(app, updateKey, record, revision) Parameter See at Record - updateRecordByUpdateKey Return BulkRequest Sample code update Record By UpdateKey Source code BulkRequest bulkRequestManager = new BulkRequest(connection); HashMap record = new HashMap (); RecordUpdateKey uKey = new RecordUpdateKey(\"\u6587\u5b57\u5217__1\u884c__0\", \"unique_value1\"); Integer appID = 1; Integer revision = 1; FieldValue fv = new FieldValue(); fv.setType(FieldType.SINGLE_LINE_TEXT); fv.setValue(\"sample_updateRecordByUpdateKey\"); record.put(\"FieldCode1\", fv); bulkRequestManager.updateRecordByUpdateKey(appID, uKey, record, revision); updateRecords(app, records) Parameter See at Record - updateRecords Return BulkRequest Sample code update multiple Records Source code BulkRequest bulkRequestManager = new BulkRequest(connection); HashMap record1 = new HashMap (); HashMap record2 = new HashMap (); Integer appID = 1; Integer recordId1 = 1; Integer recordId2 = 2; Integer revision = 1; FieldValue fv1 = new FieldValue(); fv1.setType(FieldType.SINGLE_LINE_TEXT); fv1.setValue(\"test_updateRecords1\"); FieldValue fv2 = new FieldValue(); fv2.setType(FieldType.SINGLE_LINE_TEXT); fv2.setValue(\"test_updateRecords2\"); record1.put(\"FieldCode1\", fv1); record2.put(\"FieldCode1\", fv2); ArrayList records = new ArrayList (); records.add(new RecordUpdateItem(recordId1, revision, null, record1)); records.add(new RecordUpdateItem(recordId2, null, null, record2)); bulkRequestManager.updateRecords(appID, records); deleteRecords(app, ids) Parameter See at Record - deleteRecords Return BulkRequest Sample code Bulk Delete Records Source code BulkRequest bulkRequestManager = new BulkRequest(connection); Integer appID = 1; ArrayList ids = new ArrayList (); ids.add(1); ids.add(2); bulkRequestManager.deleteRecords(appID, ids); deleteRecordsWithRevision(app, idsWithRevision) Parameter See at Record - deleteRecordsWithRevision Return BulkRequest Sample code delete Records With Revision Source code BulkRequest bulkRequestManager = new BulkRequest(connection); HashMap idsWithRevision = new HashMap (); Integer appID = 1; idsWithRevision.put(1, 1); idsWithRevision.put(2, null); idsWithRevision.put(3, -1); bulkRequestManager.deleteRecordsWithRevision(appID, idsWithRevision); updateRecordAssignees(app, record, assignees, revision) Parameter See at Record - updateRecordAssignees Return BulkRequest Sample code Update the Assignees for the record Source code BulkRequest bulkRequestManager = new BulkRequest(connection); Integer appID = 1; Integer recordID =1; Integer revision = 1; ArrayList assignees = new ArrayList (); assignees.add(\"sample_user\"); bulkRequestManager.updateRecordAssignees(appID, recordID, assignees, revision); updateRecordStatus(app, id, action, assignee, revision) Parameter See at Record - updateRecordStatus Return BulkRequest Sample code Update the status of a single record Source code BulkRequest bulkRequestManager = new BulkRequest(connection); Integer appID = 1; Integer recordID =1; String action = \"\u51e6\u7406\u958b\u59cb\"; String assignee = \"sample_user\"; Integer revision = 1; bulkRequestManager.updateRecordStatus(appID, recordID, action, assignee, revision); updateRecordsStatus(app, records) Parameter See at Record - updateRecordsStatus Return BulkRequest Sample code Update the status of multiple records in bulk Source code BulkRequest bulkRequestManager = new BulkRequest(connection); ArrayList rusi = new ArrayList (); Integer appID = 1; String action = \"\u51e6\u7406\u958b\u59cb\"; String assignee = \"sample_user1\"; Integer recordID1 =1; Integer recordID2 =2; Integer recordID3 =3; Integer revision1 = 1; Integer revision2 = null; Integer revision3 = -1; rusi.add(new RecordUpdateStatusItem(action, assignee, recordID1, revision1)); rusi.add(new RecordUpdateStatusItem(action, assignee, recordID2, revision2)); rusi.add(new RecordUpdateStatusItem(action, assignee, recordID3, revision3)); bulkRequestManager.updateRecordsStatus(appID, rusi); execute() Execute the bulk request and get data response Parameter (none) Return BulkRequestResponse Sample code Execute bulk request Source code BulkRequest bulkRequestManager = new BulkRequest(connection); bulkRequestManager.addRecord(/*[Args]*/); bulkRequestManager.addRecords(/*[Args]*/); bulkRequestManager.updateRecords(/*[Args]*/); bulkRequestManager.deleteRecords(/*[Args]*/); try { BulkRequestResponse responses = bulkRequestManager.execute(); } catch (Exception e) { System.out.println(e.getMessage()); } Reference Get Record on developer network","title":"Bulk Request"},{"location":"reference/bulk-request/#bulkrequest","text":"The Bulk Request API allows multiple API requests to run on multiple kintone apps. The below API can be used with the Bulk Request API: Add Record Add Records Update Record Update Records Delete Records Update Status Update Statuses Update Assignees","title":"BulkRequest"},{"location":"reference/bulk-request/#constructor","text":"","title":"Constructor"},{"location":"reference/bulk-request/#parameter","text":"Name Type Required Description connection Connection yes The connection module of this SDK.","title":"Parameter"},{"location":"reference/bulk-request/#sample-code","text":"Init bulk request module Source code BulkRequest bulkRequestManager = new BulkRequest(connection);","title":"Sample code"},{"location":"reference/bulk-request/#methods","text":"All below methods (excluded execute() method) will add request to queue, you must execute the execute() function to get result of BulkRequest.","title":"Methods"},{"location":"reference/bulk-request/#addrecordapp-record","text":"Parameter See at Record - addRecord Return BulkRequest","title":"addRecord(app, record)"},{"location":"reference/bulk-request/#sample-code_1","text":"add Record Source code BulkRequest bulkRequestManager = new BulkRequest(connection); HashMap record = new HashMap (); Integer appID = 1; FieldValue fv = new FieldValue(); fv.setType(FieldType.SINGLE_LINE_TEXT); fv.setValue(\"sample_AddRecord\"); record.put(\"FieldCode1\", fv); bulkRequestManager.addRecord(appID, record);","title":"Sample code"},{"location":"reference/bulk-request/#addrecordsapp-records","text":"Parameter See at Record - addRecords Return BulkRequest","title":"addRecords(app, records)"},{"location":"reference/bulk-request/#sample-code_2","text":"add multiple Records Source code BulkRequest bulkRequestManager = new BulkRequest(connection); ArrayList > records = new ArrayList >(); HashMap record1 = new HashMap (); HashMap record2 = new HashMap (); Integer appID = 1; FieldValue fv = new FieldValue(); fv.setType(FieldType.SINGLE_LINE_TEXT); fv.setValue(\"sample_AddRecords1\"); FieldValue fv2 = new FieldValue(); fv2.setType(FieldType.SINGLE_LINE_TEXT); fv2.setValue(\"sample_AddRecords2\"); record1.put(\"FieldCode1\", fv); record2.put(\"FieldCode1\", fv2); records.add(record1); records.add(record2); bulkRequestManager.addRecords(appID, records);","title":"Sample code"},{"location":"reference/bulk-request/#updaterecordbyidapp-id-record-revision","text":"Parameter See at Record - updateRecordByID Return BulkRequest","title":"updateRecordByID(app, id, record, revision)"},{"location":"reference/bulk-request/#sample-code_3","text":"update Record By ID Source code BulkRequest bulkRequestManager = new BulkRequest(connection); HashMap record = new HashMap (); Integer appID = 1; Integer recordID = 1; Integer revision = 1; FieldValue fv = new FieldValue(); fv.setType(FieldType.SINGLE_LINE_TEXT); fv.setValue(\"sample_updateRecordById\"); record.put(\"FieldCode1\", fv); bulkRequestManager.updateRecordByID(appID, recordID, record, revision);","title":"Sample code"},{"location":"reference/bulk-request/#updaterecordbyupdatekeyapp-updatekey-record-revision","text":"Parameter See at Record - updateRecordByUpdateKey Return BulkRequest","title":"updateRecordByUpdateKey(app, updateKey, record, revision)"},{"location":"reference/bulk-request/#sample-code_4","text":"update Record By UpdateKey Source code BulkRequest bulkRequestManager = new BulkRequest(connection); HashMap record = new HashMap (); RecordUpdateKey uKey = new RecordUpdateKey(\"\u6587\u5b57\u5217__1\u884c__0\", \"unique_value1\"); Integer appID = 1; Integer revision = 1; FieldValue fv = new FieldValue(); fv.setType(FieldType.SINGLE_LINE_TEXT); fv.setValue(\"sample_updateRecordByUpdateKey\"); record.put(\"FieldCode1\", fv); bulkRequestManager.updateRecordByUpdateKey(appID, uKey, record, revision);","title":"Sample code"},{"location":"reference/bulk-request/#updaterecordsapp-records","text":"Parameter See at Record - updateRecords Return BulkRequest","title":"updateRecords(app, records)"},{"location":"reference/bulk-request/#sample-code_5","text":"update multiple Records Source code BulkRequest bulkRequestManager = new BulkRequest(connection); HashMap record1 = new HashMap (); HashMap record2 = new HashMap (); Integer appID = 1; Integer recordId1 = 1; Integer recordId2 = 2; Integer revision = 1; FieldValue fv1 = new FieldValue(); fv1.setType(FieldType.SINGLE_LINE_TEXT); fv1.setValue(\"test_updateRecords1\"); FieldValue fv2 = new FieldValue(); fv2.setType(FieldType.SINGLE_LINE_TEXT); fv2.setValue(\"test_updateRecords2\"); record1.put(\"FieldCode1\", fv1); record2.put(\"FieldCode1\", fv2); ArrayList records = new ArrayList (); records.add(new RecordUpdateItem(recordId1, revision, null, record1)); records.add(new RecordUpdateItem(recordId2, null, null, record2)); bulkRequestManager.updateRecords(appID, records);","title":"Sample code"},{"location":"reference/bulk-request/#deleterecordsapp-ids","text":"Parameter See at Record - deleteRecords Return BulkRequest","title":"deleteRecords(app, ids)"},{"location":"reference/bulk-request/#sample-code_6","text":"Bulk Delete Records Source code BulkRequest bulkRequestManager = new BulkRequest(connection); Integer appID = 1; ArrayList ids = new ArrayList (); ids.add(1); ids.add(2); bulkRequestManager.deleteRecords(appID, ids);","title":"Sample code"},{"location":"reference/bulk-request/#deleterecordswithrevisionapp-idswithrevision","text":"Parameter See at Record - deleteRecordsWithRevision Return BulkRequest","title":"deleteRecordsWithRevision(app, idsWithRevision)"},{"location":"reference/bulk-request/#sample-code_7","text":"delete Records With Revision Source code BulkRequest bulkRequestManager = new BulkRequest(connection); HashMap idsWithRevision = new HashMap (); Integer appID = 1; idsWithRevision.put(1, 1); idsWithRevision.put(2, null); idsWithRevision.put(3, -1); bulkRequestManager.deleteRecordsWithRevision(appID, idsWithRevision);","title":"Sample code"},{"location":"reference/bulk-request/#updaterecordassigneesapp-record-assignees-revision","text":"Parameter See at Record - updateRecordAssignees Return BulkRequest","title":"updateRecordAssignees(app, record, assignees, revision)"},{"location":"reference/bulk-request/#sample-code_8","text":"Update the Assignees for the record Source code BulkRequest bulkRequestManager = new BulkRequest(connection); Integer appID = 1; Integer recordID =1; Integer revision = 1; ArrayList assignees = new ArrayList (); assignees.add(\"sample_user\"); bulkRequestManager.updateRecordAssignees(appID, recordID, assignees, revision);","title":"Sample code"},{"location":"reference/bulk-request/#updaterecordstatusapp-id-action-assignee-revision","text":"Parameter See at Record - updateRecordStatus Return BulkRequest","title":"updateRecordStatus(app, id, action, assignee, revision)"},{"location":"reference/bulk-request/#sample-code_9","text":"Update the status of a single record Source code BulkRequest bulkRequestManager = new BulkRequest(connection); Integer appID = 1; Integer recordID =1; String action = \"\u51e6\u7406\u958b\u59cb\"; String assignee = \"sample_user\"; Integer revision = 1; bulkRequestManager.updateRecordStatus(appID, recordID, action, assignee, revision);","title":"Sample code"},{"location":"reference/bulk-request/#updaterecordsstatusapp-records","text":"Parameter See at Record - updateRecordsStatus Return BulkRequest","title":"updateRecordsStatus(app, records)"},{"location":"reference/bulk-request/#sample-code_10","text":"Update the status of multiple records in bulk Source code BulkRequest bulkRequestManager = new BulkRequest(connection); ArrayList rusi = new ArrayList (); Integer appID = 1; String action = \"\u51e6\u7406\u958b\u59cb\"; String assignee = \"sample_user1\"; Integer recordID1 =1; Integer recordID2 =2; Integer recordID3 =3; Integer revision1 = 1; Integer revision2 = null; Integer revision3 = -1; rusi.add(new RecordUpdateStatusItem(action, assignee, recordID1, revision1)); rusi.add(new RecordUpdateStatusItem(action, assignee, recordID2, revision2)); rusi.add(new RecordUpdateStatusItem(action, assignee, recordID3, revision3)); bulkRequestManager.updateRecordsStatus(appID, rusi);","title":"Sample code"},{"location":"reference/bulk-request/#execute","text":"Execute the bulk request and get data response Parameter (none) Return BulkRequestResponse","title":"execute()"},{"location":"reference/bulk-request/#sample-code_11","text":"Execute bulk request Source code BulkRequest bulkRequestManager = new BulkRequest(connection); bulkRequestManager.addRecord(/*[Args]*/); bulkRequestManager.addRecords(/*[Args]*/); bulkRequestManager.updateRecords(/*[Args]*/); bulkRequestManager.deleteRecords(/*[Args]*/); try { BulkRequestResponse responses = bulkRequestManager.execute(); } catch (Exception e) { System.out.println(e.getMessage()); }","title":"Sample code"},{"location":"reference/bulk-request/#reference","text":"Get Record on developer network","title":"Reference"},{"location":"reference/connection/","text":"Connection Connection module will used as a connector to connect to kintone Rest API Constructor Parameter Name Type Required Description domain String yes The Domain name or FQDN auth Auth yes The authentication object guestSpaceID Integer (optional) The guest space id. Use this parameter to connect to kintone guest space. Sample code Init Connection module Source code // Define Authentication object Auth kintoneAuth = new Auth(); String username = \"cybozu\"; String password = \"cybozu\"; kintoneAuth.setPasswordAuth(username, password); String myDomainName = \"sample.cybozu.com\"; Connection connection = new Connection(myDomainName, kintoneAuth); // Define connection that included guest space int guestSpaceID = 1; Connection kintoneConnectionWithGuestSpaceDemo = new Connection(myDomainName, kintoneAuth, guestSpaceID); Methods setHeader(key, value) Set new header of the Connection Parameter Name Type Required Description key String yes The header's key name value String yes The header's value of key Return Connection Sample code Set header of the Connection Source code String username = \"cybozu\"; String password = \"cybozu\"; String key = \"X-HTTP-Method-Override\"; String value = \"GET\"; // Init authenticationAuth Auth kintoneAuth = new Auth(); kintoneAuth.setPasswordAuth(username, password); String myDomainName = \"sample.cybozu.com\"; Connection connection = new Connection(myDomainName, kintoneAuth); connection.setHeader(key, value); setProxy(proxyHost, proxyPort) Set the proxy of the request Parameter Name Type Required Description proxyHost String yes The proxy host name proxyPort Integer yes The proxy port number Return (none) Sample code Set the proxy of the request Source code String username = \"cybozu\"; String password = \"cybozu\"; String proxyHost = \"xxxx\"; Integer proxyPort = 1234; // Init authenticationAuth Auth kintoneAuth = new Auth(); kintoneAuth.setPasswordAuth(username, password); String myDomainName = \"sample.cybozu.com\"; Connection connection = new Connection(myDomainName, kintoneAuth); connection.setProxy(proxyHost, proxyPort);","title":"Connection"},{"location":"reference/connection/#connection","text":"Connection module will used as a connector to connect to kintone Rest API","title":"Connection"},{"location":"reference/connection/#constructor","text":"Parameter Name Type Required Description domain String yes The Domain name or FQDN auth Auth yes The authentication object guestSpaceID Integer (optional) The guest space id. Use this parameter to connect to kintone guest space. Sample code Init Connection module Source code // Define Authentication object Auth kintoneAuth = new Auth(); String username = \"cybozu\"; String password = \"cybozu\"; kintoneAuth.setPasswordAuth(username, password); String myDomainName = \"sample.cybozu.com\"; Connection connection = new Connection(myDomainName, kintoneAuth); // Define connection that included guest space int guestSpaceID = 1; Connection kintoneConnectionWithGuestSpaceDemo = new Connection(myDomainName, kintoneAuth, guestSpaceID);","title":"Constructor"},{"location":"reference/connection/#methods","text":"","title":"Methods"},{"location":"reference/connection/#setheaderkey-value","text":"Set new header of the Connection Parameter Name Type Required Description key String yes The header's key name value String yes The header's value of key Return Connection Sample code Set header of the Connection Source code String username = \"cybozu\"; String password = \"cybozu\"; String key = \"X-HTTP-Method-Override\"; String value = \"GET\"; // Init authenticationAuth Auth kintoneAuth = new Auth(); kintoneAuth.setPasswordAuth(username, password); String myDomainName = \"sample.cybozu.com\"; Connection connection = new Connection(myDomainName, kintoneAuth); connection.setHeader(key, value);","title":"setHeader(key, value)"},{"location":"reference/connection/#setproxyproxyhost-proxyport","text":"Set the proxy of the request Parameter Name Type Required Description proxyHost String yes The proxy host name proxyPort Integer yes The proxy port number Return (none) Sample code Set the proxy of the request Source code String username = \"cybozu\"; String password = \"cybozu\"; String proxyHost = \"xxxx\"; Integer proxyPort = 1234; // Init authenticationAuth Auth kintoneAuth = new Auth(); kintoneAuth.setPasswordAuth(username, password); String myDomainName = \"sample.cybozu.com\"; Connection connection = new Connection(myDomainName, kintoneAuth); connection.setProxy(proxyHost, proxyPort);","title":"setProxy(proxyHost, proxyPort)"},{"location":"reference/file-model/","text":"File Model Holds file information obtained from kintone. Methods getFileKey() Get the file key of the uploaded file. Parameter (none) Return String Sample code Get the file key of the uploaded file Source code String appId = 1; Integer recordID = 1; Integer revision = -1; String uploadPath = \"C:/Users/Administrator/Desktop/upload\"; // file upload File file = new File(connection); FileModel fileModel = file.upload(uploadPath + \"test.txt\"); // update reocrd fileParam.put(\"fileKey\", fileModel.getFileKey()); fkeyList.add(fileParam); fval.setValue(fkeyList); updateParam.put(\"attachment1\", fval); Record recordManagement = new Record(connection); UpdateRecordResponse updRes = recordManagement.updateRecordByID(appId, recordID, updateParam, revision); getName() Get the name of the uploaded file. Parameter (none) Return String Sample code Get the name of the uploaded file Source code String appId = 1; Integer recordID = 3; String downloadPath = \"C:/Users/Administrator/Desktop/download\"; // get record Record record = new Record(connection); GetRecordResponse recordJson = record.getRecord(appId, recordID); HashMap recordVal = recordJson.getRecord(); FieldValue fileVal = recordVal.get(\"attachment1\"); ArrayList fileList = (ArrayList ) fileVal.getValue(); // donwnload file FileModel fdata = fileList.get(0); File file = new File(connection); file.download(fdata.getFileKey(), downloadPath + fdata.getName());","title":"FileModel"},{"location":"reference/file-model/#file-model","text":"Holds file information obtained from kintone.","title":"File Model"},{"location":"reference/file-model/#methods","text":"","title":"Methods"},{"location":"reference/file-model/#getfilekey","text":"Get the file key of the uploaded file. Parameter (none) Return String Sample code Get the file key of the uploaded file Source code String appId = 1; Integer recordID = 1; Integer revision = -1; String uploadPath = \"C:/Users/Administrator/Desktop/upload\"; // file upload File file = new File(connection); FileModel fileModel = file.upload(uploadPath + \"test.txt\"); // update reocrd fileParam.put(\"fileKey\", fileModel.getFileKey()); fkeyList.add(fileParam); fval.setValue(fkeyList); updateParam.put(\"attachment1\", fval); Record recordManagement = new Record(connection); UpdateRecordResponse updRes = recordManagement.updateRecordByID(appId, recordID, updateParam, revision);","title":"getFileKey()"},{"location":"reference/file-model/#getname","text":"Get the name of the uploaded file. Parameter (none) Return String Sample code Get the name of the uploaded file Source code String appId = 1; Integer recordID = 3; String downloadPath = \"C:/Users/Administrator/Desktop/download\"; // get record Record record = new Record(connection); GetRecordResponse recordJson = record.getRecord(appId, recordID); HashMap recordVal = recordJson.getRecord(); FieldValue fileVal = recordVal.get(\"attachment1\"); ArrayList fileList = (ArrayList ) fileVal.getValue(); // donwnload file FileModel fdata = fileList.get(0); File file = new File(connection); file.download(fdata.getFileKey(), downloadPath + fdata.getName());","title":"getName()"},{"location":"reference/file/","text":"File Provide manipulate functions on file: file download & file upload in the kintone app. Constructor Parameter Name Type Required Description connection Connection yes The connection module of this SDK. Sample code Initial file class Source code File fileManagement = new File(connection); Methods upload(filePath) Upload file kintone via Rest API Parameter Name Type Required Description filePath String yes The full path of file on your environment Return FileModel Sample code Get app sample Source code String username = \"cybozu\"; String password = \"cybozu\"; // Init authenticationAuth Auth kintoneAuth = new Auth(); kintoneAuth.setPasswordAuth(username, password); // Init Connection String myDomainName = \"sample.cybozu.com\"; Connection kintoneOnDemoDomain = new Connection(myDomainName, kintoneAuth); // Init File Module File kintoneFileManager = new File(kintoneOnDemoDomain); // execute upload file API String uploadPath = \"C:/Users/Administrator/Desktop/upload\"; FileModel fileModel = kintoneFileManager .upload(uploadPath + \"test.txt\"); download(fileKey, outPutFilePath) Download file kintone via Rest API Parameter Name Type Required Description fileKey String yes The file key of the uploaded file on kintone outPutFilePath String yes The full path of output file on your environment Return (none) Sample code Get apps sample Source code String username = \"cybozu\"; String password = \"cybozu\"; // Init authenticationAuth Auth kintoneAuth = new Auth(); kintoneAuth.setPasswordAuth(username, password); String myDomainName = \"sample.cybozu.com\"; Connection kintoneOnDemoDomain = new Connection(myDomainName, kintoneAuth); // Init File Module File kintoneFileManager = new File(kintoneOnDemoDomain); // Init Record Module Record kintonRecordManager = new Record(kintoneOnDemoDomain); // get filekey Integer appID = 1; Integer recordID =1; GetRecordResponse recordJson = kintonRecordManager.getRecord(appID, recordID); HashMap recordVal = recordJson.getRecord(); FieldValue fileVal = recordVal.get(\"TempFile\"); ArrayList fileList = (ArrayList ) fileVal.getValue(); // execute download file API String downloadPath = \"C:/Users/Administrator/Desktop/\"; for (int i = 0; i < fileList.size(); i++) { FileModel fdata = fileList.get(i); kintoneFileManager.download(fdata.getFileKey(), downloadPath + fdata.getName()); }","title":"File"},{"location":"reference/file/#file","text":"Provide manipulate functions on file: file download & file upload in the kintone app.","title":"File"},{"location":"reference/file/#constructor","text":"Parameter Name Type Required Description connection Connection yes The connection module of this SDK. Sample code Initial file class Source code File fileManagement = new File(connection);","title":"Constructor"},{"location":"reference/file/#methods","text":"","title":"Methods"},{"location":"reference/file/#uploadfilepath","text":"Upload file kintone via Rest API Parameter Name Type Required Description filePath String yes The full path of file on your environment Return FileModel Sample code Get app sample Source code String username = \"cybozu\"; String password = \"cybozu\"; // Init authenticationAuth Auth kintoneAuth = new Auth(); kintoneAuth.setPasswordAuth(username, password); // Init Connection String myDomainName = \"sample.cybozu.com\"; Connection kintoneOnDemoDomain = new Connection(myDomainName, kintoneAuth); // Init File Module File kintoneFileManager = new File(kintoneOnDemoDomain); // execute upload file API String uploadPath = \"C:/Users/Administrator/Desktop/upload\"; FileModel fileModel = kintoneFileManager .upload(uploadPath + \"test.txt\");","title":"upload(filePath)"},{"location":"reference/file/#downloadfilekey-outputfilepath","text":"Download file kintone via Rest API Parameter Name Type Required Description fileKey String yes The file key of the uploaded file on kintone outPutFilePath String yes The full path of output file on your environment Return (none) Sample code Get apps sample Source code String username = \"cybozu\"; String password = \"cybozu\"; // Init authenticationAuth Auth kintoneAuth = new Auth(); kintoneAuth.setPasswordAuth(username, password); String myDomainName = \"sample.cybozu.com\"; Connection kintoneOnDemoDomain = new Connection(myDomainName, kintoneAuth); // Init File Module File kintoneFileManager = new File(kintoneOnDemoDomain); // Init Record Module Record kintonRecordManager = new Record(kintoneOnDemoDomain); // get filekey Integer appID = 1; Integer recordID =1; GetRecordResponse recordJson = kintonRecordManager.getRecord(appID, recordID); HashMap recordVal = recordJson.getRecord(); FieldValue fileVal = recordVal.get(\"TempFile\"); ArrayList fileList = (ArrayList ) fileVal.getValue(); // execute download file API String downloadPath = \"C:/Users/Administrator/Desktop/\"; for (int i = 0; i < fileList.size(); i++) { FileModel fdata = fileList.get(i); kintoneFileManager.download(fdata.getFileKey(), downloadPath + fdata.getName()); }","title":"download(fileKey, outPutFilePath)"},{"location":"reference/form-fields-input-lookup/","text":"Lookup Get a list of fields and their settings. Permissions to view the App is needed. API Tokens cannot be used with this API. LookupField Warning extend the abstract class \" AbstractInputField \" Methods getLookup() Get the lookup Parameter (none) Return LookupItem Sample code get Lookup Source code LookupItem lookup = lookupField.getLookup(); LookupItem Methods getFieldMapping() Get the fieldMapping Parameter (none) Return List< FieldMapping > Sample code get Field Mapping Source code List fieldMapping = lookupItem.getFieldMapping(); getFilterCond() Get the filterCond Parameter (none) Return String Sample code get Filter Cond Source code String filterCond = lookupItem.getFilterCond(); getLookupPickerFields() Get the lookupPickerFields Parameter (none) Return List<String> Sample code get Lookup Picker Fields Source code List lookupPickerFields = lookupItem.getLookupPickerFields(); getRelatedApp() Get the relatedApp Parameter (none) Return RelatedApp Sample code get Related App Source code RelatedApp relatedApp = lookupItem.getRelatedApp(); getRelatedKeyField() Get the relatedKeyField Parameter (none) Return String Sample code get Related App Source code String relatedKeyField = lookupItem.getRelatedKeyField(); getSort() Get the sort Parameter (none) Return String Sample code get Sort Source code String sort = lookupItem.getSort(); Reference Get App on developer network Get Apps on developer network Get Form fields on developer network Get Form Layout on developer network","title":"Lookup"},{"location":"reference/form-fields-input-lookup/#lookup","text":"Get a list of fields and their settings. Permissions to view the App is needed. API Tokens cannot be used with this API.","title":"Lookup"},{"location":"reference/form-fields-input-lookup/#lookupfield","text":"Warning extend the abstract class \" AbstractInputField \"","title":"LookupField"},{"location":"reference/form-fields-input-lookup/#methods","text":"","title":"Methods"},{"location":"reference/form-fields-input-lookup/#getlookup","text":"Get the lookup Parameter (none) Return LookupItem Sample code get Lookup Source code LookupItem lookup = lookupField.getLookup();","title":"getLookup()"},{"location":"reference/form-fields-input-lookup/#lookupitem","text":"","title":"LookupItem"},{"location":"reference/form-fields-input-lookup/#methods_1","text":"","title":"Methods"},{"location":"reference/form-fields-input-lookup/#getfieldmapping","text":"Get the fieldMapping Parameter (none) Return List< FieldMapping > Sample code get Field Mapping Source code List fieldMapping = lookupItem.getFieldMapping();","title":"getFieldMapping()"},{"location":"reference/form-fields-input-lookup/#getfiltercond","text":"Get the filterCond Parameter (none) Return String Sample code get Filter Cond Source code String filterCond = lookupItem.getFilterCond();","title":"getFilterCond()"},{"location":"reference/form-fields-input-lookup/#getlookuppickerfields","text":"Get the lookupPickerFields Parameter (none) Return List<String> Sample code get Lookup Picker Fields Source code List lookupPickerFields = lookupItem.getLookupPickerFields();","title":"getLookupPickerFields()"},{"location":"reference/form-fields-input-lookup/#getrelatedapp","text":"Get the relatedApp Parameter (none) Return RelatedApp Sample code get Related App Source code RelatedApp relatedApp = lookupItem.getRelatedApp();","title":"getRelatedApp()"},{"location":"reference/form-fields-input-lookup/#getrelatedkeyfield","text":"Get the relatedKeyField Parameter (none) Return String Sample code get Related App Source code String relatedKeyField = lookupItem.getRelatedKeyField();","title":"getRelatedKeyField()"},{"location":"reference/form-fields-input-lookup/#getsort","text":"Get the sort Parameter (none) Return String Sample code get Sort Source code String sort = lookupItem.getSort();","title":"getSort()"},{"location":"reference/form-fields-input-lookup/#reference","text":"Get App on developer network Get Apps on developer network Get Form fields on developer network Get Form Layout on developer network","title":"Reference"},{"location":"reference/form-fields-input-member/","text":"Member Get a list of fields and their settings. Permissions to view the App is needed. API Tokens cannot be used with this API. DepartmentSelectionField Warning extend the abstract class \" AbstractMemberSelectField \" Methods (none) GroupSelectionField Warning extend the abstract class \" AbstractMemberSelectField \" Methods (none) MemberSelectEntity Methods getCode() Get the code Parameter (none) Return String Sample code get Code Source code String code = memberSelectEntity.getCode(); getType() Get the type Parameter (none) Return MemberSelectEntityType Sample code get Code Source code MemberSelectEntityType type = memberSelectEntity.getType(); UserSelectionField Warning extend the abstract class \" AbstractMemberSelectField \" Methods (none) AbstractMemberSelectField Warning extend the abstract class \" AbstractInputField \" This class is an abstract class. Methods getDefaultValue() Get the defaultValue Parameter (none) Return List< MemberSelectEntity > getEntites() Get the entites Parameter (none) Return List< MemberSelectEntity > Reference Get App on developer network Get Apps on developer network Get Form fields on developer network Get Form Layout on developer network","title":"Member"},{"location":"reference/form-fields-input-member/#member","text":"Get a list of fields and their settings. Permissions to view the App is needed. API Tokens cannot be used with this API.","title":"Member"},{"location":"reference/form-fields-input-member/#departmentselectionfield","text":"Warning extend the abstract class \" AbstractMemberSelectField \"","title":"DepartmentSelectionField"},{"location":"reference/form-fields-input-member/#methods","text":"(none)","title":"Methods"},{"location":"reference/form-fields-input-member/#groupselectionfield","text":"Warning extend the abstract class \" AbstractMemberSelectField \"","title":"GroupSelectionField"},{"location":"reference/form-fields-input-member/#methods_1","text":"(none)","title":"Methods"},{"location":"reference/form-fields-input-member/#memberselectentity","text":"","title":"MemberSelectEntity"},{"location":"reference/form-fields-input-member/#methods_2","text":"","title":"Methods"},{"location":"reference/form-fields-input-member/#getcode","text":"Get the code Parameter (none) Return String Sample code get Code Source code String code = memberSelectEntity.getCode();","title":"getCode()"},{"location":"reference/form-fields-input-member/#gettype","text":"Get the type Parameter (none) Return MemberSelectEntityType Sample code get Code Source code MemberSelectEntityType type = memberSelectEntity.getType();","title":"getType()"},{"location":"reference/form-fields-input-member/#userselectionfield","text":"Warning extend the abstract class \" AbstractMemberSelectField \"","title":"UserSelectionField"},{"location":"reference/form-fields-input-member/#methods_3","text":"(none)","title":"Methods"},{"location":"reference/form-fields-input-member/#abstractmemberselectfield","text":"Warning extend the abstract class \" AbstractInputField \" This class is an abstract class.","title":"AbstractMemberSelectField"},{"location":"reference/form-fields-input-member/#methods_4","text":"","title":"Methods"},{"location":"reference/form-fields-input-member/#getdefaultvalue","text":"Get the defaultValue Parameter (none) Return List< MemberSelectEntity >","title":"getDefaultValue()"},{"location":"reference/form-fields-input-member/#getentites","text":"Get the entites Parameter (none) Return List< MemberSelectEntity >","title":"getEntites()"},{"location":"reference/form-fields-input-member/#reference","text":"Get App on developer network Get Apps on developer network Get Form fields on developer network Get Form Layout on developer network","title":"Reference"},{"location":"reference/form-fields-input-selection/","text":"Selection Get a list of fields and their settings. Permissions to view the App is needed. API Tokens cannot be used with this API. CheckboxField Warning extend the abstract class \" AbstractSelectionField \" Methods getAlign() Get the align Parameter (none) Return AlignLayout Sample code get Align Source code AlignLayout align = checkboxField.getAlign(); getDefaultValue() Get the defaultValue Parameter (none) Return List<String> Sample code get Default Value Source code List defaultValue = checkboxField.getDefaultValue(); DropDownField Warning extend the abstract class \" AbstractSelectionField \" Methods getDefaultValue() Get the defaultValue Parameter (none) Return String Sample code get Default Value Source code String defaultValue = dropDownField.getDefaultValue(); MultipleSelectField Warning extend the abstract class \" AbstractSelectionField \" Methods getDefaultValue() Get the defaultValue Parameter (none) Return List<String> Sample code get Default Value Source code List defaultValue = multipleSelectField.getDefaultValue(); OptionData Methods getIndex() Get the index Parameter (none) Return Integer Sample code get Index Source code Integer index = optionData.getIndex(); getLabel() Get the label Parameter (none) Return String Sample code get Label Source code String label = optionData.getLabel(); RadioButtonField Warning extend the abstract class \" AbstractSelectionField \" Methods getAlign() Get the align Parameter (none) Return AlignLayout Sample code get Align Source code AlignLayout align = radioButtonField.getAlign(); getDefaultValue() Get the defaultValue Parameter (none) Return String Sample code get Default Value Source code String defaultValue = radioButtonField.getDefaultValue(); AbstractSelectionField Warning extend the abstract class \" AbstractInputField \" This class is an abstract class. Methods getOptions() Get the options Parameter (none) Return Map<String, OptionData > Reference Get App on developer network Get Apps on developer network Get Form fields on developer network Get Form Layout on developer network","title":"Selection"},{"location":"reference/form-fields-input-selection/#selection","text":"Get a list of fields and their settings. Permissions to view the App is needed. API Tokens cannot be used with this API.","title":"Selection"},{"location":"reference/form-fields-input-selection/#checkboxfield","text":"Warning extend the abstract class \" AbstractSelectionField \"","title":"CheckboxField"},{"location":"reference/form-fields-input-selection/#methods","text":"","title":"Methods"},{"location":"reference/form-fields-input-selection/#getalign","text":"Get the align Parameter (none) Return AlignLayout Sample code get Align Source code AlignLayout align = checkboxField.getAlign();","title":"getAlign()"},{"location":"reference/form-fields-input-selection/#getdefaultvalue","text":"Get the defaultValue Parameter (none) Return List<String> Sample code get Default Value Source code List defaultValue = checkboxField.getDefaultValue();","title":"getDefaultValue()"},{"location":"reference/form-fields-input-selection/#dropdownfield","text":"Warning extend the abstract class \" AbstractSelectionField \"","title":"DropDownField"},{"location":"reference/form-fields-input-selection/#methods_1","text":"","title":"Methods"},{"location":"reference/form-fields-input-selection/#getdefaultvalue_1","text":"Get the defaultValue Parameter (none) Return String Sample code get Default Value Source code String defaultValue = dropDownField.getDefaultValue();","title":"getDefaultValue()"},{"location":"reference/form-fields-input-selection/#multipleselectfield","text":"Warning extend the abstract class \" AbstractSelectionField \"","title":"MultipleSelectField"},{"location":"reference/form-fields-input-selection/#methods_2","text":"","title":"Methods"},{"location":"reference/form-fields-input-selection/#getdefaultvalue_2","text":"Get the defaultValue Parameter (none) Return List<String> Sample code get Default Value Source code List defaultValue = multipleSelectField.getDefaultValue();","title":"getDefaultValue()"},{"location":"reference/form-fields-input-selection/#optiondata","text":"","title":"OptionData"},{"location":"reference/form-fields-input-selection/#methods_3","text":"","title":"Methods"},{"location":"reference/form-fields-input-selection/#getindex","text":"Get the index Parameter (none) Return Integer Sample code get Index Source code Integer index = optionData.getIndex();","title":"getIndex()"},{"location":"reference/form-fields-input-selection/#getlabel","text":"Get the label Parameter (none) Return String Sample code get Label Source code String label = optionData.getLabel();","title":"getLabel()"},{"location":"reference/form-fields-input-selection/#radiobuttonfield","text":"Warning extend the abstract class \" AbstractSelectionField \"","title":"RadioButtonField"},{"location":"reference/form-fields-input-selection/#methods_4","text":"","title":"Methods"},{"location":"reference/form-fields-input-selection/#getalign_1","text":"Get the align Parameter (none) Return AlignLayout Sample code get Align Source code AlignLayout align = radioButtonField.getAlign();","title":"getAlign()"},{"location":"reference/form-fields-input-selection/#getdefaultvalue_3","text":"Get the defaultValue Parameter (none) Return String Sample code get Default Value Source code String defaultValue = radioButtonField.getDefaultValue();","title":"getDefaultValue()"},{"location":"reference/form-fields-input-selection/#abstractselectionfield","text":"Warning extend the abstract class \" AbstractInputField \" This class is an abstract class.","title":"AbstractSelectionField"},{"location":"reference/form-fields-input-selection/#methods_5","text":"","title":"Methods"},{"location":"reference/form-fields-input-selection/#getoptions","text":"Get the options Parameter (none) Return Map<String, OptionData >","title":"getOptions()"},{"location":"reference/form-fields-input-selection/#reference","text":"Get App on developer network Get Apps on developer network Get Form fields on developer network Get Form Layout on developer network","title":"Reference"},{"location":"reference/form-fields-input-time/","text":"Time Get a list of fields and their settings. Permissions to view the App is needed. API Tokens cannot be used with this API. DateField Warning extend the abstract class \" AbstractInputField \" Methods getUnique() Get the unique Parameter (none) Return Boolean Sample code get Unique Source code Boolean unique = dateField.getUnique(); getDefaultValue() Get the defaultValue Parameter (none) Return String Sample code get Default Value Source code String defaultValue = dateField.getDefaultValue(); getDefaultNowValue() Get the defaultNowValue Parameter (none) Return Boolean Sample code get Default Now Value Source code Boolean defaultNowValue = dateField.getDefaultNowValue(); DateTimeField Warning extend the abstract class \" AbstractInputField \" Methods getUnique() Get the unique Parameter (none) Return Boolean Sample code get Unique Source code Boolean unique = dateTimeField.getUnique(); getDefaultValue() Get the defaultValue Parameter (none) Return String Sample code get Default Value Source code String defaultValue = dateTimeField.getDefaultValue(); getDefaultNowValue() Get the defaultNowValue Parameter (none) Return Boolean Sample code get Default Now Value Source code Boolean defaultNowValue = dateTimeField.getDefaultNowValue(); TimeField Warning extend the abstract class \" AbstractInputField \" Methods getDefaultValue() Get the defaultValue Parameter (none) Return String Sample code get Default Value Source code String defaultValue = timeField.getDefaultValue(); getDefaultNowValue() Get the defaultNowValue Parameter (none) Return Boolean Sample code get Default Now Value Source code Boolean defaultNowValue = timeField.getDefaultNowValue(); Reference Get App on developer network Get Apps on developer network Get Form fields on developer network Get Form Layout on developer network","title":"Time"},{"location":"reference/form-fields-input-time/#time","text":"Get a list of fields and their settings. Permissions to view the App is needed. API Tokens cannot be used with this API.","title":"Time"},{"location":"reference/form-fields-input-time/#datefield","text":"Warning extend the abstract class \" AbstractInputField \"","title":"DateField"},{"location":"reference/form-fields-input-time/#methods","text":"","title":"Methods"},{"location":"reference/form-fields-input-time/#getunique","text":"Get the unique Parameter (none) Return Boolean Sample code get Unique Source code Boolean unique = dateField.getUnique();","title":"getUnique()"},{"location":"reference/form-fields-input-time/#getdefaultvalue","text":"Get the defaultValue Parameter (none) Return String Sample code get Default Value Source code String defaultValue = dateField.getDefaultValue();","title":"getDefaultValue()"},{"location":"reference/form-fields-input-time/#getdefaultnowvalue","text":"Get the defaultNowValue Parameter (none) Return Boolean Sample code get Default Now Value Source code Boolean defaultNowValue = dateField.getDefaultNowValue();","title":"getDefaultNowValue()"},{"location":"reference/form-fields-input-time/#datetimefield","text":"Warning extend the abstract class \" AbstractInputField \"","title":"DateTimeField"},{"location":"reference/form-fields-input-time/#methods_1","text":"","title":"Methods"},{"location":"reference/form-fields-input-time/#getunique_1","text":"Get the unique Parameter (none) Return Boolean Sample code get Unique Source code Boolean unique = dateTimeField.getUnique();","title":"getUnique()"},{"location":"reference/form-fields-input-time/#getdefaultvalue_1","text":"Get the defaultValue Parameter (none) Return String Sample code get Default Value Source code String defaultValue = dateTimeField.getDefaultValue();","title":"getDefaultValue()"},{"location":"reference/form-fields-input-time/#getdefaultnowvalue_1","text":"Get the defaultNowValue Parameter (none) Return Boolean Sample code get Default Now Value Source code Boolean defaultNowValue = dateTimeField.getDefaultNowValue();","title":"getDefaultNowValue()"},{"location":"reference/form-fields-input-time/#timefield","text":"Warning extend the abstract class \" AbstractInputField \"","title":"TimeField"},{"location":"reference/form-fields-input-time/#methods_2","text":"","title":"Methods"},{"location":"reference/form-fields-input-time/#getdefaultvalue_2","text":"Get the defaultValue Parameter (none) Return String Sample code get Default Value Source code String defaultValue = timeField.getDefaultValue();","title":"getDefaultValue()"},{"location":"reference/form-fields-input-time/#getdefaultnowvalue_2","text":"Get the defaultNowValue Parameter (none) Return Boolean Sample code get Default Now Value Source code Boolean defaultNowValue = timeField.getDefaultNowValue();","title":"getDefaultNowValue()"},{"location":"reference/form-fields-input-time/#reference","text":"Get App on developer network Get Apps on developer network Get Form fields on developer network Get Form Layout on developer network","title":"Reference"},{"location":"reference/form-fields-input/","text":"Input Get a list of fields and their settings. Permissions to view the App is needed. API Tokens cannot be used with this API. AttachmentField Warning extend the abstract class \" AbstractInputField \" Methods getThumbnailSize() Get the thumbnailSize Parameter (none) Return Integer Sample code get Thumbnail Size Source code Integer thumbnailSize = attachmentField.getThumbnailSize(); CalculatedField Warning extend the abstract class \" AbstractInputField \" Methods getExpression() Get the expression Parameter (none) Return String Sample code get Expression Source code String expression = calculatedField.getExpression(); getHideExpression() Get the hideExpression Parameter (none) Return Boolean Sample code get Hide Expression Source code Boolean hideExpression = calculatedField.getHideExpression(); getDisplayScale() Get the displayScale Parameter (none) Return Integer Sample code get Display Scale Source code Integer displayScale = calculatedField.getDisplayScale(); getUnit() Get the unit Parameter (none) Return String Sample code get Unit Source code String unit = calculatedField.getUnit(); getUnitPosition() Get the unitPosition Parameter (none) Return UnitPosition Sample code get Unit Position Source code UnitPosition unitPosition = calculatedField.getUnitPosition(); getFormat() Get the format Parameter (none) Return NumberFormat Sample code get Format Source code NumberFormat format = calculatedField.getFormat(); LinkField Warning extend the abstract class \" AbstractInputField \" Methods getDefaultValue() Get the defaultValue Parameter (none) Return String Sample code get Default Value Source code String defaultValue = linkField.getDefaultValue(); getUnique() Get the unique Parameter (none) Return Boolean Sample code get Unique Source code Boolean unique = linkField.getUnique(); getMaxLength() Get the maxLength Parameter (none) Return Integer Sample code get Max Length Source code Integer maxLength = linkField.getMaxLength(); getMinLength() Get the minLength Parameter (none) Return Integer Sample code get Min Length Source code Integer minLength = linkField.getMinLength(); getProtocol() Get the protocol Parameter (none) Return LinkProtocol Sample code get Protocol Source code LinkProtocol protocol = linkField.getProtocol(); MultiLineTextField Warning extend the abstract class \" AbstractInputField \" Methods getDefaultValue() Get the defaultValue Parameter (none) Return String Sample code get Default Value Source code String defaultValue = multiLineTextField.getDefaultValue(); NumberField Warning extend the abstract class \" AbstractInputField \" Methods getDisplayScale() Get the displayScale Parameter (none) Return Integer Sample code get Display Scale Source code Integer displayScale = numberField.getDisplayScale(); getUnit() Get the unit Parameter (none) Return String Sample code get Unit Source code String unit = numberField.getUnit(); getUnitPosition() Get the unitPosition Parameter (none) Return UnitPosition Sample code get Unit Position Source code UnitPosition unitPosition = numberField.getUnitPosition(); getDigit() Get the digit Parameter (none) Return Boolean Sample code get Digit Source code Boolean digit = numberField.getDigit(); getMaxValue() Get the maxValue Parameter (none) Return Integer Sample code get Max Value Source code Integer maxValue = numberField.getMaxValue(); getMinValue() Get the minValue Parameter (none) Return Integer Sample code get Min Value Source code Integer minValue = numberField.getMinValue(); getDefaultValue() Get the defaultValue Parameter (none) Return String Sample code get Default Value Source code String defaultValue = numberField.getDefaultValue(); getUnique() Get the unique Parameter (none) Return Boolean Sample code get Unique Source code Boolean unique = numberField.getUnique(); RichTextField Warning extend the abstract class \" AbstractInputField \" Methods getDefaultValue() Get the defaultValue Parameter (none) Return String Sample code get Default Value Source code String defaultValue = richTextField.getDefaultValue(); SingleLineTextField Warning extend the abstract class \" AbstractInputField \" Methods getMinLength() Get the minLength Parameter (none) Return Integer Sample code get Min Length Source code Integer minLength = singleLineTextField.getMinLength(); getMaxLength() Get the maxLength Parameter (none) Return Integer Sample code get Max Length Source code Integer maxLength = singleLineTextField.getMaxLength(); getExpression() Get the expression Parameter (none) Return String Sample code get Expression Source code String expression = singleLineTextField.getExpression(); getHideExpression() Get the hideExpression Parameter (none) Return Boolean Sample code get Hide Expression Source code Boolean hideExpression = singleLineTextField.getHideExpression(); getDefaultValue() Get the defaultValue Parameter (none) Return String Sample code get Default Value Source code String defaultValue = singleLineTextField.getDefaultValue(); getUnique() Get the unique Parameter (none) Return Boolean Sample code get Unique Source code Boolean unique = singleLineTextField.getUnique(); AbstractInputField Warning extend the abstract class \" Field \" This class is an abstract class. Methods getLabel() Get the label Parameter (none) Return String getNoLabel() Get the noLabel Parameter (none) Return Boolean getRequired() Get the required Parameter (none) Return Boolean Reference Get App on developer network Get Apps on developer network Get Form fields on developer network Get Form Layout on developer network","title":"Input"},{"location":"reference/form-fields-input/#input","text":"Get a list of fields and their settings. Permissions to view the App is needed. API Tokens cannot be used with this API.","title":"Input"},{"location":"reference/form-fields-input/#attachmentfield","text":"Warning extend the abstract class \" AbstractInputField \"","title":"AttachmentField"},{"location":"reference/form-fields-input/#methods","text":"","title":"Methods"},{"location":"reference/form-fields-input/#getthumbnailsize","text":"Get the thumbnailSize Parameter (none) Return Integer Sample code get Thumbnail Size Source code Integer thumbnailSize = attachmentField.getThumbnailSize();","title":"getThumbnailSize()"},{"location":"reference/form-fields-input/#calculatedfield","text":"Warning extend the abstract class \" AbstractInputField \"","title":"CalculatedField"},{"location":"reference/form-fields-input/#methods_1","text":"","title":"Methods"},{"location":"reference/form-fields-input/#getexpression","text":"Get the expression Parameter (none) Return String Sample code get Expression Source code String expression = calculatedField.getExpression();","title":"getExpression()"},{"location":"reference/form-fields-input/#gethideexpression","text":"Get the hideExpression Parameter (none) Return Boolean Sample code get Hide Expression Source code Boolean hideExpression = calculatedField.getHideExpression();","title":"getHideExpression()"},{"location":"reference/form-fields-input/#getdisplayscale","text":"Get the displayScale Parameter (none) Return Integer Sample code get Display Scale Source code Integer displayScale = calculatedField.getDisplayScale();","title":"getDisplayScale()"},{"location":"reference/form-fields-input/#getunit","text":"Get the unit Parameter (none) Return String Sample code get Unit Source code String unit = calculatedField.getUnit();","title":"getUnit()"},{"location":"reference/form-fields-input/#getunitposition","text":"Get the unitPosition Parameter (none) Return UnitPosition Sample code get Unit Position Source code UnitPosition unitPosition = calculatedField.getUnitPosition();","title":"getUnitPosition()"},{"location":"reference/form-fields-input/#getformat","text":"Get the format Parameter (none) Return NumberFormat Sample code get Format Source code NumberFormat format = calculatedField.getFormat();","title":"getFormat()"},{"location":"reference/form-fields-input/#linkfield","text":"Warning extend the abstract class \" AbstractInputField \"","title":"LinkField"},{"location":"reference/form-fields-input/#methods_2","text":"","title":"Methods"},{"location":"reference/form-fields-input/#getdefaultvalue","text":"Get the defaultValue Parameter (none) Return String Sample code get Default Value Source code String defaultValue = linkField.getDefaultValue();","title":"getDefaultValue()"},{"location":"reference/form-fields-input/#getunique","text":"Get the unique Parameter (none) Return Boolean Sample code get Unique Source code Boolean unique = linkField.getUnique();","title":"getUnique()"},{"location":"reference/form-fields-input/#getmaxlength","text":"Get the maxLength Parameter (none) Return Integer Sample code get Max Length Source code Integer maxLength = linkField.getMaxLength();","title":"getMaxLength()"},{"location":"reference/form-fields-input/#getminlength","text":"Get the minLength Parameter (none) Return Integer Sample code get Min Length Source code Integer minLength = linkField.getMinLength();","title":"getMinLength()"},{"location":"reference/form-fields-input/#getprotocol","text":"Get the protocol Parameter (none) Return LinkProtocol Sample code get Protocol Source code LinkProtocol protocol = linkField.getProtocol();","title":"getProtocol()"},{"location":"reference/form-fields-input/#multilinetextfield","text":"Warning extend the abstract class \" AbstractInputField \"","title":"MultiLineTextField"},{"location":"reference/form-fields-input/#methods_3","text":"","title":"Methods"},{"location":"reference/form-fields-input/#getdefaultvalue_1","text":"Get the defaultValue Parameter (none) Return String Sample code get Default Value Source code String defaultValue = multiLineTextField.getDefaultValue();","title":"getDefaultValue()"},{"location":"reference/form-fields-input/#numberfield","text":"Warning extend the abstract class \" AbstractInputField \"","title":"NumberField"},{"location":"reference/form-fields-input/#methods_4","text":"","title":"Methods"},{"location":"reference/form-fields-input/#getdisplayscale_1","text":"Get the displayScale Parameter (none) Return Integer Sample code get Display Scale Source code Integer displayScale = numberField.getDisplayScale();","title":"getDisplayScale()"},{"location":"reference/form-fields-input/#getunit_1","text":"Get the unit Parameter (none) Return String Sample code get Unit Source code String unit = numberField.getUnit();","title":"getUnit()"},{"location":"reference/form-fields-input/#getunitposition_1","text":"Get the unitPosition Parameter (none) Return UnitPosition Sample code get Unit Position Source code UnitPosition unitPosition = numberField.getUnitPosition();","title":"getUnitPosition()"},{"location":"reference/form-fields-input/#getdigit","text":"Get the digit Parameter (none) Return Boolean Sample code get Digit Source code Boolean digit = numberField.getDigit();","title":"getDigit()"},{"location":"reference/form-fields-input/#getmaxvalue","text":"Get the maxValue Parameter (none) Return Integer Sample code get Max Value Source code Integer maxValue = numberField.getMaxValue();","title":"getMaxValue()"},{"location":"reference/form-fields-input/#getminvalue","text":"Get the minValue Parameter (none) Return Integer Sample code get Min Value Source code Integer minValue = numberField.getMinValue();","title":"getMinValue()"},{"location":"reference/form-fields-input/#getdefaultvalue_2","text":"Get the defaultValue Parameter (none) Return String Sample code get Default Value Source code String defaultValue = numberField.getDefaultValue();","title":"getDefaultValue()"},{"location":"reference/form-fields-input/#getunique_1","text":"Get the unique Parameter (none) Return Boolean Sample code get Unique Source code Boolean unique = numberField.getUnique();","title":"getUnique()"},{"location":"reference/form-fields-input/#richtextfield","text":"Warning extend the abstract class \" AbstractInputField \"","title":"RichTextField"},{"location":"reference/form-fields-input/#methods_5","text":"","title":"Methods"},{"location":"reference/form-fields-input/#getdefaultvalue_3","text":"Get the defaultValue Parameter (none) Return String Sample code get Default Value Source code String defaultValue = richTextField.getDefaultValue();","title":"getDefaultValue()"},{"location":"reference/form-fields-input/#singlelinetextfield","text":"Warning extend the abstract class \" AbstractInputField \"","title":"SingleLineTextField"},{"location":"reference/form-fields-input/#methods_6","text":"","title":"Methods"},{"location":"reference/form-fields-input/#getminlength_1","text":"Get the minLength Parameter (none) Return Integer Sample code get Min Length Source code Integer minLength = singleLineTextField.getMinLength();","title":"getMinLength()"},{"location":"reference/form-fields-input/#getmaxlength_1","text":"Get the maxLength Parameter (none) Return Integer Sample code get Max Length Source code Integer maxLength = singleLineTextField.getMaxLength();","title":"getMaxLength()"},{"location":"reference/form-fields-input/#getexpression_1","text":"Get the expression Parameter (none) Return String Sample code get Expression Source code String expression = singleLineTextField.getExpression();","title":"getExpression()"},{"location":"reference/form-fields-input/#gethideexpression_1","text":"Get the hideExpression Parameter (none) Return Boolean Sample code get Hide Expression Source code Boolean hideExpression = singleLineTextField.getHideExpression();","title":"getHideExpression()"},{"location":"reference/form-fields-input/#getdefaultvalue_4","text":"Get the defaultValue Parameter (none) Return String Sample code get Default Value Source code String defaultValue = singleLineTextField.getDefaultValue();","title":"getDefaultValue()"},{"location":"reference/form-fields-input/#getunique_2","text":"Get the unique Parameter (none) Return Boolean Sample code get Unique Source code Boolean unique = singleLineTextField.getUnique();","title":"getUnique()"},{"location":"reference/form-fields-input/#abstractinputfield","text":"Warning extend the abstract class \" Field \" This class is an abstract class.","title":"AbstractInputField"},{"location":"reference/form-fields-input/#methods_7","text":"","title":"Methods"},{"location":"reference/form-fields-input/#getlabel","text":"Get the label Parameter (none) Return String","title":"getLabel()"},{"location":"reference/form-fields-input/#getnolabel","text":"Get the noLabel Parameter (none) Return Boolean","title":"getNoLabel()"},{"location":"reference/form-fields-input/#getrequired","text":"Get the required Parameter (none) Return Boolean","title":"getRequired()"},{"location":"reference/form-fields-input/#reference","text":"Get App on developer network Get Apps on developer network Get Form fields on developer network Get Form Layout on developer network","title":"Reference"},{"location":"reference/form-fields-related_record/","text":"Related Record Get a list of fields and their settings. Permissions to view the App is needed. API Tokens cannot be used with this API. RelatedApp Methods getApp() Get the app Parameter (none) Return String Sample code get App Source code String app = relatedApp.getApp(); getCode() Get the code Parameter (none) Return String Sample code get Code Source code String app = relatedApp.getCode(); ReferenceTable Methods getCondition() Get the condition Parameter (none) Return FieldMapping Sample code get Condition Source code FieldMapping condition = referenceTable.getCondition(); getFilterCond() Get the filterCond Parameter (none) Return String Sample code get FilterCond Source code String filterCond = referenceTable.getFilterCond(); getRelatedApp() Get the relatedApp Parameter (none) Return RelatedApp Sample code get Related App Source code RelatedApp relatedApp = referenceTable.getRelatedApp(); getSize() Get the size Parameter (none) Return Integer Sample code get Size Source code Integer size = referenceTable.getSize(); getDisplayFields() Get the displayFields Parameter (none) Return List<String> Sample code get Display Fields Source code List displayFields = referenceTable.getDisplayFields(); getSort() Get the sort Parameter (none) Return String Sample code get Sort Source code String sort = referenceTable.getSort(); RelatedRecordsField Warning extend the abstract class \" Field \" Methods getLabel() Get the label Parameter (none) Return String Sample code get Label Source code String label = relatedRecordsField.getLabel(); getNoLabel() Get the noLabel Parameter (none) Return Boolean Sample code get NoLabel Source code Boolean noLabel = relatedRecordsField.getNoLabel(); getReferenceTable() Get the referenceTable Parameter (none) Return ReferenceTable Sample code get Reference Table Source code ReferenceTable referenceTable = relatedRecordsField.getReferenceTable(); Reference Get App on developer network Get Apps on developer network Get Form fields on developer network Get Form Layout on developer network","title":"Related_record"},{"location":"reference/form-fields-related_record/#related-record","text":"Get a list of fields and their settings. Permissions to view the App is needed. API Tokens cannot be used with this API.","title":"Related Record"},{"location":"reference/form-fields-related_record/#relatedapp","text":"","title":"RelatedApp"},{"location":"reference/form-fields-related_record/#methods","text":"","title":"Methods"},{"location":"reference/form-fields-related_record/#getapp","text":"Get the app Parameter (none) Return String Sample code get App Source code String app = relatedApp.getApp();","title":"getApp()"},{"location":"reference/form-fields-related_record/#getcode","text":"Get the code Parameter (none) Return String Sample code get Code Source code String app = relatedApp.getCode();","title":"getCode()"},{"location":"reference/form-fields-related_record/#referencetable","text":"","title":"ReferenceTable"},{"location":"reference/form-fields-related_record/#methods_1","text":"","title":"Methods"},{"location":"reference/form-fields-related_record/#getcondition","text":"Get the condition Parameter (none) Return FieldMapping Sample code get Condition Source code FieldMapping condition = referenceTable.getCondition();","title":"getCondition()"},{"location":"reference/form-fields-related_record/#getfiltercond","text":"Get the filterCond Parameter (none) Return String Sample code get FilterCond Source code String filterCond = referenceTable.getFilterCond();","title":"getFilterCond()"},{"location":"reference/form-fields-related_record/#getrelatedapp","text":"Get the relatedApp Parameter (none) Return RelatedApp Sample code get Related App Source code RelatedApp relatedApp = referenceTable.getRelatedApp();","title":"getRelatedApp()"},{"location":"reference/form-fields-related_record/#getsize","text":"Get the size Parameter (none) Return Integer Sample code get Size Source code Integer size = referenceTable.getSize();","title":"getSize()"},{"location":"reference/form-fields-related_record/#getdisplayfields","text":"Get the displayFields Parameter (none) Return List<String> Sample code get Display Fields Source code List displayFields = referenceTable.getDisplayFields();","title":"getDisplayFields()"},{"location":"reference/form-fields-related_record/#getsort","text":"Get the sort Parameter (none) Return String Sample code get Sort Source code String sort = referenceTable.getSort();","title":"getSort()"},{"location":"reference/form-fields-related_record/#relatedrecordsfield","text":"Warning extend the abstract class \" Field \"","title":"RelatedRecordsField"},{"location":"reference/form-fields-related_record/#methods_2","text":"","title":"Methods"},{"location":"reference/form-fields-related_record/#getlabel","text":"Get the label Parameter (none) Return String Sample code get Label Source code String label = relatedRecordsField.getLabel();","title":"getLabel()"},{"location":"reference/form-fields-related_record/#getnolabel","text":"Get the noLabel Parameter (none) Return Boolean Sample code get NoLabel Source code Boolean noLabel = relatedRecordsField.getNoLabel();","title":"getNoLabel()"},{"location":"reference/form-fields-related_record/#getreferencetable","text":"Get the referenceTable Parameter (none) Return ReferenceTable Sample code get Reference Table Source code ReferenceTable referenceTable = relatedRecordsField.getReferenceTable();","title":"getReferenceTable()"},{"location":"reference/form-fields-related_record/#reference","text":"Get App on developer network Get Apps on developer network Get Form fields on developer network Get Form Layout on developer network","title":"Reference"},{"location":"reference/form-fields-system/","text":"System Get a list of fields and their settings. Permissions to view the App is needed. API Tokens cannot be used with this API. AssigneeField Warning extend the abstract class \" AbstractProcessManagementField \" Methods (none) CategoryField Warning extend the abstract class \" AbstractSystemField \" Methods getEnabled() Get the enabled Parameter (none) Return Boolean Sample code get Enabled Source code Boolean enabled = categoryField.getEnabled(); CreatedTimeField Warning extend the abstract class \" AbstractSystemInfoField \" Methods (none) CreatorField Warning extend the abstract class \" AbstractSystemInfoField \" Methods (none) ModifierField Warning extend the abstract class \" AbstractSystemInfoField \" Methods (none) RecordNumberField Warning extend the abstract class \" AbstractSystemInfoField \" Methods (none) StatusField Warning extend the abstract class \" AbstractProcessManagementField \" Methods (none) UpdatedTimeField Warning extend the abstract class \" AbstractSystemInfoField \" Methods (none) AbstractSystemField Warning extend the abstract class \" Field \" This class is an abstract class. Methods getLabel() Get the label Parameter (none) Return String AbstractProcessManagementField Warning extend the abstract class \" AbstractSystemField \" This class is an abstract class. Methods getEnabled() Get the enabled Parameter (none) Return Boolean AbstractSystemInfoField Warning extend the abstract class \" AbstractSystemField \" This class is an abstract class. Methods getNoLabel() Get the noLabel Parameter (none) Return Boolean Reference Get App on developer network Get Apps on developer network Get Form fields on developer network Get Form Layout on developer network","title":"System"},{"location":"reference/form-fields-system/#system","text":"Get a list of fields and their settings. Permissions to view the App is needed. API Tokens cannot be used with this API.","title":"System"},{"location":"reference/form-fields-system/#assigneefield","text":"Warning extend the abstract class \" AbstractProcessManagementField \"","title":"AssigneeField"},{"location":"reference/form-fields-system/#methods","text":"(none)","title":"Methods"},{"location":"reference/form-fields-system/#categoryfield","text":"Warning extend the abstract class \" AbstractSystemField \"","title":"CategoryField"},{"location":"reference/form-fields-system/#methods_1","text":"","title":"Methods"},{"location":"reference/form-fields-system/#getenabled","text":"Get the enabled Parameter (none) Return Boolean Sample code get Enabled Source code Boolean enabled = categoryField.getEnabled();","title":"getEnabled()"},{"location":"reference/form-fields-system/#createdtimefield","text":"Warning extend the abstract class \" AbstractSystemInfoField \"","title":"CreatedTimeField"},{"location":"reference/form-fields-system/#methods_2","text":"(none)","title":"Methods"},{"location":"reference/form-fields-system/#creatorfield","text":"Warning extend the abstract class \" AbstractSystemInfoField \"","title":"CreatorField"},{"location":"reference/form-fields-system/#methods_3","text":"(none)","title":"Methods"},{"location":"reference/form-fields-system/#modifierfield","text":"Warning extend the abstract class \" AbstractSystemInfoField \"","title":"ModifierField"},{"location":"reference/form-fields-system/#methods_4","text":"(none)","title":"Methods"},{"location":"reference/form-fields-system/#recordnumberfield","text":"Warning extend the abstract class \" AbstractSystemInfoField \"","title":"RecordNumberField"},{"location":"reference/form-fields-system/#methods_5","text":"(none)","title":"Methods"},{"location":"reference/form-fields-system/#statusfield","text":"Warning extend the abstract class \" AbstractProcessManagementField \"","title":"StatusField"},{"location":"reference/form-fields-system/#methods_6","text":"(none)","title":"Methods"},{"location":"reference/form-fields-system/#updatedtimefield","text":"Warning extend the abstract class \" AbstractSystemInfoField \"","title":"UpdatedTimeField"},{"location":"reference/form-fields-system/#methods_7","text":"(none)","title":"Methods"},{"location":"reference/form-fields-system/#abstractsystemfield","text":"Warning extend the abstract class \" Field \" This class is an abstract class.","title":"AbstractSystemField"},{"location":"reference/form-fields-system/#methods_8","text":"","title":"Methods"},{"location":"reference/form-fields-system/#getlabel","text":"Get the label Parameter (none) Return String","title":"getLabel()"},{"location":"reference/form-fields-system/#abstractprocessmanagementfield","text":"Warning extend the abstract class \" AbstractSystemField \" This class is an abstract class.","title":"AbstractProcessManagementField"},{"location":"reference/form-fields-system/#methods_9","text":"","title":"Methods"},{"location":"reference/form-fields-system/#getenabled_1","text":"Get the enabled Parameter (none) Return Boolean","title":"getEnabled()"},{"location":"reference/form-fields-system/#abstractsysteminfofield","text":"Warning extend the abstract class \" AbstractSystemField \" This class is an abstract class.","title":"AbstractSystemInfoField"},{"location":"reference/form-fields-system/#methods_10","text":"","title":"Methods"},{"location":"reference/form-fields-system/#getnolabel","text":"Get the noLabel Parameter (none) Return Boolean","title":"getNoLabel()"},{"location":"reference/form-fields-system/#reference","text":"Get App on developer network Get Apps on developer network Get Form fields on developer network Get Form Layout on developer network","title":"Reference"},{"location":"reference/form-fields/","text":"Form Fields Get a list of fields and their settings. Permissions to view the App is needed. API Tokens cannot be used with this API. FormFields Methods getApp() Get the app Parameter (none) Return Integer Sample code get App Source code Integer app = formfields.getApp(); getRevision() Get the revision Parameter (none) Return Integer Sample code get Revision Source code Integer revision = formfields.getRevision(); getProperties() Get the properties Parameter (none) Return Map<String, Field > Sample code get Properties Source code Map properties = formfields.getProperties(); FieldGroup Warning extend the abstract class \" Field \" Methods getLabel() Get the label Parameter (none) Return String Sample code get Label Source code String label = fieldGroup.getLabel(); getNoLabel() Get the noLabel Parameter (none) Return Boolean Sample code get NoLabel Source code Boolean noLabel = fieldGroup.getNoLabel(); getOpenGroup() Get the openGroup Parameter (none) Return Boolean Sample code get OpenGroup Source code Boolean openGroup = fieldGroup.getOpenGroup(); FieldMapping Methods getField() Get the field Parameter (none) Return String Sample code get Field Source code String field = fieldMapping.getField(); getRelatedFields() Get the relatedFields Parameter (none) Return String Sample code get Related Fields Source code String relatedFields = fieldMapping.getRelatedFields(); SubTableField Warning extend the abstract class \" Field \" Methods getFields() Get the fields Parameter (none) Return Map<String, AbstractInputField > Sample code get Fields Source code Map fields = subTableField.getFields(); Field Warning This class is an abstract class. Methods getCode() Get the code Parameter (none) Return String getType() Get the type Parameter (none) Return LayoutType Reference Get App on developer network Get Apps on developer network Get Form fields on developer network Get Form Layout on developer network","title":"Form fields"},{"location":"reference/form-fields/#form-fields","text":"Get a list of fields and their settings. Permissions to view the App is needed. API Tokens cannot be used with this API.","title":"Form Fields"},{"location":"reference/form-fields/#formfields","text":"","title":"FormFields"},{"location":"reference/form-fields/#methods","text":"","title":"Methods"},{"location":"reference/form-fields/#getapp","text":"Get the app Parameter (none) Return Integer Sample code get App Source code Integer app = formfields.getApp();","title":"getApp()"},{"location":"reference/form-fields/#getrevision","text":"Get the revision Parameter (none) Return Integer Sample code get Revision Source code Integer revision = formfields.getRevision();","title":"getRevision()"},{"location":"reference/form-fields/#getproperties","text":"Get the properties Parameter (none) Return Map<String, Field > Sample code get Properties Source code Map properties = formfields.getProperties();","title":"getProperties()"},{"location":"reference/form-fields/#fieldgroup","text":"Warning extend the abstract class \" Field \"","title":"FieldGroup"},{"location":"reference/form-fields/#methods_1","text":"","title":"Methods"},{"location":"reference/form-fields/#getlabel","text":"Get the label Parameter (none) Return String Sample code get Label Source code String label = fieldGroup.getLabel();","title":"getLabel()"},{"location":"reference/form-fields/#getnolabel","text":"Get the noLabel Parameter (none) Return Boolean Sample code get NoLabel Source code Boolean noLabel = fieldGroup.getNoLabel();","title":"getNoLabel()"},{"location":"reference/form-fields/#getopengroup","text":"Get the openGroup Parameter (none) Return Boolean Sample code get OpenGroup Source code Boolean openGroup = fieldGroup.getOpenGroup();","title":"getOpenGroup()"},{"location":"reference/form-fields/#fieldmapping","text":"","title":"FieldMapping"},{"location":"reference/form-fields/#methods_2","text":"","title":"Methods"},{"location":"reference/form-fields/#getfield","text":"Get the field Parameter (none) Return String Sample code get Field Source code String field = fieldMapping.getField();","title":"getField()"},{"location":"reference/form-fields/#getrelatedfields","text":"Get the relatedFields Parameter (none) Return String Sample code get Related Fields Source code String relatedFields = fieldMapping.getRelatedFields();","title":"getRelatedFields()"},{"location":"reference/form-fields/#subtablefield","text":"Warning extend the abstract class \" Field \"","title":"SubTableField"},{"location":"reference/form-fields/#methods_3","text":"","title":"Methods"},{"location":"reference/form-fields/#getfields","text":"Get the fields Parameter (none) Return Map<String, AbstractInputField > Sample code get Fields Source code Map fields = subTableField.getFields();","title":"getFields()"},{"location":"reference/form-fields/#field","text":"Warning This class is an abstract class.","title":"Field"},{"location":"reference/form-fields/#methods_4","text":"","title":"Methods"},{"location":"reference/form-fields/#getcode","text":"Get the code Parameter (none) Return String","title":"getCode()"},{"location":"reference/form-fields/#gettype","text":"Get the type Parameter (none) Return LayoutType","title":"getType()"},{"location":"reference/form-fields/#reference","text":"Get App on developer network Get Apps on developer network Get Form fields on developer network Get Form Layout on developer network","title":"Reference"},{"location":"reference/form-layout/","text":"Form Layout Get the layout of a form. Length and width of the field, The fields you set on the table and their order, Put fields in the Group field and their layout, label, space, and border settings. Permissions to view the App is needed. API Tokens cannot be used with this API. FormLayout Methods getRevision() Get the revision Parameter (none) Return String Sample code get Revision Source code String revision = layout.getRevision(); getLayout() Get the layout Parameter (none) Return List< ItemLayout > Sample code get Layout Source code List itemLayoutList = layout.getLayout(); FieldLayout Methods getType() Get the type Parameter (none) Return String Sample code get Type Source code String type = fieldLayout.getType(); getCode() Get the code Parameter (none) Return String Sample code get Code Source code String code = fieldLayout.getCode(); getElementId() Get the elementId Parameter (none) Return String Sample code get Element Id Source code String elementId = fieldLayout.getElementId(); getLabel() Get the label Parameter (none) Return String Sample code get Label Source code String label = fieldLayout.getLabel(); getSize() Get the size Parameter (none) Return FieldSize Sample code get Size Source code FieldSize size = fieldLayout.getSize(); FieldSize Methods getWidth() Get the width Parameter (none) Return String Sample code get Width Source code String width = fieldSize.getWidth(); getHeight() Get the height Parameter (none) Return String Sample code get Height Source code String height = fieldSize.getHeight(); getInnerHeight() Get the innerHeight Parameter (none) Return String Sample code get Inner Height Source code String innerHeight = fieldSize.getInnerHeight(); GroupLayout Warning extend the abstract class \" ItemLayout \" Methods getCode() Get the code Parameter (none) Return String Sample code get Code Source code String code = groupLayout.getCode(); getLayout() Get the layout Parameter (none) Return List< RowLayout > Sample code get Code Source code List layout = groupLayout.getLayout(); RowLayout Warning extend the abstract class \" ItemLayout \" Methods getFields() Get the fields Parameter (none) Return List< FieldLayout > Sample code get Fields Source code String fields = rowLayout.getFields(); SubTableLayout Warning extend the abstract class \" ItemLayout \" Methods getCode() Get the code Parameter (none) Return String Sample code get Code Source code String code = subTableLayout.getCode(); ItemLayout Warning This class is an abstract class. Methods getType() Get the type Parameter (none) Return LayoutType Reference Get App on developer network Get Apps on developer network Get Form fields on developer network Get Form Layout on developer network","title":"Form Layout"},{"location":"reference/form-layout/#form-layout","text":"Get the layout of a form. Length and width of the field, The fields you set on the table and their order, Put fields in the Group field and their layout, label, space, and border settings. Permissions to view the App is needed. API Tokens cannot be used with this API.","title":"Form Layout"},{"location":"reference/form-layout/#formlayout","text":"","title":"FormLayout"},{"location":"reference/form-layout/#methods","text":"","title":"Methods"},{"location":"reference/form-layout/#getrevision","text":"Get the revision Parameter (none) Return String Sample code get Revision Source code String revision = layout.getRevision();","title":"getRevision()"},{"location":"reference/form-layout/#getlayout","text":"Get the layout Parameter (none) Return List< ItemLayout > Sample code get Layout Source code List itemLayoutList = layout.getLayout();","title":"getLayout()"},{"location":"reference/form-layout/#fieldlayout","text":"","title":"FieldLayout"},{"location":"reference/form-layout/#methods_1","text":"","title":"Methods"},{"location":"reference/form-layout/#gettype","text":"Get the type Parameter (none) Return String Sample code get Type Source code String type = fieldLayout.getType();","title":"getType()"},{"location":"reference/form-layout/#getcode","text":"Get the code Parameter (none) Return String Sample code get Code Source code String code = fieldLayout.getCode();","title":"getCode()"},{"location":"reference/form-layout/#getelementid","text":"Get the elementId Parameter (none) Return String Sample code get Element Id Source code String elementId = fieldLayout.getElementId();","title":"getElementId()"},{"location":"reference/form-layout/#getlabel","text":"Get the label Parameter (none) Return String Sample code get Label Source code String label = fieldLayout.getLabel();","title":"getLabel()"},{"location":"reference/form-layout/#getsize","text":"Get the size Parameter (none) Return FieldSize Sample code get Size Source code FieldSize size = fieldLayout.getSize();","title":"getSize()"},{"location":"reference/form-layout/#fieldsize","text":"","title":"FieldSize"},{"location":"reference/form-layout/#methods_2","text":"","title":"Methods"},{"location":"reference/form-layout/#getwidth","text":"Get the width Parameter (none) Return String Sample code get Width Source code String width = fieldSize.getWidth();","title":"getWidth()"},{"location":"reference/form-layout/#getheight","text":"Get the height Parameter (none) Return String Sample code get Height Source code String height = fieldSize.getHeight();","title":"getHeight()"},{"location":"reference/form-layout/#getinnerheight","text":"Get the innerHeight Parameter (none) Return String Sample code get Inner Height Source code String innerHeight = fieldSize.getInnerHeight();","title":"getInnerHeight()"},{"location":"reference/form-layout/#grouplayout","text":"Warning extend the abstract class \" ItemLayout \"","title":"GroupLayout"},{"location":"reference/form-layout/#methods_3","text":"","title":"Methods"},{"location":"reference/form-layout/#getcode_1","text":"Get the code Parameter (none) Return String Sample code get Code Source code String code = groupLayout.getCode();","title":"getCode()"},{"location":"reference/form-layout/#getlayout_1","text":"Get the layout Parameter (none) Return List< RowLayout > Sample code get Code Source code List layout = groupLayout.getLayout();","title":"getLayout()"},{"location":"reference/form-layout/#rowlayout","text":"Warning extend the abstract class \" ItemLayout \"","title":"RowLayout"},{"location":"reference/form-layout/#methods_4","text":"","title":"Methods"},{"location":"reference/form-layout/#getfields","text":"Get the fields Parameter (none) Return List< FieldLayout > Sample code get Fields Source code String fields = rowLayout.getFields();","title":"getFields()"},{"location":"reference/form-layout/#subtablelayout","text":"Warning extend the abstract class \" ItemLayout \"","title":"SubTableLayout"},{"location":"reference/form-layout/#methods_5","text":"","title":"Methods"},{"location":"reference/form-layout/#getcode_2","text":"Get the code Parameter (none) Return String Sample code get Code Source code String code = subTableLayout.getCode();","title":"getCode()"},{"location":"reference/form-layout/#itemlayout","text":"Warning This class is an abstract class.","title":"ItemLayout"},{"location":"reference/form-layout/#methods_6","text":"","title":"Methods"},{"location":"reference/form-layout/#gettype_1","text":"Get the type Parameter (none) Return LayoutType","title":"getType()"},{"location":"reference/form-layout/#reference","text":"Get App on developer network Get Apps on developer network Get Form fields on developer network Get Form Layout on developer network","title":"Reference"},{"location":"reference/kintone-api-exception/","text":"kintoneAPIException Handle error responses from kintone Rest API Methods getHttpErrorCode() Parameter (none) Return int Sample code Get http error code Source code String appId = 1 Integer id = -1 try { GetRecordResponse response = recordManagerment.getRecord(appId, id); } catch(kintoneException ke) { int errorCode = ke.getHttpErrorCode(); } getErrorResponse() Parameter (none) Return ErrorResponse Sample code Get apps with error response Source code String appId = 1 Integer id = -1 try { GetRecordResponse response = recordManagerment.getRecord(appId, id); } catch(kintoneException ke) { String id = ke.getErrorResponse().getId(); String message = ke.getErrorResponse().getMessage(); String code = ke.getErrorResponse().getCode(); } getErrorResponses() Parameter (none) Return ArrayList< ErrorResponse > Sample code Get apps with error responses Source code String appId = 1 Integer id = -1 HashMap record = new HashMap (); FieldValue fv = new FieldValue(); fv.setType(FieldType.SINGLE_LINE_TEXT); fv.setValue(\"test_AddRecord\"); BulkRequest bulkRequestManager = new BulkRequest(connection); bulkRequestManager.addRecord(appId, record); try { BulkRequestResponse responses = bulkRequestManager.execute(); } catch(kintoneException ke) { for(ErrorResponse errorResponse : ke.getErrorResponses()) { String id = errorResponse.getId(); String message = errorResponse.getMessage(); String code = errorResponse.getCode(); } }","title":"Kintone APIException"},{"location":"reference/kintone-api-exception/#kintoneapiexception","text":"Handle error responses from kintone Rest API","title":"kintoneAPIException"},{"location":"reference/kintone-api-exception/#methods","text":"","title":"Methods"},{"location":"reference/kintone-api-exception/#gethttperrorcode","text":"Parameter (none) Return int Sample code Get http error code Source code String appId = 1 Integer id = -1 try { GetRecordResponse response = recordManagerment.getRecord(appId, id); } catch(kintoneException ke) { int errorCode = ke.getHttpErrorCode(); }","title":"getHttpErrorCode()"},{"location":"reference/kintone-api-exception/#geterrorresponse","text":"Parameter (none) Return ErrorResponse Sample code Get apps with error response Source code String appId = 1 Integer id = -1 try { GetRecordResponse response = recordManagerment.getRecord(appId, id); } catch(kintoneException ke) { String id = ke.getErrorResponse().getId(); String message = ke.getErrorResponse().getMessage(); String code = ke.getErrorResponse().getCode(); }","title":"getErrorResponse()"},{"location":"reference/kintone-api-exception/#geterrorresponses","text":"Parameter (none) Return ArrayList< ErrorResponse > Sample code Get apps with error responses Source code String appId = 1 Integer id = -1 HashMap record = new HashMap (); FieldValue fv = new FieldValue(); fv.setType(FieldType.SINGLE_LINE_TEXT); fv.setValue(\"test_AddRecord\"); BulkRequest bulkRequestManager = new BulkRequest(connection); bulkRequestManager.addRecord(appId, record); try { BulkRequestResponse responses = bulkRequestManager.execute(); } catch(kintoneException ke) { for(ErrorResponse errorResponse : ke.getErrorResponses()) { String id = errorResponse.getId(); String message = errorResponse.getMessage(); String code = errorResponse.getCode(); } }","title":"getErrorResponses()"},{"location":"reference/member/","text":"Member General information of the member(user/group/organization) on the kintone application Constructor Parameter Name Type Description code String The user/group/organization code. name String The user/group/organization name. Sample code Initial member class Source code String code = \"usercode\"; String name = \"username\"; Member member = new Member(code, name); Methods getCode() Get the code of the user/group/organization Parameter (none) Return String Sample code Get the code of the user/group/organization Source code Record recordManagement = new Record(connection); GetRecordResponse response = recordManagement.getRecord(APP_ID, id); HashMap resultRecord = response.getRecord(); Object fv = resultRecord.get(\"fieldCode\").getValue(); Member member = (Member)fv; String userCode = member.getCode(); String userName = member.getName(); setCode() Set the code of the user/group/organization Parameter Name Type Description code String The user/group/organization code. Return (none) Sample code Set the code of the user/group/organization Source code Member member = new Member member.setCode(\"usercode\"); member.setName(\"username\"); Record recordManagement = new Record(connection); Integer appID = 1; HashMap addRecord = new HashMap (); FieldValue fv = new FieldValue(); fv.setType(FieldType.USER_SELECT); fv.setValue(member); addRecord.put(\"user\", fv); AddRecordResponse response = recordManagerment.addRecord(appID, addRecord); getName() Get the name of the user/group/organization Parameter (none) Return String Sample code Get the name of the user/group/organization Source code Record recordManagement = new Record(connection); GetRecordResponse response = recordManagement.getRecord(APP_ID, id); HashMap resultRecord = response.getRecord(); Object fv = resultRecord.get(\"fieldCode\").getValue(); Member member = (Member)fv; String userCode = member.getCode(); String userName = member.getName(); setName() Set the name of the user/group/organization Parameter Name Type Description name String The user/group/organization name. Return (none) Sample code Set the name of the user/group/organization Source code Member member = new Member member.setCode(\"usercode\"); member.setName(\"username\"); Record recordManagement = new Record(connection); Integer appID = 1; HashMap addRecord = new HashMap (); FieldValue fv = new FieldValue(); fv.setType(FieldType.USER_SELECT); fv.setValue(member); addRecord.put(\"user\", fv); AddRecordResponse response = recordManagerment.addRecord(appID, addRecord);","title":"Member"},{"location":"reference/member/#member","text":"General information of the member(user/group/organization) on the kintone application","title":"Member"},{"location":"reference/member/#constructor","text":"Parameter Name Type Description code String The user/group/organization code. name String The user/group/organization name. Sample code Initial member class Source code String code = \"usercode\"; String name = \"username\"; Member member = new Member(code, name);","title":"Constructor"},{"location":"reference/member/#methods","text":"","title":"Methods"},{"location":"reference/member/#getcode","text":"Get the code of the user/group/organization Parameter (none) Return String Sample code Get the code of the user/group/organization Source code Record recordManagement = new Record(connection); GetRecordResponse response = recordManagement.getRecord(APP_ID, id); HashMap resultRecord = response.getRecord(); Object fv = resultRecord.get(\"fieldCode\").getValue(); Member member = (Member)fv; String userCode = member.getCode(); String userName = member.getName();","title":"getCode()"},{"location":"reference/member/#setcode","text":"Set the code of the user/group/organization Parameter Name Type Description code String The user/group/organization code. Return (none) Sample code Set the code of the user/group/organization Source code Member member = new Member member.setCode(\"usercode\"); member.setName(\"username\"); Record recordManagement = new Record(connection); Integer appID = 1; HashMap addRecord = new HashMap (); FieldValue fv = new FieldValue(); fv.setType(FieldType.USER_SELECT); fv.setValue(member); addRecord.put(\"user\", fv); AddRecordResponse response = recordManagerment.addRecord(appID, addRecord);","title":"setCode()"},{"location":"reference/member/#getname","text":"Get the name of the user/group/organization Parameter (none) Return String Sample code Get the name of the user/group/organization Source code Record recordManagement = new Record(connection); GetRecordResponse response = recordManagement.getRecord(APP_ID, id); HashMap resultRecord = response.getRecord(); Object fv = resultRecord.get(\"fieldCode\").getValue(); Member member = (Member)fv; String userCode = member.getCode(); String userName = member.getName();","title":"getName()"},{"location":"reference/member/#setname","text":"Set the name of the user/group/organization Parameter Name Type Description name String The user/group/organization name. Return (none) Sample code Set the name of the user/group/organization Source code Member member = new Member member.setCode(\"usercode\"); member.setName(\"username\"); Record recordManagement = new Record(connection); Integer appID = 1; HashMap addRecord = new HashMap (); FieldValue fv = new FieldValue(); fv.setType(FieldType.USER_SELECT); fv.setValue(member); addRecord.put(\"user\", fv); AddRecordResponse response = recordManagerment.addRecord(appID, addRecord);","title":"setName()"},{"location":"reference/record-comment-model/","text":"Comment Model General comment structure of the record on kintone restAPI Comment Constructor Parameter (none) Methods getId() get the Comment ID. Parameter (none) Return Integer Sample code get the Comment ID. Source code // execute GET RECORD_COMMENTS API Integer appID = 1; Integer recordID = 1; String order = \"asc\"; Integer offsset = 1; Integer limit = 2; GetCommentsResponse response = kintoneRecordManager.getComments(appID, recordID, order, offsset, offsset); ArrayList resultComments = response.getComments(); Comment comment = resultComments.get(0); Integer commentID = comment.getId(); getText() get the comment including the line feed codes. Parameter (none) Return String Sample code get the comment including the line feed codes. Source code // execute GET RECORD_COMMENTS API Integer appID = 1; Integer recordID = 1; String order = \"asc\"; Integer offsset = 1; Integer limit = 2; GetCommentsResponse response = kintoneRecordManager.getComments(appID, recordID, order, offsset, limit); ArrayList resultComments = response.getComments(); Comment comment = resultComments.get(0); String commentText = comment.getText(); getCreatedAt() get the created date and time of the comment. Parameter (none) Return Date Sample code get the created date and time of the comment. Source code // execute GET RECORD_COMMENTS API Integer appID = 1; Integer recordID = 1; String order = \"asc\"; Integer offsset = 1; Integer limit = 2; GetCommentsResponse response = kintoneRecordManager.getComments(appID, recordID, order, offsset, limit); ArrayList resultComments = response.getComments(); Comment comment = resultComments.get(0); Date commentCreatedAt = comment.getCreatedAt(); getCreator() get an object including information of the comment creator. Parameter (none) Return Member Sample code get an object including information of the comment creator. Source code // execute GET RECORD_COMMENTS API Integer appID = 1; Integer recordID = 1; String order = \"asc\"; Integer offsset = 1; Integer limit = 2; GetCommentsResponse response = kintoneRecordManager.getComments(appID, recordID, order, offsset, limit); ArrayList resultComments = response.getComments(); Comment comment = resultComments.get(0); Member commentCreator = comment.getCreator(); getMentions() get an array including information of mentioned users. Parameter (none) Return List< CommentMention > Sample code get an array including information of mentioned users. Source code // execute GET RECORD_COMMENTS API Integer appID = 1; Integer recordID = 1; String order = \"asc\"; Integer offsset = 1; Integer limit = 2; GetCommentsResponse response = kintoneRecordManager.getComments(appID, recordID, order, offsset, limit); ArrayList resultComments = response.getComments(); Comment comment = resultComments.get(0); List commentMentions = comment.getMentions(); CommentContent Constructor Parameter (none) Methods setText(String text) set the comment including the line feed codes. Parameter Name type Description text String The comment including the line feed codes. Return (none) Sample code set the comment including the line feed codes. Source code // execute ADD RECORD_COMMENT API Integer app = 1; Integer record = 1; CommentContent comment = new CommentContent(); ArrayList mentionList = new ArrayList (); CommentMention mention = new CommentMention(); mention.setCode(\"sample_user\"); mention.setType(\"USER\"); mentionList.add(mention); comment.setText(\"test comment\"); comment.setMentions(mentionList); AddCommentResponse response = kintoneRecordManager.addComment(app, record, comment); setMentions(List< CommentMention > mentions) get an array including information of mentioned users. Parameter Name type Description mentions List< CommentMention > An array including information of mentioned users. Return (none) Sample code get an array including information of mentioned users. Source code // execute ADD RECORD_COMMENT API Integer app = 1; Integer record = 1; CommentContent comment = new CommentContent(); ArrayList mentionList = new ArrayList (); CommentMention mention = new CommentMention(); mention.setCode(\"sample_user\"); mention.setType(\"USER\"); mentionList.add(mention); comment.setText(\"test comment\"); comment.setMentions(mentionList); AddCommentResponse response = kintoneRecordManager.addComment(app, record, comment); CommentMention Constructor Parameter (none) Methods getCode() get the code of the mentioned user, group or organization. Parameter (none) Return String Sample code get the code of the mentioned user, group or organization. Source code // execute GET RECORD_COMMENTS API Integer appID = 1; Integer recordID = 1; String order = \"asc\"; Integer offsset = 1; Integer limit = 2; GetCommentsResponse response = kintoneRecordManager.getComments(appID, recordID, order, offsset, limit); ArrayList resultComments = response.getComments(); Comment comment = resultComments.get(0); List commentMentions = comment.getMentions(); CommentMention mention = commentMentions.get(0); String mentionUserCode = mention.getCode(); setCode(String code) set the comment including the line feed codes. Parameter Name type Description code String The code of the mentioned user, group or organization. Return (none) Sample code set the comment including the line feed codes. Source code // execute ADD RECORD_COMMENT API Integer app = 1; Integer record = 1; CommentContent comment = new CommentContent(); ArrayList mentionList = new ArrayList (); CommentMention mention = new CommentMention(); mention.setCode(\"sample_user\"); mention.setType(\"USER\"); mentionList.add(mention); comment.setText(\"test comment\"); comment.setMentions(mentionList); AddCommentResponse response = kintoneRecordManager.addComment(app, record, comment); getType() get the type of the mentioned user, group or organization. Parameter (none) Return String Sample code get the type of the mentioned user, group or organization. Source code // execute GET RECORD_COMMENTS API Integer appID = 1; Integer recordID = 1; String order = \"asc\"; Integer offsset = 1; Integer limit = 2; v GetCommentsResponse response = kintoneRecordManager.getComments(appID, recordID, order, offsset, offsset); ArrayList resultComments = response.getComments(); Comment comment = resultComments.get(0); List commentMentions = comment.getMentions(); CommentMention mention = commentMentions.get(0); String mentionUserType= mention.getType(); setType(String type) get an array including information of mentioned users. Parameter Name type Description type String The type of the mentioned user, group or organization. Return (none) Sample code get an array including information of mentioned users. Source code // execute ADD RECORD_COMMENT API Integer app = 1; Integer record = 1; CommentContent comment = new CommentContent(); ArrayList mentionList = new ArrayList (); CommentMention mention = new CommentMention(); mention.setCode(\"sample_user\"); mention.setType(\"USER\"); mentionList.add(mention); comment.setText(\"test comment\"); comment.setMentions(mentionList); AddCommentResponse response = kintoneRecordManager.addComment(app, record, comment); GetCommentsResponse Constructor Parameter (none) Methods getComments() get the comments List on a record. Parameter (none) Return ArrayList< Comment > Sample code get the comments List on a record. Source code // execute GET RECORD_COMMENTS API Integer appID = 1; Integer recordID = 1; String order = \"asc\"; Integer offsset = 1; Integer limit = 2; GetCommentsResponse response = kintoneRecordManager.getComments(appID, recordID, order, offsset, limit); ArrayList resultComments = response.getComments(); getOlder() get information of older comments. Parameter (none) Return Boolean Sample code get information of older comments. Source code // execute GET RECORD_COMMENTS API Integer appID = 1; Integer recordID = 1; String order = \"asc\"; Integer offsset = 1; Integer limit = 2; GetCommentsResponse response = kintoneRecordManager.getComments(appID, recordID, order, offsset, limit); Boolean resultOlderFlg = response.getOlder(); getNewer() get information of newer comments. Parameter (none) Return Boolean Sample code get information of newer comments. Source code // execute GET RECORD_COMMENTS API Integer appID = 1; Integer recordID = 1; String order = \"asc\"; Integer offsset = 1; Integer limit = 2; GetCommentsResponse response = kintoneRecordManager.getComments(appID, recordID, order, offsset, limit); Boolean resultNewerFlg = response.getNewer(); AddCommentResponse Constructor Parameter (none) Methods getId() get the ID of comment which have just created. Parameter (none) Return Integer Sample code get the ID of comment which have just created. Source code // execute ADD RECORD_COMMENT API Integer app = 1; Integer record = 1; CommentContent comment = new CommentContent(); ArrayList mentionList = new ArrayList (); CommentMention mention = new CommentMention(); mention.setCode(\"sample_user\"); mention.setType(\"USER\"); mentionList.add(mention); comment.setText(\"test comment\"); comment.setMentions(mentionList); AddCommentResponse response = kintoneRecordManager.addComment(app, record, comment); Integer resultId = response.getId();","title":"Comment Model"},{"location":"reference/record-comment-model/#comment-model","text":"General comment structure of the record on kintone restAPI","title":"Comment Model"},{"location":"reference/record-comment-model/#comment","text":"","title":"Comment"},{"location":"reference/record-comment-model/#constructor","text":"Parameter (none)","title":"Constructor"},{"location":"reference/record-comment-model/#methods","text":"","title":"Methods"},{"location":"reference/record-comment-model/#getid","text":"get the Comment ID. Parameter (none) Return Integer Sample code get the Comment ID. Source code // execute GET RECORD_COMMENTS API Integer appID = 1; Integer recordID = 1; String order = \"asc\"; Integer offsset = 1; Integer limit = 2; GetCommentsResponse response = kintoneRecordManager.getComments(appID, recordID, order, offsset, offsset); ArrayList resultComments = response.getComments(); Comment comment = resultComments.get(0); Integer commentID = comment.getId();","title":"getId()"},{"location":"reference/record-comment-model/#gettext","text":"get the comment including the line feed codes. Parameter (none) Return String Sample code get the comment including the line feed codes. Source code // execute GET RECORD_COMMENTS API Integer appID = 1; Integer recordID = 1; String order = \"asc\"; Integer offsset = 1; Integer limit = 2; GetCommentsResponse response = kintoneRecordManager.getComments(appID, recordID, order, offsset, limit); ArrayList resultComments = response.getComments(); Comment comment = resultComments.get(0); String commentText = comment.getText();","title":"getText()"},{"location":"reference/record-comment-model/#getcreatedat","text":"get the created date and time of the comment. Parameter (none) Return Date Sample code get the created date and time of the comment. Source code // execute GET RECORD_COMMENTS API Integer appID = 1; Integer recordID = 1; String order = \"asc\"; Integer offsset = 1; Integer limit = 2; GetCommentsResponse response = kintoneRecordManager.getComments(appID, recordID, order, offsset, limit); ArrayList resultComments = response.getComments(); Comment comment = resultComments.get(0); Date commentCreatedAt = comment.getCreatedAt();","title":"getCreatedAt()"},{"location":"reference/record-comment-model/#getcreator","text":"get an object including information of the comment creator. Parameter (none) Return Member Sample code get an object including information of the comment creator. Source code // execute GET RECORD_COMMENTS API Integer appID = 1; Integer recordID = 1; String order = \"asc\"; Integer offsset = 1; Integer limit = 2; GetCommentsResponse response = kintoneRecordManager.getComments(appID, recordID, order, offsset, limit); ArrayList resultComments = response.getComments(); Comment comment = resultComments.get(0); Member commentCreator = comment.getCreator();","title":"getCreator()"},{"location":"reference/record-comment-model/#getmentions","text":"get an array including information of mentioned users. Parameter (none) Return List< CommentMention > Sample code get an array including information of mentioned users. Source code // execute GET RECORD_COMMENTS API Integer appID = 1; Integer recordID = 1; String order = \"asc\"; Integer offsset = 1; Integer limit = 2; GetCommentsResponse response = kintoneRecordManager.getComments(appID, recordID, order, offsset, limit); ArrayList resultComments = response.getComments(); Comment comment = resultComments.get(0); List commentMentions = comment.getMentions();","title":"getMentions()"},{"location":"reference/record-comment-model/#commentcontent","text":"","title":"CommentContent"},{"location":"reference/record-comment-model/#constructor_1","text":"Parameter (none)","title":"Constructor"},{"location":"reference/record-comment-model/#methods_1","text":"","title":"Methods"},{"location":"reference/record-comment-model/#settextstring-text","text":"set the comment including the line feed codes. Parameter Name type Description text String The comment including the line feed codes. Return (none) Sample code set the comment including the line feed codes. Source code // execute ADD RECORD_COMMENT API Integer app = 1; Integer record = 1; CommentContent comment = new CommentContent(); ArrayList mentionList = new ArrayList (); CommentMention mention = new CommentMention(); mention.setCode(\"sample_user\"); mention.setType(\"USER\"); mentionList.add(mention); comment.setText(\"test comment\"); comment.setMentions(mentionList); AddCommentResponse response = kintoneRecordManager.addComment(app, record, comment);","title":"setText(String text)"},{"location":"reference/record-comment-model/#setmentionslistcommentmention62-mentions","text":"get an array including information of mentioned users. Parameter Name type Description mentions List< CommentMention > An array including information of mentioned users. Return (none) Sample code get an array including information of mentioned users. Source code // execute ADD RECORD_COMMENT API Integer app = 1; Integer record = 1; CommentContent comment = new CommentContent(); ArrayList mentionList = new ArrayList (); CommentMention mention = new CommentMention(); mention.setCode(\"sample_user\"); mention.setType(\"USER\"); mentionList.add(mention); comment.setText(\"test comment\"); comment.setMentions(mentionList); AddCommentResponse response = kintoneRecordManager.addComment(app, record, comment);","title":"setMentions(List&lt;CommentMention> mentions)"},{"location":"reference/record-comment-model/#commentmention","text":"","title":"CommentMention"},{"location":"reference/record-comment-model/#constructor_2","text":"Parameter (none)","title":"Constructor"},{"location":"reference/record-comment-model/#methods_2","text":"","title":"Methods"},{"location":"reference/record-comment-model/#getcode","text":"get the code of the mentioned user, group or organization. Parameter (none) Return String Sample code get the code of the mentioned user, group or organization. Source code // execute GET RECORD_COMMENTS API Integer appID = 1; Integer recordID = 1; String order = \"asc\"; Integer offsset = 1; Integer limit = 2; GetCommentsResponse response = kintoneRecordManager.getComments(appID, recordID, order, offsset, limit); ArrayList resultComments = response.getComments(); Comment comment = resultComments.get(0); List commentMentions = comment.getMentions(); CommentMention mention = commentMentions.get(0); String mentionUserCode = mention.getCode();","title":"getCode()"},{"location":"reference/record-comment-model/#setcodestring-code","text":"set the comment including the line feed codes. Parameter Name type Description code String The code of the mentioned user, group or organization. Return (none) Sample code set the comment including the line feed codes. Source code // execute ADD RECORD_COMMENT API Integer app = 1; Integer record = 1; CommentContent comment = new CommentContent(); ArrayList mentionList = new ArrayList (); CommentMention mention = new CommentMention(); mention.setCode(\"sample_user\"); mention.setType(\"USER\"); mentionList.add(mention); comment.setText(\"test comment\"); comment.setMentions(mentionList); AddCommentResponse response = kintoneRecordManager.addComment(app, record, comment);","title":"setCode(String code)"},{"location":"reference/record-comment-model/#gettype","text":"get the type of the mentioned user, group or organization. Parameter (none) Return String Sample code get the type of the mentioned user, group or organization. Source code // execute GET RECORD_COMMENTS API Integer appID = 1; Integer recordID = 1; String order = \"asc\"; Integer offsset = 1; Integer limit = 2; v GetCommentsResponse response = kintoneRecordManager.getComments(appID, recordID, order, offsset, offsset); ArrayList resultComments = response.getComments(); Comment comment = resultComments.get(0); List commentMentions = comment.getMentions(); CommentMention mention = commentMentions.get(0); String mentionUserType= mention.getType();","title":"getType()"},{"location":"reference/record-comment-model/#settypestring-type","text":"get an array including information of mentioned users. Parameter Name type Description type String The type of the mentioned user, group or organization. Return (none) Sample code get an array including information of mentioned users. Source code // execute ADD RECORD_COMMENT API Integer app = 1; Integer record = 1; CommentContent comment = new CommentContent(); ArrayList mentionList = new ArrayList (); CommentMention mention = new CommentMention(); mention.setCode(\"sample_user\"); mention.setType(\"USER\"); mentionList.add(mention); comment.setText(\"test comment\"); comment.setMentions(mentionList); AddCommentResponse response = kintoneRecordManager.addComment(app, record, comment);","title":"setType(String type)"},{"location":"reference/record-comment-model/#getcommentsresponse","text":"","title":"GetCommentsResponse"},{"location":"reference/record-comment-model/#constructor_3","text":"Parameter (none)","title":"Constructor"},{"location":"reference/record-comment-model/#methods_3","text":"","title":"Methods"},{"location":"reference/record-comment-model/#getcomments","text":"get the comments List on a record. Parameter (none) Return ArrayList< Comment > Sample code get the comments List on a record. Source code // execute GET RECORD_COMMENTS API Integer appID = 1; Integer recordID = 1; String order = \"asc\"; Integer offsset = 1; Integer limit = 2; GetCommentsResponse response = kintoneRecordManager.getComments(appID, recordID, order, offsset, limit); ArrayList resultComments = response.getComments();","title":"getComments()"},{"location":"reference/record-comment-model/#getolder","text":"get information of older comments. Parameter (none) Return Boolean Sample code get information of older comments. Source code // execute GET RECORD_COMMENTS API Integer appID = 1; Integer recordID = 1; String order = \"asc\"; Integer offsset = 1; Integer limit = 2; GetCommentsResponse response = kintoneRecordManager.getComments(appID, recordID, order, offsset, limit); Boolean resultOlderFlg = response.getOlder();","title":"getOlder()"},{"location":"reference/record-comment-model/#getnewer","text":"get information of newer comments. Parameter (none) Return Boolean Sample code get information of newer comments. Source code // execute GET RECORD_COMMENTS API Integer appID = 1; Integer recordID = 1; String order = \"asc\"; Integer offsset = 1; Integer limit = 2; GetCommentsResponse response = kintoneRecordManager.getComments(appID, recordID, order, offsset, limit); Boolean resultNewerFlg = response.getNewer();","title":"getNewer()"},{"location":"reference/record-comment-model/#addcommentresponse","text":"","title":"AddCommentResponse"},{"location":"reference/record-comment-model/#constructor_4","text":"Parameter (none)","title":"Constructor"},{"location":"reference/record-comment-model/#methods_4","text":"","title":"Methods"},{"location":"reference/record-comment-model/#getid_1","text":"get the ID of comment which have just created. Parameter (none) Return Integer Sample code get the ID of comment which have just created. Source code // execute ADD RECORD_COMMENT API Integer app = 1; Integer record = 1; CommentContent comment = new CommentContent(); ArrayList mentionList = new ArrayList (); CommentMention mention = new CommentMention(); mention.setCode(\"sample_user\"); mention.setType(\"USER\"); mentionList.add(mention); comment.setText(\"test comment\"); comment.setMentions(mentionList); AddCommentResponse response = kintoneRecordManager.addComment(app, record, comment); Integer resultId = response.getId();","title":"getId()"},{"location":"reference/record-field-model/","text":"Field Model FieldValue General Field's value of the kintone app Constructor Parameter (none) Methods getType() get the type of field. Parameter (none) Return FieldType Sample code get the type of field. Source code // execute GET RECORD API Integer appID = 1; Integer recordID =1; GetRecordResponse response = kintoneRecordManager.getRecord(appID, recordID); HashMap resultRecord = response.getRecord(); FieldValue fv = resultRecord.get(\"sample field\"); FieldType fieldType = fv.getType(); setType(FieldType type) set the type of field. Parameter Name type Description type FieldType The type of field - kintone-sdk FieldType constants. Return (none) Sample code set the type of field. Source code Integer appID = 1; HashMap record = new HashMap (); FieldValue fv = new FieldValue(); fv.setType(FieldType.SINGLE_LINE_TEXT); fv.setValue(\"sample_AddRecord\"); record.put(\"FieldCode1\", fv); AddRecordResponse response = kintoneRecordManager.addRecord(appID, record); getValue() get the value of field in the record. Parameter (none) Return Object Sample code get the value of field in the record. Source code // execute GET RECORD API Integer appID = 1; Integer recordID =1; GetRecordResponse response = kintoneRecordManager.getRecord(appID, recordID); HashMap resultRecord = response.getRecord(); FieldValue fv = resultRecord.get(\"sample field\"); Object fieldValue = fv.getValue(); setValue(Object value) set the value of field in the record. Parameter Name type Description value Object The value of field in the record, read more at Field Type here . Return (none) Sample code set the value of field in the record. Source code Integer appID = 1; HashMap record = new HashMap (); FieldValue fv = new FieldValue(); fv.setType(FieldType.SINGLE_LINE_TEXT); fv.setValue(\"sample_AddRecord\"); record.put(\"FieldCode1\", fv); AddRecordResponse response = kintoneRecordManager.addRecord(appID, record); SubTableValueItem Constructor Parameter (none) Methods getID() get the ID of item in table. Parameter (none) Return Integer Sample code get the ID of item in table. Source code // execute GET RECORD API Integer appID = 1; Integer recordID =1; GetRecordResponse response = kintoneRecordManager.getRecord(appID, recordID); HashMap resultRecord = response.getRecord(); FieldValue fv = resultRecord.get(\"SubTable field\"); Object fieldValue = fv.getValue(); ArrayList subTable = (ArrayList )fieldValue; Integer itemID = subTable.get(0).getID(); setID(Integer id) set the ID of table. Parameter Name type Description id Integer The ID of table . Return (none) Sample code set the ID of item in table. Source code SubTableValueItem tableItem = new SubTableValueItem(); tableItem.setID(00000); HashMap tableItemValue = new HashMap (); FieldValue fv1 = new FieldValue(); fv1.setType(FieldType.SINGLE_LINE_TEXT); fv1.setValue(\"sample_text1\"); FieldValue fv2 = new FieldValue(); fv2.setType(FieldType.SINGLE_LINE_TEXT); fv2.setValue(\"sample_text2\"); tableItemValue.put(\"sample field1\", fv1); tableItemValue.put(\"sample field2\", fv2); tableItem.setValue(tableItemValue); getValue() get the value of field in the record. Parameter (none) Return HashMap<String, FieldValue > Sample code get the ID of item in table. Source code // execute GET RECORD API Integer appID = 1; Integer recordID =1; GetRecordResponse response = kintoneRecordManager.getRecord(appID, recordID); HashMap resultRecord = response.getRecord(); FieldValue fv = resultRecord.get(\"SubTable field\"); Object fieldValue = fv.getValue(); ArrayList subTable = (ArrayList )fieldValue; HashMap itemValue= subTable.get(0).getValue(); setValue(HashMap<String, FieldValue > value) set the value of field in the record. Parameter Name type Description value HashMap<String, FieldValue > The row data of table. Return (none) Sample code get the ID of item in table. Source code SubTableValueItem tableItem = new SubTableValueItem(); tableItem.setID(00000); HashMap tableItemValue = new HashMap (); FieldValue fv1 = new FieldValue(); fv1.setType(FieldType.SINGLE_LINE_TEXT); fv1.setValue(\"sample_text1\"); FieldValue fv2 = new FieldValue(); fv2.setType(FieldType.SINGLE_LINE_TEXT); fv2.setValue(\"sample_text2\"); tableItemValue.put(\"sample field1\", fv1); tableItemValue.put(\"sample field2\", fv2); tableItem.setValue(tableItemValue);","title":"Field Model"},{"location":"reference/record-field-model/#field-model","text":"","title":"Field Model"},{"location":"reference/record-field-model/#fieldvalue","text":"General Field's value of the kintone app","title":"FieldValue"},{"location":"reference/record-field-model/#constructor","text":"Parameter (none)","title":"Constructor"},{"location":"reference/record-field-model/#methods","text":"","title":"Methods"},{"location":"reference/record-field-model/#gettype","text":"get the type of field. Parameter (none) Return FieldType Sample code get the type of field. Source code // execute GET RECORD API Integer appID = 1; Integer recordID =1; GetRecordResponse response = kintoneRecordManager.getRecord(appID, recordID); HashMap resultRecord = response.getRecord(); FieldValue fv = resultRecord.get(\"sample field\"); FieldType fieldType = fv.getType();","title":"getType()"},{"location":"reference/record-field-model/#settypefieldtype-type","text":"set the type of field. Parameter Name type Description type FieldType The type of field - kintone-sdk FieldType constants. Return (none) Sample code set the type of field. Source code Integer appID = 1; HashMap record = new HashMap (); FieldValue fv = new FieldValue(); fv.setType(FieldType.SINGLE_LINE_TEXT); fv.setValue(\"sample_AddRecord\"); record.put(\"FieldCode1\", fv); AddRecordResponse response = kintoneRecordManager.addRecord(appID, record);","title":"setType(FieldType type)"},{"location":"reference/record-field-model/#getvalue","text":"get the value of field in the record. Parameter (none) Return Object Sample code get the value of field in the record. Source code // execute GET RECORD API Integer appID = 1; Integer recordID =1; GetRecordResponse response = kintoneRecordManager.getRecord(appID, recordID); HashMap resultRecord = response.getRecord(); FieldValue fv = resultRecord.get(\"sample field\"); Object fieldValue = fv.getValue();","title":"getValue()"},{"location":"reference/record-field-model/#setvalueobject-value","text":"set the value of field in the record. Parameter Name type Description value Object The value of field in the record, read more at Field Type here . Return (none) Sample code set the value of field in the record. Source code Integer appID = 1; HashMap record = new HashMap (); FieldValue fv = new FieldValue(); fv.setType(FieldType.SINGLE_LINE_TEXT); fv.setValue(\"sample_AddRecord\"); record.put(\"FieldCode1\", fv); AddRecordResponse response = kintoneRecordManager.addRecord(appID, record);","title":"setValue(Object value)"},{"location":"reference/record-field-model/#subtablevalueitem","text":"","title":"SubTableValueItem"},{"location":"reference/record-field-model/#constructor_1","text":"Parameter (none)","title":"Constructor"},{"location":"reference/record-field-model/#methods_1","text":"","title":"Methods"},{"location":"reference/record-field-model/#getid","text":"get the ID of item in table. Parameter (none) Return Integer Sample code get the ID of item in table. Source code // execute GET RECORD API Integer appID = 1; Integer recordID =1; GetRecordResponse response = kintoneRecordManager.getRecord(appID, recordID); HashMap resultRecord = response.getRecord(); FieldValue fv = resultRecord.get(\"SubTable field\"); Object fieldValue = fv.getValue(); ArrayList subTable = (ArrayList )fieldValue; Integer itemID = subTable.get(0).getID();","title":"getID()"},{"location":"reference/record-field-model/#setidinteger-id","text":"set the ID of table. Parameter Name type Description id Integer The ID of table . Return (none) Sample code set the ID of item in table. Source code SubTableValueItem tableItem = new SubTableValueItem(); tableItem.setID(00000); HashMap tableItemValue = new HashMap (); FieldValue fv1 = new FieldValue(); fv1.setType(FieldType.SINGLE_LINE_TEXT); fv1.setValue(\"sample_text1\"); FieldValue fv2 = new FieldValue(); fv2.setType(FieldType.SINGLE_LINE_TEXT); fv2.setValue(\"sample_text2\"); tableItemValue.put(\"sample field1\", fv1); tableItemValue.put(\"sample field2\", fv2); tableItem.setValue(tableItemValue);","title":"setID(Integer id)"},{"location":"reference/record-field-model/#getvalue_1","text":"get the value of field in the record. Parameter (none) Return HashMap<String, FieldValue > Sample code get the ID of item in table. Source code // execute GET RECORD API Integer appID = 1; Integer recordID =1; GetRecordResponse response = kintoneRecordManager.getRecord(appID, recordID); HashMap resultRecord = response.getRecord(); FieldValue fv = resultRecord.get(\"SubTable field\"); Object fieldValue = fv.getValue(); ArrayList subTable = (ArrayList )fieldValue; HashMap itemValue= subTable.get(0).getValue();","title":"getValue()"},{"location":"reference/record-field-model/#setvaluehashmapstring-fieldvalue62-value","text":"set the value of field in the record. Parameter Name type Description value HashMap<String, FieldValue > The row data of table. Return (none) Sample code get the ID of item in table. Source code SubTableValueItem tableItem = new SubTableValueItem(); tableItem.setID(00000); HashMap tableItemValue = new HashMap (); FieldValue fv1 = new FieldValue(); fv1.setType(FieldType.SINGLE_LINE_TEXT); fv1.setValue(\"sample_text1\"); FieldValue fv2 = new FieldValue(); fv2.setType(FieldType.SINGLE_LINE_TEXT); fv2.setValue(\"sample_text2\"); tableItemValue.put(\"sample field1\", fv1); tableItemValue.put(\"sample field2\", fv2); tableItem.setValue(tableItemValue);","title":"setValue(HashMap&lt;String, FieldValue> value)"},{"location":"reference/record-model/","text":"Record Model General record response, using for data response from the kintone app GetRecordResponse Methods getRecord() get the Record data response. Parameter (none) Return HashMap<String, FieldValue > Sample code get the Record data response. Source code // execute GET RECORD API Integer appID = 1; Integer recordID =1; GetRecordResponse response = kintoneRecordManager.getRecord(appID, recordID); HashMap resultRecord = response.getRecord(); GetRecordsResponse Methods getRecords() get the Records data response. Parameter (none) Return ArrayList<HashMap<String, FieldValue >> Sample code get the Records data response Source code // execute GET RECORDS API Integer appID = 1; String query = \"$id >=\" + 1 + \"and $id < =\" + 10 + \"order by $id asc\"; GetRecordsResponse response = kintoneRecordManager.getRecords(appID, query, null, true); ArrayList > resultRecords = response.getRecords(); getTotalCount() get the number of records response. Parameter (none) Return Integer Sample code get the number of records response Source code // execute GET RECORDS API Integer appID = 1; String query = \"$id >=\" + 1 + \"and $id < =\" + 10 + \"order by $id asc\"; GetRecordsResponse response = kintoneRecordManager.getRecords(appID, query, null, true); Integer count = response.getTotalCount(); AddRecordResponse Methods getID() get the the ID of record added. Parameter (none) Return Integer Sample code get the the ID of record added Source code // execute ADD RECORD API Integer appID = 1; HashMap record = new HashMap (); FieldValue fv = new FieldValue(); fv.setType(FieldType.SINGLE_LINE_TEXT); fv.setValue(\"sample_AddRecord\"); record.put(\"FieldCode1\", fv); AddRecordResponse response = kintoneRecordManager.addRecord(appID, record); Integer resultID = response.getID(); getRevision() get the revision number of record added. Parameter (none) Return Integer Sample code get the revision number of record added Source code // execute ADD RECORD API Integer appID = 1; HashMap record = new HashMap (); FieldValue fv = new FieldValue(); fv.setType(FieldType.SINGLE_LINE_TEXT); fv.setValue(\"sample_AddRecord\"); record.put(\"FieldCode1\", fv); AddRecordResponse response = kintoneRecordManager.addRecord(appID, record); Integer resultRevision = response.getRevision(); AddRecordsResponse Methods getIDs() get the array of added records ID. Parameter (none) Return ArrayList<Integer> Sample code get the array of added records ID Source code // execute ADD RECORDS API Integer appID = 1; ArrayList > records = new ArrayList >(); HashMap record1 = new HashMap (); HashMap record2 = new HashMap (); FieldValue fv = new FieldValue(); fv.setType(FieldType.SINGLE_LINE_TEXT); fv.setValue(\"sample_AddRecords1\"); FieldValue fv2 = new FieldValue(); fv2.setType(FieldType.SINGLE_LINE_TEXT); fv2.setValue(\"sample_AddRecords2\"); record1.put(\"FieldCode1\", fv); record2.put(\"FieldCode1\", fv2); records.add(record1); records.add(record2); AddRecordsResponse response = kintoneRecordManager.addRecords(appID, records); ArrayList resultIDs = response.getIDs(); getRevisions() get the array of added records revision number. Parameter (none) Return ArrayList<Integer> Sample code get the array of added records revision number Source code // execute ADD RECORDS API Integer appID = 1; ArrayList > records = new ArrayList >(); HashMap record1 = new HashMap (); HashMap record2 = new HashMap (); FieldValue fv = new FieldValue(); fv.setType(FieldType.SINGLE_LINE_TEXT); fv.setValue(\"sample_AddRecords1\"); FieldValue fv2 = new FieldValue(); fv2.setType(FieldType.SINGLE_LINE_TEXT); fv2.setValue(\"sample_AddRecords2\"); record1.put(\"FieldCode1\", fv); record2.put(\"FieldCode1\", fv2); records.add(record1); records.add(record2); AddRecordsResponse response = kintoneRecordManager.addRecords(appID, records); ArrayList resultRevisions = response.getRevisions(); UpdateRecordResponse Methods getRevision() get the revision number of record updated. Parameter (none) Return Integer Sample code get the revision number of record updated Source code // execute UPDATE RECORD API Integer appID = 1; Integer recordID = 1; HashMap record = new HashMap (); Integer revision = 1; FieldValue fv = new FieldValue(); fv.setType(FieldType.SINGLE_LINE_TEXT); fv.setValue(\"sample_updateRecordById\"); record.put(\"FieldCode1\", fv); UpdateRecordResponse response = kintoneRecordManager.updateRecordByID(appID, recordID, record, revision); Integer resultRevision = response.getRevision(); UpdateRecordsResponse Methods getRecords() get the array of added records ID with revision. Parameter (none) Return ArrayList< RecordUpdateResponseItem > Sample code get the array of added records ID with revision Source code // execute UPDATE RECORDS API Integer appID = 1; HashMap record1 = new HashMap (); HashMap record2 = new HashMap (); Integer recordId1 = 1; Integer recordId2 = 2; FieldValue fv1 = new FieldValue(); fv1.setType(FieldType.SINGLE_LINE_TEXT); fv1.setValue(\"test_updateRecords1\"); FieldValue fv2 = new FieldValue(); fv2.setType(FieldType.SINGLE_LINE_TEXT); fv2.setValue(\"test_updateRecords2\"); record1.put(\"FieldCode1\", fv1); record2.put(\"FieldCode1\", fv2); ArrayList records = new ArrayList (); records.add(new RecordUpdateItem(recordId1, null, null, record1)); records.add(new RecordUpdateItem(recordId2, null, null, record2)); UpdateRecordsResponse response = kintoneRecordManager.updateRecords(appID, records); ArrayList resultRuris = response.getRecords(); RecordUpdateResponseItem Methods getID() get the the ID of record updated. Parameter (none) Return Integer Sample code get the the ID of record updated Source code // execute UPDATE RECORDS API Integer appID = 1; HashMap record1 = new HashMap (); HashMap record2 = new HashMap (); Integer recordId1 = 1; Integer recordId2 = 2; FieldValue fv1 = new FieldValue(); fv1.setType(FieldType.SINGLE_LINE_TEXT); fv1.setValue(\"test_updateRecords1\"); FieldValue fv2 = new FieldValue(); fv2.setType(FieldType.SINGLE_LINE_TEXT); fv2.setValue(\"test_updateRecords2\"); record1.put(\"FieldCode1\", fv1); record2.put(\"FieldCode1\", fv2); ArrayList records = ArrayList (); records.add(new RecordUpdateItem(recordId1, null, null, record1)); records.add(new RecordUpdateItem(recordId2, null, null, record2)); UpdateRecordsResponse response = kintoneRecordManager.updateRecords(appID, records); ArrayList resultRuris = response.getRecords(); RecordUpdateResponseItem resultRusi = resultRuris.get(0); Integer resultID = resultRusi.getID(); getRevision() get the revision number of record updated. Parameter (none) Return Integer Sample code get the revision number of record updated Source code // execute UPDATE RECORDS API Integer appID = 1; HashMap record1 = new HashMap (); HashMap record2 = new HashMap (); Integer recordId1 = 1; Integer recordId2 = 2; FieldValue fv1 = new FieldValue(); fv1.setType(FieldType.SINGLE_LINE_TEXT); fv1.setValue(\"test_updateRecords1\"); FieldValue fv2 = new FieldValue(); fv2.setType(FieldType.SINGLE_LINE_TEXT); fv2.setValue(\"test_updateRecords2\"); record1.put(\"FieldCode1\", fv1); record2.put(\"FieldCode1\", fv2); ArrayList records = new ArrayList (); records.add(new RecordUpdateItem(recordId1, null, null, record1)); records.add(new RecordUpdateItem(recordId2, null, null, record2)); UpdateRecordsResponse response = kintoneRecordManager.updateRecords(appID, records); ArrayList resultRuris = response.getRecords(); RecordUpdateResponseItem resultRusi = resultRuris.get(0); Integer resultRevision = resultRusi.getRevision(); RecordUpdateItem Constructor Parameter Name type Description id Integer The ID of the record. revision Integer The revision number of the record. updateKey RecordUpdateKey The unique key of the record to be updated. Required, if id will not be specified. To specify this field, the field must have the \"Prohibit duplicate values\" option turned on. record HashMap<String, FieldValue > The data to update record. Sample code init RecordUpdateItem class Source code // execute UPDATE RECORDS API Integer appID = 1; HashMap record1 = new HashMap (); HashMap record2 = new HashMap (); Integer recordId1 = 1; Integer recordId2 = 2; FieldValue fv1 = new FieldValue(); fv1.setType(FieldType.SINGLE_LINE_TEXT); fv1.setValue(\"test_updateRecords1\"); FieldValue fv2 = new FieldValue(); fv2.setType(FieldType.SINGLE_LINE_TEXT); fv2.setValue(\"test_updateRecords2\"); record1.put(\"FieldCode1\", fv1); record2.put(\"FieldCode1\", fv2); RecordUpdateItem updateItem1 = new RecordUpdateItem(recordId1, null, null, record1); RecordUpdateItem updateItem2 = new RecordUpdateItem(recordId2, null, null, record2); ArrayList records = new ArrayList (); records.add(updateItem1); records.add(updateItem2); UpdateRecordsResponse response = kintoneRecordManager.updateRecords(appID, records); Methods (none) RecordUpdateKey Constructor Parameter Name type Description field String The field code of unique key in the kintone app. value String The field value in the record. Sample code init RecordUpdateKey class Source code String field = \"field_code\"; String value = \"unique_value1\"; RecordUpdateKey uKey = new RecordUpdateKey(field, value); Methods (none) RecordUpdateStatusItem Constructor Parameter Name type Description action String The Action name of the action you want. assignee String (Optional) The next Assignee. Specify the Assignee's log in name.. id Integer The record ID. revision Integer (Optional) The revision number of the record before updating the status.If the specified revision is not the latest revision, the request will result in an error. Sample code init RecordUpdateStatusItem class Source code // execute UPDATE RECORDS API Integer appID = 1; String action = \"\u51e6\u7406\u958b\u59cb\"; String assignee = \"sample_user1\"; Integer recordID =1; Integer revision = 1; ArrayList rusi = new ArrayList (); RecordUpdateStatusItem updateStatusItem = new RecordUpdateStatusItem(action, assignee, recordID, revision); rusi.add(updateStatusItem); UpdateRecordsResponse response = kintoneRecordManager.updateRecordsStatus(appID, rusi); Methods (none)","title":"Record Model"},{"location":"reference/record-model/#record-model","text":"General record response, using for data response from the kintone app","title":"Record Model"},{"location":"reference/record-model/#getrecordresponse","text":"","title":"GetRecordResponse"},{"location":"reference/record-model/#methods","text":"","title":"Methods"},{"location":"reference/record-model/#getrecord","text":"get the Record data response. Parameter (none) Return HashMap<String, FieldValue > Sample code get the Record data response. Source code // execute GET RECORD API Integer appID = 1; Integer recordID =1; GetRecordResponse response = kintoneRecordManager.getRecord(appID, recordID); HashMap resultRecord = response.getRecord();","title":"getRecord()"},{"location":"reference/record-model/#getrecordsresponse","text":"","title":"GetRecordsResponse"},{"location":"reference/record-model/#methods_1","text":"","title":"Methods"},{"location":"reference/record-model/#getrecords","text":"get the Records data response. Parameter (none) Return ArrayList<HashMap<String, FieldValue >> Sample code get the Records data response Source code // execute GET RECORDS API Integer appID = 1; String query = \"$id >=\" + 1 + \"and $id < =\" + 10 + \"order by $id asc\"; GetRecordsResponse response = kintoneRecordManager.getRecords(appID, query, null, true); ArrayList > resultRecords = response.getRecords();","title":"getRecords()"},{"location":"reference/record-model/#gettotalcount","text":"get the number of records response. Parameter (none) Return Integer Sample code get the number of records response Source code // execute GET RECORDS API Integer appID = 1; String query = \"$id >=\" + 1 + \"and $id < =\" + 10 + \"order by $id asc\"; GetRecordsResponse response = kintoneRecordManager.getRecords(appID, query, null, true); Integer count = response.getTotalCount();","title":"getTotalCount()"},{"location":"reference/record-model/#addrecordresponse","text":"","title":"AddRecordResponse"},{"location":"reference/record-model/#methods_2","text":"","title":"Methods"},{"location":"reference/record-model/#getid","text":"get the the ID of record added. Parameter (none) Return Integer Sample code get the the ID of record added Source code // execute ADD RECORD API Integer appID = 1; HashMap record = new HashMap (); FieldValue fv = new FieldValue(); fv.setType(FieldType.SINGLE_LINE_TEXT); fv.setValue(\"sample_AddRecord\"); record.put(\"FieldCode1\", fv); AddRecordResponse response = kintoneRecordManager.addRecord(appID, record); Integer resultID = response.getID();","title":"getID()"},{"location":"reference/record-model/#getrevision","text":"get the revision number of record added. Parameter (none) Return Integer Sample code get the revision number of record added Source code // execute ADD RECORD API Integer appID = 1; HashMap record = new HashMap (); FieldValue fv = new FieldValue(); fv.setType(FieldType.SINGLE_LINE_TEXT); fv.setValue(\"sample_AddRecord\"); record.put(\"FieldCode1\", fv); AddRecordResponse response = kintoneRecordManager.addRecord(appID, record); Integer resultRevision = response.getRevision();","title":"getRevision()"},{"location":"reference/record-model/#addrecordsresponse","text":"","title":"AddRecordsResponse"},{"location":"reference/record-model/#methods_3","text":"","title":"Methods"},{"location":"reference/record-model/#getids","text":"get the array of added records ID. Parameter (none) Return ArrayList<Integer> Sample code get the array of added records ID Source code // execute ADD RECORDS API Integer appID = 1; ArrayList > records = new ArrayList >(); HashMap record1 = new HashMap (); HashMap record2 = new HashMap (); FieldValue fv = new FieldValue(); fv.setType(FieldType.SINGLE_LINE_TEXT); fv.setValue(\"sample_AddRecords1\"); FieldValue fv2 = new FieldValue(); fv2.setType(FieldType.SINGLE_LINE_TEXT); fv2.setValue(\"sample_AddRecords2\"); record1.put(\"FieldCode1\", fv); record2.put(\"FieldCode1\", fv2); records.add(record1); records.add(record2); AddRecordsResponse response = kintoneRecordManager.addRecords(appID, records); ArrayList resultIDs = response.getIDs();","title":"getIDs()"},{"location":"reference/record-model/#getrevisions","text":"get the array of added records revision number. Parameter (none) Return ArrayList<Integer> Sample code get the array of added records revision number Source code // execute ADD RECORDS API Integer appID = 1; ArrayList > records = new ArrayList >(); HashMap record1 = new HashMap (); HashMap record2 = new HashMap (); FieldValue fv = new FieldValue(); fv.setType(FieldType.SINGLE_LINE_TEXT); fv.setValue(\"sample_AddRecords1\"); FieldValue fv2 = new FieldValue(); fv2.setType(FieldType.SINGLE_LINE_TEXT); fv2.setValue(\"sample_AddRecords2\"); record1.put(\"FieldCode1\", fv); record2.put(\"FieldCode1\", fv2); records.add(record1); records.add(record2); AddRecordsResponse response = kintoneRecordManager.addRecords(appID, records); ArrayList resultRevisions = response.getRevisions();","title":"getRevisions()"},{"location":"reference/record-model/#updaterecordresponse","text":"","title":"UpdateRecordResponse"},{"location":"reference/record-model/#methods_4","text":"","title":"Methods"},{"location":"reference/record-model/#getrevision_1","text":"get the revision number of record updated. Parameter (none) Return Integer Sample code get the revision number of record updated Source code // execute UPDATE RECORD API Integer appID = 1; Integer recordID = 1; HashMap record = new HashMap (); Integer revision = 1; FieldValue fv = new FieldValue(); fv.setType(FieldType.SINGLE_LINE_TEXT); fv.setValue(\"sample_updateRecordById\"); record.put(\"FieldCode1\", fv); UpdateRecordResponse response = kintoneRecordManager.updateRecordByID(appID, recordID, record, revision); Integer resultRevision = response.getRevision();","title":"getRevision()"},{"location":"reference/record-model/#updaterecordsresponse","text":"","title":"UpdateRecordsResponse"},{"location":"reference/record-model/#methods_5","text":"","title":"Methods"},{"location":"reference/record-model/#getrecords_1","text":"get the array of added records ID with revision. Parameter (none) Return ArrayList< RecordUpdateResponseItem > Sample code get the array of added records ID with revision Source code // execute UPDATE RECORDS API Integer appID = 1; HashMap record1 = new HashMap (); HashMap record2 = new HashMap (); Integer recordId1 = 1; Integer recordId2 = 2; FieldValue fv1 = new FieldValue(); fv1.setType(FieldType.SINGLE_LINE_TEXT); fv1.setValue(\"test_updateRecords1\"); FieldValue fv2 = new FieldValue(); fv2.setType(FieldType.SINGLE_LINE_TEXT); fv2.setValue(\"test_updateRecords2\"); record1.put(\"FieldCode1\", fv1); record2.put(\"FieldCode1\", fv2); ArrayList records = new ArrayList (); records.add(new RecordUpdateItem(recordId1, null, null, record1)); records.add(new RecordUpdateItem(recordId2, null, null, record2)); UpdateRecordsResponse response = kintoneRecordManager.updateRecords(appID, records); ArrayList resultRuris = response.getRecords();","title":"getRecords()"},{"location":"reference/record-model/#recordupdateresponseitem","text":"","title":"RecordUpdateResponseItem"},{"location":"reference/record-model/#methods_6","text":"","title":"Methods"},{"location":"reference/record-model/#getid_1","text":"get the the ID of record updated. Parameter (none) Return Integer Sample code get the the ID of record updated Source code // execute UPDATE RECORDS API Integer appID = 1; HashMap record1 = new HashMap (); HashMap record2 = new HashMap (); Integer recordId1 = 1; Integer recordId2 = 2; FieldValue fv1 = new FieldValue(); fv1.setType(FieldType.SINGLE_LINE_TEXT); fv1.setValue(\"test_updateRecords1\"); FieldValue fv2 = new FieldValue(); fv2.setType(FieldType.SINGLE_LINE_TEXT); fv2.setValue(\"test_updateRecords2\"); record1.put(\"FieldCode1\", fv1); record2.put(\"FieldCode1\", fv2); ArrayList records = ArrayList (); records.add(new RecordUpdateItem(recordId1, null, null, record1)); records.add(new RecordUpdateItem(recordId2, null, null, record2)); UpdateRecordsResponse response = kintoneRecordManager.updateRecords(appID, records); ArrayList resultRuris = response.getRecords(); RecordUpdateResponseItem resultRusi = resultRuris.get(0); Integer resultID = resultRusi.getID();","title":"getID()"},{"location":"reference/record-model/#getrevision_2","text":"get the revision number of record updated. Parameter (none) Return Integer Sample code get the revision number of record updated Source code // execute UPDATE RECORDS API Integer appID = 1; HashMap record1 = new HashMap (); HashMap record2 = new HashMap (); Integer recordId1 = 1; Integer recordId2 = 2; FieldValue fv1 = new FieldValue(); fv1.setType(FieldType.SINGLE_LINE_TEXT); fv1.setValue(\"test_updateRecords1\"); FieldValue fv2 = new FieldValue(); fv2.setType(FieldType.SINGLE_LINE_TEXT); fv2.setValue(\"test_updateRecords2\"); record1.put(\"FieldCode1\", fv1); record2.put(\"FieldCode1\", fv2); ArrayList records = new ArrayList (); records.add(new RecordUpdateItem(recordId1, null, null, record1)); records.add(new RecordUpdateItem(recordId2, null, null, record2)); UpdateRecordsResponse response = kintoneRecordManager.updateRecords(appID, records); ArrayList resultRuris = response.getRecords(); RecordUpdateResponseItem resultRusi = resultRuris.get(0); Integer resultRevision = resultRusi.getRevision();","title":"getRevision()"},{"location":"reference/record-model/#recordupdateitem","text":"","title":"RecordUpdateItem"},{"location":"reference/record-model/#constructor","text":"Parameter Name type Description id Integer The ID of the record. revision Integer The revision number of the record. updateKey RecordUpdateKey The unique key of the record to be updated. Required, if id will not be specified. To specify this field, the field must have the \"Prohibit duplicate values\" option turned on. record HashMap<String, FieldValue > The data to update record. Sample code init RecordUpdateItem class Source code // execute UPDATE RECORDS API Integer appID = 1; HashMap record1 = new HashMap (); HashMap record2 = new HashMap (); Integer recordId1 = 1; Integer recordId2 = 2; FieldValue fv1 = new FieldValue(); fv1.setType(FieldType.SINGLE_LINE_TEXT); fv1.setValue(\"test_updateRecords1\"); FieldValue fv2 = new FieldValue(); fv2.setType(FieldType.SINGLE_LINE_TEXT); fv2.setValue(\"test_updateRecords2\"); record1.put(\"FieldCode1\", fv1); record2.put(\"FieldCode1\", fv2); RecordUpdateItem updateItem1 = new RecordUpdateItem(recordId1, null, null, record1); RecordUpdateItem updateItem2 = new RecordUpdateItem(recordId2, null, null, record2); ArrayList records = new ArrayList (); records.add(updateItem1); records.add(updateItem2); UpdateRecordsResponse response = kintoneRecordManager.updateRecords(appID, records);","title":"Constructor"},{"location":"reference/record-model/#methods_7","text":"(none)","title":"Methods"},{"location":"reference/record-model/#recordupdatekey","text":"","title":"RecordUpdateKey"},{"location":"reference/record-model/#constructor_1","text":"Parameter Name type Description field String The field code of unique key in the kintone app. value String The field value in the record. Sample code init RecordUpdateKey class Source code String field = \"field_code\"; String value = \"unique_value1\"; RecordUpdateKey uKey = new RecordUpdateKey(field, value);","title":"Constructor"},{"location":"reference/record-model/#methods_8","text":"(none)","title":"Methods"},{"location":"reference/record-model/#recordupdatestatusitem","text":"","title":"RecordUpdateStatusItem"},{"location":"reference/record-model/#constructor_2","text":"Parameter Name type Description action String The Action name of the action you want. assignee String (Optional) The next Assignee. Specify the Assignee's log in name.. id Integer The record ID. revision Integer (Optional) The revision number of the record before updating the status.If the specified revision is not the latest revision, the request will result in an error. Sample code init RecordUpdateStatusItem class Source code // execute UPDATE RECORDS API Integer appID = 1; String action = \"\u51e6\u7406\u958b\u59cb\"; String assignee = \"sample_user1\"; Integer recordID =1; Integer revision = 1; ArrayList rusi = new ArrayList (); RecordUpdateStatusItem updateStatusItem = new RecordUpdateStatusItem(action, assignee, recordID, revision); rusi.add(updateStatusItem); UpdateRecordsResponse response = kintoneRecordManager.updateRecordsStatus(appID, rusi);","title":"Constructor"},{"location":"reference/record-model/#methods_9","text":"(none)","title":"Methods"},{"location":"reference/record/","text":"Record Provide manipulate functions on records: get, update, delete, update the record status & assignees in the kintone app Constructor Parameter Name Type Required Description connection Connection yes The connection module of this SDK. Sample code Init record module Source code String USERNAME = \"cybozu\"; String PASSWORD = \"cybozu\"; // Init authenticationAuth Auth kintoneAuthWithPassword = new Auth(); kintoneAuthWithPassword.setPasswordAuth(USERNAME, PASSWORD); // Init Connection without \"guest space ID\" Connection kintoneOnDemoDomain = new Connection(\"sample.domain.dot\", kintoneAuthWithPassword); // Init Record Module Record kintoneRecordManager = new Record(kintoneOnDemoDomain); Methods getRecord(app, id) Retrieves details of 1 record from an app. Parameter Name Type Required Description app Integer yes The kintone app ID id Integer yes The record ID in kintone app Return GetRecordResponse Sample code Get record Source code String USERNAME = \"cybozu\"; String PASSWORD = \"cybozu\"; // Init authenticationAuth Auth kintoneAuthWithPassword = new Auth(); kintoneAuthWithPassword.setPasswordAuth(USERNAME, PASSWORD); // Init Connection without \"guest space ID\" Connection kintoneOnDemoDomain = new Connection(\"sample.domain.dot\", kintoneAuthWithPassword); // Init Record Module Record kintoneRecordManager = new Record(kintoneOnDemoDomain); // execute GET RECORD API Integer appID = 1; Integer recordID = 1; GetRecordResponse response = kintoneRecordManager.getRecord(appID, recordID); getRecords(app, query, fields, totalCount) Retrieves details of multiple records from an app using a query string. Parameter Name Type Required Description app Integer yes The kintone app ID query String (optional) The query string that will specify what records will be responded. fields ArrayList<String> (optional) List of field codes you want in the response. totalCount Boolean (optional) If \"true\", the request will retrieve total count of records match with query conditions. Return GetRecordsResponse Sample code Get records Source code String USERNAME = \"cybozu\"; String PASSWORD = \"cybozu\"; // Init authenticationAuth Auth kintoneAuthWithPassword = new Auth(); kintoneAuthWithPassword.setPasswordAuth(USERNAME, PASSWORD); // Init Connection without \"guest space ID\" Connection kintoneOnDemoDomain = new Connection(\"sample.domain.dot\", kintoneAuthWithPassword); // Init Record Module Record kintoneRecordManager = new Record(kintoneOnDemoDomain); // execute GET RECORDS API Integer appID = 1; String query = \"$id >=\" + 1 + \"and $id < =\" + 10 + \"order by $id asc\"; GetRecordsResponse response = kintoneRecordManager.getRecords(appID, query, null, true); addRecord(app, record) Add one record to an app. Parameter Name Type Required Description app Integer yes The kintone app ID record HashMap<String, FieldValue > (optional) The record data to be add to kintone app. About the format, please look the sample below or reference at the end of this page Return AddRecordResponse Sample code Add record Source code String USERNAME = \"cybozu\"; String PASSWORD = \"cybozu\"; // Init authenticationAuth Auth kintoneAuthWithPassword = new Auth(); kintoneAuthWithPassword.setPasswordAuth(USERNAME, PASSWORD); // Init Connection without \"guest space ID\" Connection kintoneOnDemoDomain = new Connection(\"sample.domain.dot\", kintoneAuthWithPassword); // Init Record Module Record kintoneRecordManager = new Record(kintoneOnDemoDomain); // execute ADD RECORD API Integer appID = 1; HashMap record = new HashMap (); FieldValue fv = new FieldValue(); fv.setType(FieldType.SINGLE_LINE_TEXT); fv.setValue(\"sample_AddRecord\"); record.put(\"FieldCode1\", fv); AddRecordResponse response = kintoneRecordManager.addRecord(appID, record); addRecords(app, records) Add multiple records to an app. Parameter Name Type Required Description app Integer yes The kintone app ID records ArrayList<HashMap<String, FieldValue >> yes List of records data to be add to kintone app. About the format, please look the sample below or reference at the end of this page. Return AddRecordsResponse Sample code Add multi records Source code String USERNAME = \"cybozu\"; String PASSWORD = \"cybozu\"; // Init authenticationAuth Auth kintoneAuthWithPassword = new Auth(); kintoneAuthWithPassword.setPasswordAuth(USERNAME, PASSWORD); // Init Connection without \"guest space ID\" Connection kintoneOnDemoDomain = new Connection(\"sample.domain.dot\", kintoneAuthWithPassword); // Init Record Module Record kintoneRecordManager = new Record(kintoneOnDemoDomain); // execute ADD RECORDS API Integer appID = 1; ArrayList > records = new ArrayList >(); HashMap record1 = new HashMap (); HashMap record2 = new HashMap (); FieldValue fv = new FieldValue(); fv.setType(FieldType.SINGLE_LINE_TEXT); fv.setValue(\"sample_AddRecords1\"); FieldValue fv2 = new FieldValue(); fv2.setType(FieldType.SINGLE_LINE_TEXT); fv2.setValue(\"sample_AddRecords2\"); record1.put(\"FieldCode1\", fv); record2.put(\"FieldCode1\", fv2); records.add(record1); records.add(record2); AddRecordsResponse response = kintoneRecordManager.addRecords(appID, records); updateRecordByID(app, id, record, revision) Updates details of 1 record in an app by specifying its record number. Parameter Name Type Required Description app Integer yes The kintone app ID id Integer yes The record ID on kintone app record HashMap<String, FieldValue > yes The record data to be update in kintone app. About the format, please look the sample below or reference at the end of this page. revision Integer (optional) The revision number of record Return UpdateRecordResponse Sample code Update record by ID Source code String USERNAME = \"cybozu\"; String PASSWORD = \"cybozu\"; // Init authenticationAuth Auth kintoneAuthWithPassword = new Auth(); kintoneAuthWithPassword.setPasswordAuth(USERNAME, PASSWORD); // Init Connection without \"guest space ID\" Connection kintoneOnDemoDomain = new Connection(\"sample.domain.dot\", kintoneAuthWithPassword); // Init Record Module Record kintoneRecordManager = new Record(kintoneOnDemoDomain); // execute UPDATE RECORD API Integer appID = 1; Integer recordID = 1; Integer revision = 1; HashMap record = new HashMap (); FieldValue fv = new FieldValue(); fv.setType(FieldType.SINGLE_LINE_TEXT); fv.setValue(\"sample_updateRecordById\"); record.put(\"FieldCode1\", fv); UpdateRecordResponse response = kintoneRecordManager.updateRecordByID(appID, recordID, record, revision); updateRecordByUpdateKey(app, updateKey, record, revision) Updates details of 1 record in an app by unique key. Parameter Name Type Required Description app Integer yes The kintone app ID updateKey RecordUpdateKey yes The unique key of the record to be updated. About the format, please look the sample below or reference at the end of this page. record HashMap<String, FieldValue > yes The record data will be added to kintone app. About the format, please look the sample below or reference at the end of this page. revision Integer (optional) The revision number of record Return UpdateRecordResponse Sample code Update record by UpdateKey Source code String USERNAME = \"cybozu\"; String PASSWORD = \"cybozu\"; // Init authenticationAuth Auth kintoneAuthWithPassword = new Auth(); kintoneAuthWithPassword.setPasswordAuth(USERNAME, PASSWORD); // Init Connection without \"guest space ID\" Connection kintoneOnDemoDomain = new Connection(\"sample.domain.dot\", kintoneAuthWithPassword); // Init Record Module Record kintoneRecordManager = new Record(kintoneOnDemoDomain); // execute UPDATE RECORD API Integer appID = 1; HashMap record = new HashMap (); RecordUpdateKey uKey = new RecordUpdateKey(\"\u6587\u5b57\u5217__1\u884c__0\", \"unique_value1\"); Integer revision = 1; FieldValue fv = new FieldValue(); fv.setType(FieldType.SINGLE_LINE_TEXT); fv.setValue(\"sample_updateRecordByUpdateKey\"); record.put(\"FieldCode1\", fv); UpdateRecordResponse response = kintoneRecordManager.updateRecordByUpdateKey(appID, uKey, record, revision); updateRecords(app, records) Updates details of multiple records in an app, by specifying their record number, or a different unique key. Parameter Name Type Required Description app Integer yes The kintone app ID records ArrayList< RecordUpdateItem > yes The record data will be added to kintone app. About the format, please look the sample below or reference at the end of this page. Return UpdateRecordsResponse Sample code Update multi records Source code String USERNAME = \"cybozu\"; String PASSWORD = \"cybozu\"; // Init authenticationAuth Auth kintoneAuthWithPassword = new Auth(); kintoneAuthWithPassword.setPasswordAuth(USERNAME, PASSWORD); // Init Connection without \"guest space ID\" Connection kintoneOnDemoDomain = new Connection(\"sample.domain.dot\", kintoneAuthWithPassword); // Init Record Module Record kintoneRecordManager = new Record(kintoneOnDemoDomain); // execute UPDATE RECORDS API Integer appID = 1; HashMap record1 = new HashMap (); HashMap record2 = new HashMap (); FieldValue fv1 = new FieldValue(); fv1.setType(FieldType.SINGLE_LINE_TEXT); fv1.setValue(\"test_updateRecords1\"); FieldValue fv2 = new FieldValue(); fv2.setType(FieldType.SINGLE_LINE_TEXT); fv2.setValue(\"test_updateRecords2\"); record1.put(\"FieldCode1\", fv1); record2.put(\"FieldCode1\", fv2); ArrayList records = new ArrayList (); records.add(new RecordUpdateItem(1, null, null, record1)); records.add(new RecordUpdateItem(2, null, null, record2)); UpdateRecordsResponse response = kintoneRecordManager.updateRecords(appID, records); deleteRecords(app, ids) Deletes multiple records in an app. Parameter Name Type Required Description app Integer yes The kintone app ID ids ArrayList<Integer> yes The list ids of record will be delete. Return (none) Sample code Delete multi record Source code String USERNAME = \"cybozu\"; String PASSWORD = \"cybozu\"; // Init authenticationAuth Auth kintoneAuthWithPassword = new Auth(); kintoneAuthWithPassword.setPasswordAuth(USERNAME, PASSWORD); // Init Connection without \"guest space ID\" Connection kintoneOnDemoDomain = new Connection(\"sample.domain.dot\", kintoneAuthWithPassword); // Init Record Module Record kintoneRecordManager = new Record(kintoneOnDemoDomain); // execute DELETE RECORDS API Integer appID = 1; ArrayList ids = new ArrayList (); ids.add(1); ids.add(2); kintoneRecordManager.deleteRecords(appID, ids); deleteRecordsWithRevision(app, idsWithRevision) Deletes multiple records in an app with revision. Parameter Name Type Required Description app Integer yes The kintone app ID idsWithRevision HashTable<Integer, Integer> yes ( key : The Id of record , value : The Revision of record. ) Return (none) Sample code Delete record with revision Source code String USERNAME = \"cybozu\"; String PASSWORD = \"cybozu\"; // Init authenticationAuth Auth kintoneAuthWithPassword = new Auth(); kintoneAuthWithPassword.setPasswordAuth(USERNAME, PASSWORD); // Init Connection without \"guest space ID\" Connection kintoneOnDemoDomain = new Connection(\"sample.domain.dot\", kintoneAuthWithPassword); // Init Record Module Record kintoneRecordManager = new Record(kintoneOnDemoDomain); // execute DELETE RECORDS API Integer appID = 1; HashMap idsWithRevision = new HashMap (); idsWithRevision.put(1, 1); idsWithRevision.put(2, null); idsWithRevision.put(3, -1); kintoneRecordManager.deleteRecordsWithRevision(appID, idsWithRevision); updateRecordAssignees(app, id, assignees, revision) Update assignees of a record. Parameter Name Type Required Description app Integer yes The kintone app ID id Integer yes The record ID of kintone app assignees ArrayList<String> yes The user code(s) of the assignee(s) revision Integer (option) The revision number of record Return UpdateRecordResponse Sample code update record Assignees Source code String USERNAME = \"cybozu\"; String PASSWORD = \"cybozu\"; // Init authenticationAuth Auth kintoneAuthWithPassword = new Auth(); kintoneAuthWithPassword.setPasswordAuth(USERNAME, PASSWORD); // Init Connection without \"guest space ID\" Connection kintoneOnDemoDomain = new Connection(\"sample.domain.dot\", kintoneAuthWithPassword); // Init Record Module Record kintoneRecordManager = new Record(kintoneOnDemoDomain); // execute UPDATE RECORD API Integer appID = 1; Integer recordID =1; ArrayList assignees = new ArrayList (); assignees.add(\"sample_user\"); Integer revision = 1; UpdateRecordResponse response = kintoneRecordManager.updateRecordAssignees(appID, recordID, assignees, revision); updateRecordStatus(app, id, action, assignee, revision) Updates the Status of a record of an app. Parameter Name Type Required Description app Integer yes The kintone app ID. id Integer yes The record ID on kintone app. action String yes The Action name will be run. assignee String (Conditionally required) The next Assignee. Specify the Assignee's log in name. Required, if the \"Assignee List\" of the current status is set to \"User chooses one assignee from the list to take action\", and a selectable assignee exists. revision Integer (optional) The revision of record Return UpdateRecordResponse Sample code Update record status Source code String USERNAME = \"cybozu\"; String PASSWORD = \"cybozu\"; // Init authenticationAuth Auth kintoneAuthWithPassword = new Auth(); kintoneAuthWithPassword.setPasswordAuth(USERNAME, PASSWORD); // Init Connection without \"guest space ID\" Connection kintoneOnDemoDomain = new Connection(\"sample.domain.dot\", kintoneAuthWithPassword); // Init Record Module Record kintoneRecordManager = new Record(kintoneOnDemoDomain); // execute UPDATE RECORD API Integer appID = 1; Integer recordID =1; String assignee = \"sample_user\"; String action = \"\u51e6\u7406\u958b\u59cb\"; Integer revision = 1; UpdateRecordResponse response = kintoneRecordManager.updateRecordStatus(appID, recordID, action, assignee, revision); updateRecordsStatus(app, records) Updates the Status of multiple records of an app. Parameter Name Type Required Description app Integer yes The kintone app ID records ArrayList< RecordUpdateStatusItem > yes The recod status data. See belowsample codee or reference at the end of this page to know format. Return UpdateRecordsResponse Sample code Update multi record status Source code String USERNAME = \"cybozu\"; String PASSWORD = \"cybozu\"; // Init authenticationAuth Auth kintoneAuthWithPassword = new Auth(); kintoneAuthWithPassword.setPasswordAuth(USERNAME, PASSWORD); // Init Connection without \"guest space ID\" Connection kintoneOnDemoDomain = new Connection(\"sample.domain.dot\", kintoneAuthWithPassword); // Init Record Module Record kintoneRecordManager = new Record(kintoneOnDemoDomain); // execute UPDATE RECORDS API Integer appID = 1; ArrayList rusi = new ArrayList (); String action = \"\u51e6\u7406\u958b\u59cb\"; String assignee = \"sample_user1\"; Integer recordID1 =1; Integer recordID2 =2; Integer recordID3 =3; Integer revision1 = 1; Integer revision2 = null; Integer revision3 = -1; rusi.add(new RecordUpdateStatusItem(action, assignee, recordID1, revision1)); rusi.add(new RecordUpdateStatusItem(action, assignee, recordID2, revision2)); rusi.add(new RecordUpdateStatusItem(action, assignee, recordID3, revision3)); UpdateRecordsResponse response = kintoneRecordManager.updateRecordsStatus(appID, rusi); getComments(app, record, order, offset, limit) Parameter Name Type Required Description app Integer yes The kintone app ID record Integer yes The kintone app ID order String (optional) The sort order of the Comment ID. Please select asc or desc offset Integer (optional) The number of first comments will be ignored. limit Integer (optional) The number of records to retrieve. Return GetCommentsResponse Sample code Get comments Source code String USERNAME = \"cybozu\"; String PASSWORD = \"cybozu\"; // Init authenticationAuth Auth kintoneAuthWithPassword = new Auth(); kintoneAuthWithPassword.setPasswordAuth(USERNAME, PASSWORD); // Init Connection without \"guest space ID\" Connection kintoneOnDemoDomain = new Connection(\"sample.domain.dot\", kintoneAuthWithPassword); // Init Record Module Record kintoneRecordManager = new Record(kintoneOnDemoDomain); // execute GET RECORD_COMMENTS API Integer appID = 1; Integer recordID = 1; String order = \"asc\"; Integer offsset = 1; Integer limit = 2; GetCommentsResponse response = kintoneRecordManager.getComments(appID, recordID, order, offsset, limit); addComment(app, record, comment) Parameter Name Type Required Description app Integer yes The kintone app ID record Integer yes The kintone app ID comment CommentContent yes About the format, please look the sample below or reference at the end of this page. Return AddCommentResponse Sample code Add comment Source code String USERNAME = \"cybozu\"; String PASSWORD = \"cybozu\"; // Init authenticationAuth Auth kintoneAuthWithPassword = new Auth(); kintoneAuthWithPassword.setPasswordAuth(USERNAME, PASSWORD); // Init Connection without \"guest space ID\" Connection kintoneOnDemoDomain = new Connection(\"sample.domain.dot\", kintoneAuthWithPassword); // Init Record Module Record kintoneRecordManager = new Record(kintoneOnDemoDomain); // execute ADD RECORD_COMMENT API Integer app = 1; Integer record = 1; CommentContent comment = new CommentContent(); ArrayList mentionList = new ArrayList (); CommentMention mention = new CommentMention(); mention.setCode(\"sample_user\"); mention.setType(\"USER\"); mentionList.add(mention); comment.setText(\"test comment\"); comment.setMentions(mentionList); AddCommentResponse response = kintoneRecordManager.addComment(app, record, comment); deleteComment(app, record, comment) Parameter Name Type Required Description app Integer yes The kintone app ID record Integer yes The record ID on kintone app comment Integer yes The comment ID on kintone record Return (none) Sample code Delete comment Source code String USERNAME = \"cybozu\"; String PASSWORD = \"cybozu\"; // Init authenticationAuth Auth kintoneAuthWithPassword = new Auth(); kintoneAuthWithPassword.setPasswordAuth(USERNAME, PASSWORD); // Init Connection without \"guest space ID\" Connection kintoneOnDemoDomain = new Connection(\"sample.domain.dot\", kintoneAuthWithPassword); // Init Record Module Record kintoneRecordManager = new Record(kintoneOnDemoDomain); // execute DELETE RECORD_COMMENT API Integer app = 1; Integer record = 1; Integer comment = 1; kintoneRecordManager.deleteComment(app, record, comment); Reference Get Record on developer network Add Record on developer network Update Record on developer network Delete Record on developer network Get Comments on developer network Add Comment on developer network Delete Comment on developer network Update Record Status on developer network Update Record Assignees on developer network","title":"Record"},{"location":"reference/record/#record","text":"Provide manipulate functions on records: get, update, delete, update the record status & assignees in the kintone app","title":"Record"},{"location":"reference/record/#constructor","text":"Parameter Name Type Required Description connection Connection yes The connection module of this SDK. Sample code Init record module Source code String USERNAME = \"cybozu\"; String PASSWORD = \"cybozu\"; // Init authenticationAuth Auth kintoneAuthWithPassword = new Auth(); kintoneAuthWithPassword.setPasswordAuth(USERNAME, PASSWORD); // Init Connection without \"guest space ID\" Connection kintoneOnDemoDomain = new Connection(\"sample.domain.dot\", kintoneAuthWithPassword); // Init Record Module Record kintoneRecordManager = new Record(kintoneOnDemoDomain);","title":"Constructor"},{"location":"reference/record/#methods","text":"","title":"Methods"},{"location":"reference/record/#getrecordapp-id","text":"Retrieves details of 1 record from an app. Parameter Name Type Required Description app Integer yes The kintone app ID id Integer yes The record ID in kintone app Return GetRecordResponse Sample code Get record Source code String USERNAME = \"cybozu\"; String PASSWORD = \"cybozu\"; // Init authenticationAuth Auth kintoneAuthWithPassword = new Auth(); kintoneAuthWithPassword.setPasswordAuth(USERNAME, PASSWORD); // Init Connection without \"guest space ID\" Connection kintoneOnDemoDomain = new Connection(\"sample.domain.dot\", kintoneAuthWithPassword); // Init Record Module Record kintoneRecordManager = new Record(kintoneOnDemoDomain); // execute GET RECORD API Integer appID = 1; Integer recordID = 1; GetRecordResponse response = kintoneRecordManager.getRecord(appID, recordID);","title":"getRecord(app, id)"},{"location":"reference/record/#getrecordsapp-query-fields-totalcount","text":"Retrieves details of multiple records from an app using a query string. Parameter Name Type Required Description app Integer yes The kintone app ID query String (optional) The query string that will specify what records will be responded. fields ArrayList<String> (optional) List of field codes you want in the response. totalCount Boolean (optional) If \"true\", the request will retrieve total count of records match with query conditions. Return GetRecordsResponse Sample code Get records Source code String USERNAME = \"cybozu\"; String PASSWORD = \"cybozu\"; // Init authenticationAuth Auth kintoneAuthWithPassword = new Auth(); kintoneAuthWithPassword.setPasswordAuth(USERNAME, PASSWORD); // Init Connection without \"guest space ID\" Connection kintoneOnDemoDomain = new Connection(\"sample.domain.dot\", kintoneAuthWithPassword); // Init Record Module Record kintoneRecordManager = new Record(kintoneOnDemoDomain); // execute GET RECORDS API Integer appID = 1; String query = \"$id >=\" + 1 + \"and $id < =\" + 10 + \"order by $id asc\"; GetRecordsResponse response = kintoneRecordManager.getRecords(appID, query, null, true);","title":"getRecords(app, query, fields, totalCount)"},{"location":"reference/record/#addrecordapp-record","text":"Add one record to an app. Parameter Name Type Required Description app Integer yes The kintone app ID record HashMap<String, FieldValue > (optional) The record data to be add to kintone app. About the format, please look the sample below or reference at the end of this page Return AddRecordResponse Sample code Add record Source code String USERNAME = \"cybozu\"; String PASSWORD = \"cybozu\"; // Init authenticationAuth Auth kintoneAuthWithPassword = new Auth(); kintoneAuthWithPassword.setPasswordAuth(USERNAME, PASSWORD); // Init Connection without \"guest space ID\" Connection kintoneOnDemoDomain = new Connection(\"sample.domain.dot\", kintoneAuthWithPassword); // Init Record Module Record kintoneRecordManager = new Record(kintoneOnDemoDomain); // execute ADD RECORD API Integer appID = 1; HashMap record = new HashMap (); FieldValue fv = new FieldValue(); fv.setType(FieldType.SINGLE_LINE_TEXT); fv.setValue(\"sample_AddRecord\"); record.put(\"FieldCode1\", fv); AddRecordResponse response = kintoneRecordManager.addRecord(appID, record);","title":"addRecord(app, record)"},{"location":"reference/record/#addrecordsapp-records","text":"Add multiple records to an app. Parameter Name Type Required Description app Integer yes The kintone app ID records ArrayList<HashMap<String, FieldValue >> yes List of records data to be add to kintone app. About the format, please look the sample below or reference at the end of this page. Return AddRecordsResponse Sample code Add multi records Source code String USERNAME = \"cybozu\"; String PASSWORD = \"cybozu\"; // Init authenticationAuth Auth kintoneAuthWithPassword = new Auth(); kintoneAuthWithPassword.setPasswordAuth(USERNAME, PASSWORD); // Init Connection without \"guest space ID\" Connection kintoneOnDemoDomain = new Connection(\"sample.domain.dot\", kintoneAuthWithPassword); // Init Record Module Record kintoneRecordManager = new Record(kintoneOnDemoDomain); // execute ADD RECORDS API Integer appID = 1; ArrayList > records = new ArrayList >(); HashMap record1 = new HashMap (); HashMap record2 = new HashMap (); FieldValue fv = new FieldValue(); fv.setType(FieldType.SINGLE_LINE_TEXT); fv.setValue(\"sample_AddRecords1\"); FieldValue fv2 = new FieldValue(); fv2.setType(FieldType.SINGLE_LINE_TEXT); fv2.setValue(\"sample_AddRecords2\"); record1.put(\"FieldCode1\", fv); record2.put(\"FieldCode1\", fv2); records.add(record1); records.add(record2); AddRecordsResponse response = kintoneRecordManager.addRecords(appID, records);","title":"addRecords(app, records)"},{"location":"reference/record/#updaterecordbyidapp-id-record-revision","text":"Updates details of 1 record in an app by specifying its record number. Parameter Name Type Required Description app Integer yes The kintone app ID id Integer yes The record ID on kintone app record HashMap<String, FieldValue > yes The record data to be update in kintone app. About the format, please look the sample below or reference at the end of this page. revision Integer (optional) The revision number of record Return UpdateRecordResponse Sample code Update record by ID Source code String USERNAME = \"cybozu\"; String PASSWORD = \"cybozu\"; // Init authenticationAuth Auth kintoneAuthWithPassword = new Auth(); kintoneAuthWithPassword.setPasswordAuth(USERNAME, PASSWORD); // Init Connection without \"guest space ID\" Connection kintoneOnDemoDomain = new Connection(\"sample.domain.dot\", kintoneAuthWithPassword); // Init Record Module Record kintoneRecordManager = new Record(kintoneOnDemoDomain); // execute UPDATE RECORD API Integer appID = 1; Integer recordID = 1; Integer revision = 1; HashMap record = new HashMap (); FieldValue fv = new FieldValue(); fv.setType(FieldType.SINGLE_LINE_TEXT); fv.setValue(\"sample_updateRecordById\"); record.put(\"FieldCode1\", fv); UpdateRecordResponse response = kintoneRecordManager.updateRecordByID(appID, recordID, record, revision);","title":"updateRecordByID(app, id, record, revision)"},{"location":"reference/record/#updaterecordbyupdatekeyapp-updatekey-record-revision","text":"Updates details of 1 record in an app by unique key. Parameter Name Type Required Description app Integer yes The kintone app ID updateKey RecordUpdateKey yes The unique key of the record to be updated. About the format, please look the sample below or reference at the end of this page. record HashMap<String, FieldValue > yes The record data will be added to kintone app. About the format, please look the sample below or reference at the end of this page. revision Integer (optional) The revision number of record Return UpdateRecordResponse Sample code Update record by UpdateKey Source code String USERNAME = \"cybozu\"; String PASSWORD = \"cybozu\"; // Init authenticationAuth Auth kintoneAuthWithPassword = new Auth(); kintoneAuthWithPassword.setPasswordAuth(USERNAME, PASSWORD); // Init Connection without \"guest space ID\" Connection kintoneOnDemoDomain = new Connection(\"sample.domain.dot\", kintoneAuthWithPassword); // Init Record Module Record kintoneRecordManager = new Record(kintoneOnDemoDomain); // execute UPDATE RECORD API Integer appID = 1; HashMap record = new HashMap (); RecordUpdateKey uKey = new RecordUpdateKey(\"\u6587\u5b57\u5217__1\u884c__0\", \"unique_value1\"); Integer revision = 1; FieldValue fv = new FieldValue(); fv.setType(FieldType.SINGLE_LINE_TEXT); fv.setValue(\"sample_updateRecordByUpdateKey\"); record.put(\"FieldCode1\", fv); UpdateRecordResponse response = kintoneRecordManager.updateRecordByUpdateKey(appID, uKey, record, revision);","title":"updateRecordByUpdateKey(app, updateKey, record, revision)"},{"location":"reference/record/#updaterecordsapp-records","text":"Updates details of multiple records in an app, by specifying their record number, or a different unique key. Parameter Name Type Required Description app Integer yes The kintone app ID records ArrayList< RecordUpdateItem > yes The record data will be added to kintone app. About the format, please look the sample below or reference at the end of this page. Return UpdateRecordsResponse Sample code Update multi records Source code String USERNAME = \"cybozu\"; String PASSWORD = \"cybozu\"; // Init authenticationAuth Auth kintoneAuthWithPassword = new Auth(); kintoneAuthWithPassword.setPasswordAuth(USERNAME, PASSWORD); // Init Connection without \"guest space ID\" Connection kintoneOnDemoDomain = new Connection(\"sample.domain.dot\", kintoneAuthWithPassword); // Init Record Module Record kintoneRecordManager = new Record(kintoneOnDemoDomain); // execute UPDATE RECORDS API Integer appID = 1; HashMap record1 = new HashMap (); HashMap record2 = new HashMap (); FieldValue fv1 = new FieldValue(); fv1.setType(FieldType.SINGLE_LINE_TEXT); fv1.setValue(\"test_updateRecords1\"); FieldValue fv2 = new FieldValue(); fv2.setType(FieldType.SINGLE_LINE_TEXT); fv2.setValue(\"test_updateRecords2\"); record1.put(\"FieldCode1\", fv1); record2.put(\"FieldCode1\", fv2); ArrayList records = new ArrayList (); records.add(new RecordUpdateItem(1, null, null, record1)); records.add(new RecordUpdateItem(2, null, null, record2)); UpdateRecordsResponse response = kintoneRecordManager.updateRecords(appID, records);","title":"updateRecords(app, records)"},{"location":"reference/record/#deleterecordsapp-ids","text":"Deletes multiple records in an app. Parameter Name Type Required Description app Integer yes The kintone app ID ids ArrayList<Integer> yes The list ids of record will be delete. Return (none) Sample code Delete multi record Source code String USERNAME = \"cybozu\"; String PASSWORD = \"cybozu\"; // Init authenticationAuth Auth kintoneAuthWithPassword = new Auth(); kintoneAuthWithPassword.setPasswordAuth(USERNAME, PASSWORD); // Init Connection without \"guest space ID\" Connection kintoneOnDemoDomain = new Connection(\"sample.domain.dot\", kintoneAuthWithPassword); // Init Record Module Record kintoneRecordManager = new Record(kintoneOnDemoDomain); // execute DELETE RECORDS API Integer appID = 1; ArrayList ids = new ArrayList (); ids.add(1); ids.add(2); kintoneRecordManager.deleteRecords(appID, ids);","title":"deleteRecords(app, ids)"},{"location":"reference/record/#deleterecordswithrevisionapp-idswithrevision","text":"Deletes multiple records in an app with revision. Parameter Name Type Required Description app Integer yes The kintone app ID idsWithRevision HashTable<Integer, Integer> yes ( key : The Id of record , value : The Revision of record. ) Return (none) Sample code Delete record with revision Source code String USERNAME = \"cybozu\"; String PASSWORD = \"cybozu\"; // Init authenticationAuth Auth kintoneAuthWithPassword = new Auth(); kintoneAuthWithPassword.setPasswordAuth(USERNAME, PASSWORD); // Init Connection without \"guest space ID\" Connection kintoneOnDemoDomain = new Connection(\"sample.domain.dot\", kintoneAuthWithPassword); // Init Record Module Record kintoneRecordManager = new Record(kintoneOnDemoDomain); // execute DELETE RECORDS API Integer appID = 1; HashMap idsWithRevision = new HashMap (); idsWithRevision.put(1, 1); idsWithRevision.put(2, null); idsWithRevision.put(3, -1); kintoneRecordManager.deleteRecordsWithRevision(appID, idsWithRevision);","title":"deleteRecordsWithRevision(app, idsWithRevision)"},{"location":"reference/record/#updaterecordassigneesapp-id-assignees-revision","text":"Update assignees of a record. Parameter Name Type Required Description app Integer yes The kintone app ID id Integer yes The record ID of kintone app assignees ArrayList<String> yes The user code(s) of the assignee(s) revision Integer (option) The revision number of record Return UpdateRecordResponse Sample code update record Assignees Source code String USERNAME = \"cybozu\"; String PASSWORD = \"cybozu\"; // Init authenticationAuth Auth kintoneAuthWithPassword = new Auth(); kintoneAuthWithPassword.setPasswordAuth(USERNAME, PASSWORD); // Init Connection without \"guest space ID\" Connection kintoneOnDemoDomain = new Connection(\"sample.domain.dot\", kintoneAuthWithPassword); // Init Record Module Record kintoneRecordManager = new Record(kintoneOnDemoDomain); // execute UPDATE RECORD API Integer appID = 1; Integer recordID =1; ArrayList assignees = new ArrayList (); assignees.add(\"sample_user\"); Integer revision = 1; UpdateRecordResponse response = kintoneRecordManager.updateRecordAssignees(appID, recordID, assignees, revision);","title":"updateRecordAssignees(app, id, assignees, revision)"},{"location":"reference/record/#updaterecordstatusapp-id-action-assignee-revision","text":"Updates the Status of a record of an app. Parameter Name Type Required Description app Integer yes The kintone app ID. id Integer yes The record ID on kintone app. action String yes The Action name will be run. assignee String (Conditionally required) The next Assignee. Specify the Assignee's log in name. Required, if the \"Assignee List\" of the current status is set to \"User chooses one assignee from the list to take action\", and a selectable assignee exists. revision Integer (optional) The revision of record Return UpdateRecordResponse Sample code Update record status Source code String USERNAME = \"cybozu\"; String PASSWORD = \"cybozu\"; // Init authenticationAuth Auth kintoneAuthWithPassword = new Auth(); kintoneAuthWithPassword.setPasswordAuth(USERNAME, PASSWORD); // Init Connection without \"guest space ID\" Connection kintoneOnDemoDomain = new Connection(\"sample.domain.dot\", kintoneAuthWithPassword); // Init Record Module Record kintoneRecordManager = new Record(kintoneOnDemoDomain); // execute UPDATE RECORD API Integer appID = 1; Integer recordID =1; String assignee = \"sample_user\"; String action = \"\u51e6\u7406\u958b\u59cb\"; Integer revision = 1; UpdateRecordResponse response = kintoneRecordManager.updateRecordStatus(appID, recordID, action, assignee, revision);","title":"updateRecordStatus(app, id, action, assignee, revision)"},{"location":"reference/record/#updaterecordsstatusapp-records","text":"Updates the Status of multiple records of an app. Parameter Name Type Required Description app Integer yes The kintone app ID records ArrayList< RecordUpdateStatusItem > yes The recod status data. See belowsample codee or reference at the end of this page to know format. Return UpdateRecordsResponse Sample code Update multi record status Source code String USERNAME = \"cybozu\"; String PASSWORD = \"cybozu\"; // Init authenticationAuth Auth kintoneAuthWithPassword = new Auth(); kintoneAuthWithPassword.setPasswordAuth(USERNAME, PASSWORD); // Init Connection without \"guest space ID\" Connection kintoneOnDemoDomain = new Connection(\"sample.domain.dot\", kintoneAuthWithPassword); // Init Record Module Record kintoneRecordManager = new Record(kintoneOnDemoDomain); // execute UPDATE RECORDS API Integer appID = 1; ArrayList rusi = new ArrayList (); String action = \"\u51e6\u7406\u958b\u59cb\"; String assignee = \"sample_user1\"; Integer recordID1 =1; Integer recordID2 =2; Integer recordID3 =3; Integer revision1 = 1; Integer revision2 = null; Integer revision3 = -1; rusi.add(new RecordUpdateStatusItem(action, assignee, recordID1, revision1)); rusi.add(new RecordUpdateStatusItem(action, assignee, recordID2, revision2)); rusi.add(new RecordUpdateStatusItem(action, assignee, recordID3, revision3)); UpdateRecordsResponse response = kintoneRecordManager.updateRecordsStatus(appID, rusi);","title":"updateRecordsStatus(app, records)"},{"location":"reference/record/#getcommentsapp-record-order-offset-limit","text":"Parameter Name Type Required Description app Integer yes The kintone app ID record Integer yes The kintone app ID order String (optional) The sort order of the Comment ID. Please select asc or desc offset Integer (optional) The number of first comments will be ignored. limit Integer (optional) The number of records to retrieve. Return GetCommentsResponse Sample code Get comments Source code String USERNAME = \"cybozu\"; String PASSWORD = \"cybozu\"; // Init authenticationAuth Auth kintoneAuthWithPassword = new Auth(); kintoneAuthWithPassword.setPasswordAuth(USERNAME, PASSWORD); // Init Connection without \"guest space ID\" Connection kintoneOnDemoDomain = new Connection(\"sample.domain.dot\", kintoneAuthWithPassword); // Init Record Module Record kintoneRecordManager = new Record(kintoneOnDemoDomain); // execute GET RECORD_COMMENTS API Integer appID = 1; Integer recordID = 1; String order = \"asc\"; Integer offsset = 1; Integer limit = 2; GetCommentsResponse response = kintoneRecordManager.getComments(appID, recordID, order, offsset, limit);","title":"getComments(app, record, order, offset, limit)"},{"location":"reference/record/#addcommentapp-record-comment","text":"Parameter Name Type Required Description app Integer yes The kintone app ID record Integer yes The kintone app ID comment CommentContent yes About the format, please look the sample below or reference at the end of this page. Return AddCommentResponse Sample code Add comment Source code String USERNAME = \"cybozu\"; String PASSWORD = \"cybozu\"; // Init authenticationAuth Auth kintoneAuthWithPassword = new Auth(); kintoneAuthWithPassword.setPasswordAuth(USERNAME, PASSWORD); // Init Connection without \"guest space ID\" Connection kintoneOnDemoDomain = new Connection(\"sample.domain.dot\", kintoneAuthWithPassword); // Init Record Module Record kintoneRecordManager = new Record(kintoneOnDemoDomain); // execute ADD RECORD_COMMENT API Integer app = 1; Integer record = 1; CommentContent comment = new CommentContent(); ArrayList mentionList = new ArrayList (); CommentMention mention = new CommentMention(); mention.setCode(\"sample_user\"); mention.setType(\"USER\"); mentionList.add(mention); comment.setText(\"test comment\"); comment.setMentions(mentionList); AddCommentResponse response = kintoneRecordManager.addComment(app, record, comment);","title":"addComment(app, record, comment)"},{"location":"reference/record/#deletecommentapp-record-comment","text":"Parameter Name Type Required Description app Integer yes The kintone app ID record Integer yes The record ID on kintone app comment Integer yes The comment ID on kintone record Return (none) Sample code Delete comment Source code String USERNAME = \"cybozu\"; String PASSWORD = \"cybozu\"; // Init authenticationAuth Auth kintoneAuthWithPassword = new Auth(); kintoneAuthWithPassword.setPasswordAuth(USERNAME, PASSWORD); // Init Connection without \"guest space ID\" Connection kintoneOnDemoDomain = new Connection(\"sample.domain.dot\", kintoneAuthWithPassword); // Init Record Module Record kintoneRecordManager = new Record(kintoneOnDemoDomain); // execute DELETE RECORD_COMMENT API Integer app = 1; Integer record = 1; Integer comment = 1; kintoneRecordManager.deleteComment(app, record, comment);","title":"deleteComment(app, record, comment)"},{"location":"reference/record/#reference","text":"Get Record on developer network Add Record on developer network Update Record on developer network Delete Record on developer network Get Comments on developer network Add Comment on developer network Delete Comment on developer network Update Record Status on developer network Update Record Assignees on developer network","title":"Reference"}]}