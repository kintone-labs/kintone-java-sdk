{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Home kintone-java-sdk is the SDK of kintone REST API client on Java Getting Started Quickstart Reference Authentication Connection Record RecordCursor BulkRequest App KintoneAPIException BulksException File Model App App App AppDeployStatus Form Field Input Lookup Input Member Selection Time Layout General View Record Cursor RecordCursor File Bulk Request License MIT Copyright Copyright(c) Cybozu, Inc.","title":"Home"},{"location":"#home","text":"kintone-java-sdk is the SDK of kintone REST API client on Java","title":"Home"},{"location":"#getting-started","text":"Quickstart","title":"Getting Started"},{"location":"#reference","text":"Authentication Connection Record RecordCursor BulkRequest App KintoneAPIException BulksException File Model App App App AppDeployStatus Form Field Input Lookup Input Member Selection Time Layout General View Record Cursor RecordCursor File Bulk Request","title":"Reference"},{"location":"#license","text":"MIT","title":"License"},{"location":"#copyright","text":"Copyright(c) Cybozu, Inc.","title":"Copyright"},{"location":"versions/","text":"kintone-java-sdk Versions Current Version (Latest) Latest version of kintone-java-sdk. Versions Documentation Release 0.5.0 Documentation Release Notes Past Versions Here you can find documentation for previous versions of kintone-java-sdk. Versions Documentation Release 0.4.0 Documentation Release Notes 0.3.0 Documentation Release Notes 0.2.0 Documentation Release Notes 0.1.0 Documentation Release Notes","title":"kintone-java-sdk Versions"},{"location":"versions/#kintone-java-sdk-versions","text":"","title":"kintone-java-sdk Versions"},{"location":"versions/#current-version-latest","text":"Latest version of kintone-java-sdk. Versions Documentation Release 0.5.0 Documentation Release Notes","title":"Current Version (Latest)"},{"location":"versions/#past-versions","text":"Here you can find documentation for previous versions of kintone-java-sdk. Versions Documentation Release 0.4.0 Documentation Release Notes 0.3.0 Documentation Release Notes 0.2.0 Documentation Release Notes 0.1.0 Documentation Release Notes","title":"Past Versions"},{"location":"getting-started/quickstart/","text":"Quickstart Requirement Java SE (Version 8 or later) maven (Version 3.5.4 or later) kintone-java-sdk Code example Get record sample Source code import com.cybozu.kintone.client.authentication.*; import com.cybozu.kintone.client.connection.*; import com.cybozu.kintone.client.model.record.*; import com.cybozu.kintone.client.module.record.*; String USERNAME = \"cybozu\"; String PASSWORD = \"cybozu\"; // Init authenticationAuth Auth kintoneAuthWithPassword = new Auth(); kintoneAuthWithPassword.setPasswordAuth(USERNAME, PASSWORD); // Init Connection without \"guest space ID\" Connection kintoneOnDemoDomain = new Connection(\"sample.domain.dot\", kintoneAuthWithPassword); // Init Record Module Record kintoneRecordManager = new Record(kintoneOnDemoDomain); // execute GET RECORD API Integer appID = 1; Integer recordID = 1; try { GetRecordResponse response = kintoneRecordManager.getRecord(appID, recordID); } catch (Exception e) { System.out.println(e.getMessage()); } Response success { \"record\":{ // record data should be here } } Response error { id: '{ID}', code: '{CODE}', message: '{Message string}', } Bulk request sample Source code import java.util.*; import com.cybozu.kintone.client.authentication.*; import com.cybozu.kintone.client.connection.*; import com.cybozu.kintone.client.constant.*; import com.cybozu.kintone.client.model.record.*; import com.cybozu.kintone.client.model.record.field.*; import com.cybozu.kintone.client.module.record.*; import com.cybozu.kintone.client.model.bulkrequest.*; import com.cybozu.kintone.client.module.bulkrequest.*; String USERNAME = \"cybozu\"; String PASSWORD = \"cybozu\"; // Init authenticationAuth Auth kintoneAuthWithPassword = new Auth(); kintoneAuthWithPassword.setPasswordAuth(USERNAME, PASSWORD); // Init Connection without \"guest space ID\" Connection kintoneOnDemoDomain = new Connection(\"sample.domain.dot\", kintoneAuthWithPassword); // Init BulkRequest Module BulkRequest bulkRequestManager = new BulkRequest(kintoneOnDemoDomain); // update record & delete records with bulk request HashMap String, FieldValue record1 = new HashMap String, FieldValue (); ArrayList RecordUpdateItem dataUpdate = new ArrayList RecordUpdateItem (); Integer recordID = 1; Integer revision = 1; FieldValue fv1 = new FieldValue(); fv1.setType(FieldType.NUMBER); fv1.setValue(\"2222\"); record1.put(\"FieldCode1\", fv1); dataUpdate.add(new RecordUpdateItem(recordID, revision, null, record1)); ArrayList Integer recordIDsDelete = new ArrayList Integer (); recordIDsDelete.add(1); recordIDsDelete.add(2); recordIDsDelete.add(3); Integer appID = 1; bulkRequest.deleteRecords(appID, recordIDsDelete); bulkRequest.updateRecords(appID, dataUpdate); // execute BulkRequest try { BulkRequestResponse responses = bulkRequestManager.execute(); // get results ArrayList Object results = responses.getResults(); HashMap result1 = (HashMap)results.get(0); UpdateRecordsResponse result2 = (UpdateRecordsResponse)results.get(1); // data Response of the delete request System.out.println(\"delete request: \" + result1.toString()); // data Response of the update request ArrayList RecordUpdateResponseItem result21 = result2.getRecords(); System.out.println(\"update request ID: \" + result21.get(0).getID()); System.out.println(\"update request Revison: \" + result21.get(0).getRevision()); } catch (Exception e) { System.out.println(e.getMessage()); } Response success { \"record\":{ // record data should be here } } Response error { id: '{ID}', code: '{CODE}', message: '{Message string}', }","title":"Quickstart"},{"location":"getting-started/quickstart/#quickstart","text":"","title":"Quickstart"},{"location":"getting-started/quickstart/#requirement","text":"Java SE (Version 8 or later) maven (Version 3.5.4 or later) kintone-java-sdk","title":"Requirement"},{"location":"getting-started/quickstart/#code-example","text":"Get record sample Source code import com.cybozu.kintone.client.authentication.*; import com.cybozu.kintone.client.connection.*; import com.cybozu.kintone.client.model.record.*; import com.cybozu.kintone.client.module.record.*; String USERNAME = \"cybozu\"; String PASSWORD = \"cybozu\"; // Init authenticationAuth Auth kintoneAuthWithPassword = new Auth(); kintoneAuthWithPassword.setPasswordAuth(USERNAME, PASSWORD); // Init Connection without \"guest space ID\" Connection kintoneOnDemoDomain = new Connection(\"sample.domain.dot\", kintoneAuthWithPassword); // Init Record Module Record kintoneRecordManager = new Record(kintoneOnDemoDomain); // execute GET RECORD API Integer appID = 1; Integer recordID = 1; try { GetRecordResponse response = kintoneRecordManager.getRecord(appID, recordID); } catch (Exception e) { System.out.println(e.getMessage()); } Response success { \"record\":{ // record data should be here } } Response error { id: '{ID}', code: '{CODE}', message: '{Message string}', } Bulk request sample Source code import java.util.*; import com.cybozu.kintone.client.authentication.*; import com.cybozu.kintone.client.connection.*; import com.cybozu.kintone.client.constant.*; import com.cybozu.kintone.client.model.record.*; import com.cybozu.kintone.client.model.record.field.*; import com.cybozu.kintone.client.module.record.*; import com.cybozu.kintone.client.model.bulkrequest.*; import com.cybozu.kintone.client.module.bulkrequest.*; String USERNAME = \"cybozu\"; String PASSWORD = \"cybozu\"; // Init authenticationAuth Auth kintoneAuthWithPassword = new Auth(); kintoneAuthWithPassword.setPasswordAuth(USERNAME, PASSWORD); // Init Connection without \"guest space ID\" Connection kintoneOnDemoDomain = new Connection(\"sample.domain.dot\", kintoneAuthWithPassword); // Init BulkRequest Module BulkRequest bulkRequestManager = new BulkRequest(kintoneOnDemoDomain); // update record & delete records with bulk request HashMap String, FieldValue record1 = new HashMap String, FieldValue (); ArrayList RecordUpdateItem dataUpdate = new ArrayList RecordUpdateItem (); Integer recordID = 1; Integer revision = 1; FieldValue fv1 = new FieldValue(); fv1.setType(FieldType.NUMBER); fv1.setValue(\"2222\"); record1.put(\"FieldCode1\", fv1); dataUpdate.add(new RecordUpdateItem(recordID, revision, null, record1)); ArrayList Integer recordIDsDelete = new ArrayList Integer (); recordIDsDelete.add(1); recordIDsDelete.add(2); recordIDsDelete.add(3); Integer appID = 1; bulkRequest.deleteRecords(appID, recordIDsDelete); bulkRequest.updateRecords(appID, dataUpdate); // execute BulkRequest try { BulkRequestResponse responses = bulkRequestManager.execute(); // get results ArrayList Object results = responses.getResults(); HashMap result1 = (HashMap)results.get(0); UpdateRecordsResponse result2 = (UpdateRecordsResponse)results.get(1); // data Response of the delete request System.out.println(\"delete request: \" + result1.toString()); // data Response of the update request ArrayList RecordUpdateResponseItem result21 = result2.getRecords(); System.out.println(\"update request ID: \" + result21.get(0).getID()); System.out.println(\"update request Revison: \" + result21.get(0).getRevision()); } catch (Exception e) { System.out.println(e.getMessage()); } Response success { \"record\":{ // record data should be here } } Response error { id: '{ID}', code: '{CODE}', message: '{Message string}', }","title":"Code example"},{"location":"reference/app/","text":"App Gets general information of an App, including the name, description, related Space, creator and updater information. Permissions to view the App is needed. API Tokens cannot be used with this API. Constructor Parameter Name Type Required Description connection Connection yes The connection module of this SDK. Sample code Init app module Source code // Init authentication Auth kintoneAuth = new Auth() // Password Authentication String username = \"your_usernamr\" String password = \"your_password\" kintoneAuth = kintoneAuth.setPasswordAuth(username, password) Connection connection = Connection( \"your_domain\", kintoneAuth ) App app = new App(connection) Methods getApp(Integer appId) Get single app Parameter Name Type Required Description appId Integer yes The kintone app ID Return AppModel Sample code get App Source code Integer appId = {your_app_id}; App appManagerment = new App(connection); AppModel app = appManagerment.getApp(appId); getApps(Integer offset, Integer limit) Get multiple apps Parameter Name Type Required Description offset Integer (optional) The offset off data result limit Integer (optional) The limit number of result Return List AppModel Sample code Get Apps Source code Integer offset = 10; Integer limit = 50; App appManagerment = new App(connection); List appList = appManagerment.getApps(offset, limit); getAppsByIDs(List ids, Integer offset, Integer limit) Get multiple apps by list of ids Parameter Name Type Required Description ids List Integer> yes The array of app ids offset Integer (optional) The offset off data result limit Integer (optional) The limit number of result Return List AppModel Sample code get Apps By IDs Source code List appIds = new List (); appIds.add({your_app_id}); appIds.add({your_app_id}); Integer offset = {your_limit}; Integer limit = {your_offset}; App appManagerment = new App(connection); List appList = appManagerment.getAppsByIDs(appIds, offset, limit); getAppsByCodes(List codes, Integer offset, Integer limit) Get multiple apps by a list of codes Parameter Name Type Required Description codes List String> yes The array of app codes offset Integer (optional) The offset off data result limit Integer (optional) The limit number of result Return List AppModel Sample code get Apps By Codes Source code List appCode = new List (); appCode.add({your_app_code}); appCode.add({your_app_code}); Integer limit = {your_limit}; Integer offset = {your_offset}; App appManagerment = new App(connection); List appList = appManagerment.getAppsByCodes(appCode, offset, limit); getAppsByName(String name, Integer offset, Integer limit) Get multiple apps by name Parameter Name Type Required Description name String yes The app name offset Integer (optional) The offset off data result limit Integer (optional) The limit number of result Return List AppModel Sample code get Apps By Name Source code String appName = {your_app_name}; Integer offset = {your_offset}; Integer limit = {your_limit}; App appManagerment = new App(connection); List appLlist = appManagerment.getAppsByName(name, offset, limit); getAppsBySpaceIDs(List spaceIds, Integer offset, Integer limit) Get multiple apps by list of space's ids Parameter Name Type Required Description spaceIds List Integer> yes The array of space ids offset Integer (optional) The offset off data result limit Integer (optional) The limit number of result Return List AppModel Sample code get Apps By Space IDs Source code List spaceIds = new List (); spaseIds.add({your_space_id}); spaseIds.add({your_space_id}); Integer offset = {your_offset}; Integer limit = {your_litmit}; App appManagerment = new App(connection); List appList = appManagerment.getAppsBySpaceIDs(spaceIds, offset, limit); addPreviewApp(String name, Integer space, Integer thread) Creates a preview App. Parameter Name Type Required Description name String yes The App name. The maximum length is 64 characters. space Integer (optional) The Space ID of where the App will be created. thread Integer (optional) The Thread ID of the thread in the Space where the App will be created. It is recommended to ignore this parameter so that Apps are created in the default thread. There is currently no helpful reason to create Apps in threads other than the default thread, as there are no visual representations in kintone of Apps being related to threads. There are only visual representations of Apps being related to Spaces. Return PreviewApp Sample code add PreviewApp Source code Integer spaceId = {your_space_id} // Space will add this app Integer threadId = {your_thread_id} // Thread will add this app App appManagerment = new App(connection); appManagerment.addPreviewApp(appName, spaceId, threadId); deployAppSettings(Array apps, Boolean revert) Updates the settings of a pre-live App to the live App. Parameter Name Type Required Description apps Array yes The list of Apps to deploy the pre-live settings to the live Apps. The Maximum limit is 300. If Apps are being deployed to Guest Spaces, Apps can only be deployed to the same Guest Space.. revert Boolean (optional) Specify \"true\" to cancel all changes made to the pre-live settings. The pre-live settings will be reverted back to the current settings of the live app. Return None Sample code deploy AppSettings Source code Integer appId = {your_app_id} Integer revision = {your_revision} // Revision of application to deploy ArrayList appPreviewList = new ArrayList (); PreviewApp appPreview = new PreviewApp(appId, revision) App appManagerment = new App(connection); appManagerment.deployAppSettings(appPreviewList, false) getAppDeployStatus(List apps) Updates the settings of a pre-live App to the live App. Parameter Name Type Required Description apps List yes The list of Apps to check the deploy statuses of. The Maximum limit is 300. If Apps in Guest Spaces are specified, all Apps specified in the request must belong to that Guest Space. Return GetAppDeployStatusResponse Sample code get App DeployStatus Source code List appIds = new List (); appIds.add({your_app_id}); appIds.add({your_app_id}); App appManagerment = new App(connection); GetAppDeployStatusResponse res = appManagerment.getAppDeployStatus(appIds); for (int i = 0; i < res.getApp.length; i++) { print(res.getApp.get(i)); } getFormFields(Integer app, LanguageSetting lang, Boolean isPreview) Get field of the form in the kintone app Parameter Name Type Required Description appId Integer yes The app ID lang LanguageSetting (optional) The language code. Support: DEFAULT: Default language setting of system JA: Japanese language setting ZH: Chinese language setting EN: English language setting isPreview Boolean (optional) Get the app form fields with a pre-live settings . Return FormFields Sample code get FormFields Source code Integer appId = {your_app_id} // Integer LanguageSetting lang = {language_code} // LanguageSetting .Ex: LanguageSetting.JA Boolean isPreview = true; App appManagerment = new App(connection); FormFields fields appManagerment.getFormFields(appId, lang, isPreview) addFormFields(Integer app, HashMap fields, Integer revision) Adds fields to a form of an App. Parameter Name Type Required Description appId Integer yes The app ID fields Map (optional) The formFields which will add to form of kintone app Note: [String: Field]: Key: The field code of field on kintone app Value: The field settings of form field on kintone app revision Boolean (optional) Specify the revision number of the settings that will be deployed. The request will fail if the revision number is not the latest revision. The revision will not be checked if this parameter is ignored, or -1 is specified. Return BasicResponse Sample code add FormFields Source code Integer appId = {your_app_id} // App Id String fieldCode = {field_code_string} // Field code of new Field. It must be not as same as any fields in Pre-Live App Setttings Integer revision = {latest_revision_of_the_settings} // Integer // Create Radio field instance and set properties RadioButtonField addNewField = new RadioButtonField(fieldCode) HashMap optionArray = new HashMap () optionArray[\"1\"] = OptionData(\"1\",\"1\") optionArray[\"2\"] = OptionData(\"2\",\"2\") optionArray[\"3\"] = OptionData(\"3\",\"3\") addNewField.setOptions(optionArray) addNewField.setNoLabel(false) addNewField.setRequired(true) addNewField.setLabel(\"Label Radio\") addNewField.setAlign(AlignLayout.VERTICAL) // Add Field object into dictionary with key is Field Code HashMap properties = new HashMap () properties.put(fieldCode, addNewField); // Another add field here App appManagerment = new App(connection); BasicResponse res = appManagerment.addFormFields(appId, properties, revision); updateFormFields(Integer app, HashMap fields, Integer revision) Updates the field settings of fields in a form of an App. Parameter Name Type Required Description app Integer yes The app ID fields Map (optional) The formFields which will add to form of kintone app Note: [String: Field]: Key: The field code of field on kintone app Value: The field settings of form field on kintone app revision Boolean (optional) Specify the revision number of the settings that will be deployed. The request will fail if the revision number is not the latest revision. The revision will not be checked if this parameter is ignored, or -1 is specified. Return BasicResponse Sample code update FormFields Source code Integer appId = {your_app_id} // Integer String fieldCode = {field_code_string} // String | fieldCode of exist fields in Pre-Live App Setttings Integer revision = {latest_revision_of_the_settings} // Integer // Create Field Object to Update SingleLineTextField updateField = new SingleLineTextField(fieldCode) updateField.setDefaultValue(\"Hello Kintone\") updateField.setRequired(true) // Add Update Field object into dictionary with key is Field Code HashMap properties = new HashMap () properties.put(fieldCode, updateField); App appManagerment = new App(connection); BasicResponse res = appManagerment.updateFormFields(appId, properties, revision); deleteFormFields(Integer app, ArrayList fields, Integer revision) Deletes fields from a form of an App. Parameter Name Type Required Description app Integer yes The app ID fields Array String> yes The list of field codes of the fields to delete. Up to 100 field codes can be specified. revision Integer (optional) Specify the revision number of the settings that will be deployed. The request will fail if the revision number is not the latest revision. The revision will not be checked if this parameter is ignored, or -1 is specified. Return BasicResponse Sample code delete FormFields Source code int appId = {your_app_id} // Integer ArrayList fieldCodeArray = [{field_code_string}] // Array | Array of fieldCodes of exist fields in Pre-Live App Setttings int revision = {latest_revision_of_the_settings} // Integer App appManagerment = new App(connection); BasicResponse res = appManagerment.deleteFormFields(appId, fieldCodeArray, revision); getFormLayout(Integer appId, Boolean isPreview) Get the layout of form in kintone app Parameter Name Type Required Description app Integer yes The kintone app id isPreview Boolean (optional) Get the app form layout with a pre-live settings . Return FormLayout Sample code get FormLayout Source code int appId = {your_app_id} // Integer boolean isPreview = true // Get a pre-live (preview) form fields App appManagerment = new App(connection); FormLayout res = appManagerment.getFormLayout(appId, isPreview) updateFormLayout(Integer app, ArrayList layout, Integer revision) Updates the field layout info of a form in an App. Parameter Name Type Required Description app Integer The kintone app id layout Array ItemLayout> yes A list of field layouts for each row. revision Integer (optional) Specify the revision number of the settings that will be deployed. The request will fail if the revision number is not the latest revision. The revision will not be checked if this parameter is ignored, or -1 is specified. Return BasicResponse Sample code update FormLayout Source code int appId = {your_app_id} // Integer ArrayList itemLayoutRequest = new ArrayList (); // Row Layout RowLayout rowLayout1 = new RowLayout(); ArrayList fieldsRowLayout1: new ArrayList (); FieldLayout singleFieldRowLayout1 = new FieldLayout(); singleFieldRowLayout1.setCode(\"Text\"); singleFieldRowLayout1.setType(FieldType.SINGLE_LINE_TEXT.rawValue); FieldSize singleFieldSizeRowLayout1 = new FieldSize(); singleFieldSizeRowLayout1.setWidth(\"193\"); singleFieldRowLayout.setSize(singleFieldSizeRowLayout1); fieldsRowLayout1.add(singleFieldRowLayout1!); FieldLayout richTextFieldRowLayout1 = new FieldLayout(); richTextFieldRowLayout1.setCode(\"Rich_text\"); richTextFieldRowLayout1.setType(FieldType.RICH_TEXT.rawValue); FieldSize richTextFieldSizeRowLayout1 = new FieldSize(); richTextFieldSizeRowLayout1.setWidth(\"315\") richTextFieldSizeRowLayout1.setInnerHeight(\"125\") richTextFieldRowLayout1.setSize(richTextFieldSizeRowLayout1) fieldsRowLayout1.add(richTextFieldRowLayout1!) rowLayout1.setFields(fieldsRowLayout1) // Subtable Layout SubTableLayout subTableLayout = new SubTableLayout(); ArrayList fieldSubTableLayout = new ArrayList (); FieldLayout singleFieldSubTableLayout1 = new FieldLayout(); singleFieldSubTableLayout1.setCode(\"Text_0\"); singleFieldSubTableLayout1.setType(FieldType.SINGLE_LINE_TEXT.rawValue); FieldSize singleFieldSizeSubTableLayout1 = new FieldSize(); singleFieldSizeSubTableLayout1.setWidth(\"193\"); singleFieldSubTableLayout1.setSize(singleFieldSizeSubTableLayout1); fieldSubTableLayout.add(singleFieldSubTableLayout1!); subTableLayout.setFields(fieldSubTableLayout); subTableLayout.setCode(\"Table\"); // GROUP Layout GroupLayout groupLayout = new GroupLayout(); ArrayList rowLayoutInGroup = new ArrayList (); // Row Layout RowLayout firstRowLayoutInGroup = new RowLayout(); ArrayList fieldsInRowLayoutInGroup = new ArrayList () // Numeric Field Layout FieldLayout numericFieldInRowLayoutInGroup = new FieldLayout(); numericFieldInRowLayoutInGroup.setCode(\"Number\"); numericFieldInRowLayoutInGroup.setType(FieldType.NUMBER.rawValue); // field size FieldSize numericFieldSizeInRowLayoutInGroup = new FieldSize(); numericFieldSizeInRowLayoutInGroup.setWidth(\"200\") numericFieldInRowLayoutInGroup.setSize(numericFieldSizeInRowLayoutInGroup) fieldsInRowLayoutInGroup.append(numericFieldInRowLayoutInGroup!) firstRowLayoutInGroup.setFields(fieldsInRowLayoutInGroup) rowLayoutInGroup.append(firstRowLayoutInGroup!) groupLayout.setLayout(rowLayoutInGroup) groupLayout.setCode(\"Field_group\") // Append layout itemLayoutRequest.add(rowLayout1!) itemLayoutRequest.add(subTableLayout!) itemLayoutRequest.add(groupLayout!) App appManagerment = new App(connection); BasicResponse res = appManagerment.updateFormLayout(appId, itemLayoutRequest); getGeneralSettings(Integer app, LanguageSetting lang, Boolean isPreview) Gets the description, name, icon, revision and color theme of an App. Parameter Name Type Required Description app Integer yes The kintone app id lang LanguageSetting (optional) The localized language to retrieve the data in language constants isPreview Boolean (optional) Get general settings of the app with a pre-live settings . Return GeneralSettings Sample code get GeneralSettings Source code int appId = {your_app_id}; LanguageSetting lang = {your_language_code} // LanguageSetting( EN | JA | ZH ). Ex: LanguageSetting.JA boolean isPreview = true App appManagerment = new App(connection); GeneralSettings res = appManagerment.getGeneralSettings(appId, lang, isPreview); updateGeneralSettings(Integer app, GeneralSettings generalSettings, Integer revision) Updates the description, name, icon, revision and color theme of an App. Parameter Name Type Required Description app Integer yes The kintone app id generalSettings GeneralSettings (Conditional) The description, name, icon, revision and color theme of an App. The request will fail if the revision number is not the latest revision. The revision will not be checked if ignored, or -1 is specified. Return BasicResponse Sample code update general settings Source code int appId = {your_app_id}; GeneralSettings appGeneralSetting = new GeneralSettings(); appGeneralSetting.setName(\"GetViewsApp_Test\"); appGeneralSetting.setDescription(\" A list of great places to go! \"); Icon iconModel = new Icon(\"APP39\", Icon.IconType.PRESET); appGeneralSetting.setIcon(iconModel); appGeneralSetting.setTheme(GeneralSettings.IconTheme.WHITE); App appManagerment = new App(connection); BasicResponse res = appManagerment.updateGeneralSettings(appId, appGeneralSetting); getViews(Integer app, LanguageSetting lang, Boolean isPreview) Gets the View settings of an App. Parameter Name Type Required Description app Integer yes The kintone app id lang LanguageSetting (optional) The localized language to retrieve the data in language constants isPreview Boolean (optional) Get views of the app with a pre-live settings when isPreview param is set true . Return GetViewsResponse Sample code get Views Source code int appId = {your_app_id} LanguageSetting lang = LanguageSetting.EN // LanguageSetting( EN | JA | ZH ). Ex: LanguageSetting.JA boolean isPreview = true App appManagerment = new App(connection); GetViewsResponse res = app.getViews(appId, lang, isPreview); updateViews(Integer app, HashMap views, Integer revision) Updates the View settings of an App. Parameter Name Type Required Description app Integer yes The kintone app id views HashMap yes An object of data of Views. revision Integer (optional) Specify the revision number of the settings that will be deployed. The request will fail if the revision number is not the latest revision. The revision will not be checked if this parameter is ignored, or -1 is specified. Return UpdateViewsResponse Sample code update Views Source code int appId = {your_app_id)} int revision = {your_lastest_revision} //default: revision = -1 HashMap viewEntry = new HashMap (); ViewModel updateViewModel = new ViewModel(); updateViewModel.setName(\"ViewTest\") updateViewModel.setSort(\"Record_number desc\") updateViewModel.setType(ViewModel.ViewType.LIST) updateViewModel.setFilterCond(\"Created_datetime = LAST_WEEK()\") updateViewModel.setIndex(1) ArrayList fieldsViews = new ArrayList (); fieldsViews.add(\"Text\"); fieldsViews.add(\"Text_Area\"); fieldsViews.add(\"Created_datetime\"); updateViewModel.setFields(fieldsViews); viewEntry.put(\"ViewTest\", updateViewModel); ViewModel updateViewModel2 = new ViewModel(); updateViewModel2.setName(\"ViewTest2\") updateViewModel2.setSort(\"Record_number asc\") updateViewModel2.setType(ViewModel.ViewType.LIST) updateViewModel2.setFilterCond(\"Created_datetime > LAST_WEEK()\") updateViewModel2.setIndex(0) ArrayList fieldsInViews2 = new ArrayList (); fieldsInViews2.add(\"Text_Area\"); fieldsInViews2.add(\"Created_datetime\"); updateViewModel2.setFields(fieldsInViews2); viewEntry.put(\"ViewTest2\", updateViewModel2); App appManagerment = new App(connection); UpdateViewsResponse res = appManagerment.updateViews(appId, viewEntry, revision); Reference Get App Get Apps Get Form fields Add Form fields Update Form fields Delete Form fields Get Form Layout Update Form Layout Add Preview App Deploy App Settings Get App Deploy Status Get Views Update Views Get General Settings Update General Settings","title":"App"},{"location":"reference/app/#app","text":"Gets general information of an App, including the name, description, related Space, creator and updater information. Permissions to view the App is needed. API Tokens cannot be used with this API.","title":"App"},{"location":"reference/app/#constructor","text":"","title":"Constructor"},{"location":"reference/app/#parameter","text":"Name Type Required Description connection Connection yes The connection module of this SDK.","title":"Parameter"},{"location":"reference/app/#sample-code","text":"Init app module Source code // Init authentication Auth kintoneAuth = new Auth() // Password Authentication String username = \"your_usernamr\" String password = \"your_password\" kintoneAuth = kintoneAuth.setPasswordAuth(username, password) Connection connection = Connection( \"your_domain\", kintoneAuth ) App app = new App(connection)","title":"Sample code"},{"location":"reference/app/#methods","text":"","title":"Methods"},{"location":"reference/app/#getappinteger-appid","text":"Get single app","title":"getApp(Integer appId)"},{"location":"reference/app/#parameter_1","text":"Name Type Required Description appId Integer yes The kintone app ID Return AppModel Sample code get App Source code Integer appId = {your_app_id}; App appManagerment = new App(connection); AppModel app = appManagerment.getApp(appId);","title":"Parameter"},{"location":"reference/app/#getappsinteger-offset-integer-limit","text":"Get multiple apps Parameter Name Type Required Description offset Integer (optional) The offset off data result limit Integer (optional) The limit number of result Return List AppModel Sample code Get Apps Source code Integer offset = 10; Integer limit = 50; App appManagerment = new App(connection); List appList = appManagerment.getApps(offset, limit);","title":"getApps(Integer offset, Integer limit)"},{"location":"reference/app/#getappsbyidslist-ids-integer-offset-integer-limit","text":"Get multiple apps by list of ids Parameter Name Type Required Description ids List Integer> yes The array of app ids offset Integer (optional) The offset off data result limit Integer (optional) The limit number of result Return List AppModel Sample code get Apps By IDs Source code List appIds = new List (); appIds.add({your_app_id}); appIds.add({your_app_id}); Integer offset = {your_limit}; Integer limit = {your_offset}; App appManagerment = new App(connection); List appList = appManagerment.getAppsByIDs(appIds, offset, limit);","title":"getAppsByIDs(List ids, Integer offset, Integer limit)"},{"location":"reference/app/#getappsbycodeslist-codes-integer-offset-integer-limit","text":"Get multiple apps by a list of codes Parameter Name Type Required Description codes List String> yes The array of app codes offset Integer (optional) The offset off data result limit Integer (optional) The limit number of result Return List AppModel Sample code get Apps By Codes Source code List appCode = new List (); appCode.add({your_app_code}); appCode.add({your_app_code}); Integer limit = {your_limit}; Integer offset = {your_offset}; App appManagerment = new App(connection); List appList = appManagerment.getAppsByCodes(appCode, offset, limit);","title":"getAppsByCodes(List codes, Integer offset, Integer limit)"},{"location":"reference/app/#getappsbynamestring-name-integer-offset-integer-limit","text":"Get multiple apps by name Parameter Name Type Required Description name String yes The app name offset Integer (optional) The offset off data result limit Integer (optional) The limit number of result Return List AppModel Sample code get Apps By Name Source code String appName = {your_app_name}; Integer offset = {your_offset}; Integer limit = {your_limit}; App appManagerment = new App(connection); List appLlist = appManagerment.getAppsByName(name, offset, limit);","title":"getAppsByName(String name, Integer offset, Integer limit)"},{"location":"reference/app/#getappsbyspaceidslist-spaceids-integer-offset-integer-limit","text":"Get multiple apps by list of space's ids Parameter Name Type Required Description spaceIds List Integer> yes The array of space ids offset Integer (optional) The offset off data result limit Integer (optional) The limit number of result Return List AppModel Sample code get Apps By Space IDs Source code List spaceIds = new List (); spaseIds.add({your_space_id}); spaseIds.add({your_space_id}); Integer offset = {your_offset}; Integer limit = {your_litmit}; App appManagerment = new App(connection); List appList = appManagerment.getAppsBySpaceIDs(spaceIds, offset, limit);","title":"getAppsBySpaceIDs(List spaceIds, Integer offset, Integer limit)"},{"location":"reference/app/#addpreviewappstring-name-integer-space-integer-thread","text":"Creates a preview App. Parameter Name Type Required Description name String yes The App name. The maximum length is 64 characters. space Integer (optional) The Space ID of where the App will be created. thread Integer (optional) The Thread ID of the thread in the Space where the App will be created. It is recommended to ignore this parameter so that Apps are created in the default thread. There is currently no helpful reason to create Apps in threads other than the default thread, as there are no visual representations in kintone of Apps being related to threads. There are only visual representations of Apps being related to Spaces. Return PreviewApp Sample code add PreviewApp Source code Integer spaceId = {your_space_id} // Space will add this app Integer threadId = {your_thread_id} // Thread will add this app App appManagerment = new App(connection); appManagerment.addPreviewApp(appName, spaceId, threadId);","title":"addPreviewApp(String name, Integer space, Integer thread)"},{"location":"reference/app/#deployappsettingsarray-apps-boolean-revert","text":"Updates the settings of a pre-live App to the live App. Parameter Name Type Required Description apps Array yes The list of Apps to deploy the pre-live settings to the live Apps. The Maximum limit is 300. If Apps are being deployed to Guest Spaces, Apps can only be deployed to the same Guest Space.. revert Boolean (optional) Specify \"true\" to cancel all changes made to the pre-live settings. The pre-live settings will be reverted back to the current settings of the live app. Return None Sample code deploy AppSettings Source code Integer appId = {your_app_id} Integer revision = {your_revision} // Revision of application to deploy ArrayList appPreviewList = new ArrayList (); PreviewApp appPreview = new PreviewApp(appId, revision) App appManagerment = new App(connection); appManagerment.deployAppSettings(appPreviewList, false)","title":"deployAppSettings(Array apps, Boolean revert)"},{"location":"reference/app/#getappdeploystatuslist-apps","text":"Updates the settings of a pre-live App to the live App. Parameter Name Type Required Description apps List yes The list of Apps to check the deploy statuses of. The Maximum limit is 300. If Apps in Guest Spaces are specified, all Apps specified in the request must belong to that Guest Space. Return GetAppDeployStatusResponse Sample code get App DeployStatus Source code List appIds = new List (); appIds.add({your_app_id}); appIds.add({your_app_id}); App appManagerment = new App(connection); GetAppDeployStatusResponse res = appManagerment.getAppDeployStatus(appIds); for (int i = 0; i < res.getApp.length; i++) { print(res.getApp.get(i)); }","title":"getAppDeployStatus(List apps)"},{"location":"reference/app/#getformfieldsinteger-app-languagesetting-lang-boolean-ispreview","text":"Get field of the form in the kintone app Parameter Name Type Required Description appId Integer yes The app ID lang LanguageSetting (optional) The language code. Support: DEFAULT: Default language setting of system JA: Japanese language setting ZH: Chinese language setting EN: English language setting isPreview Boolean (optional) Get the app form fields with a pre-live settings . Return FormFields Sample code get FormFields Source code Integer appId = {your_app_id} // Integer LanguageSetting lang = {language_code} // LanguageSetting .Ex: LanguageSetting.JA Boolean isPreview = true; App appManagerment = new App(connection); FormFields fields appManagerment.getFormFields(appId, lang, isPreview)","title":"getFormFields(Integer app, LanguageSetting lang, Boolean isPreview)"},{"location":"reference/app/#addformfieldsinteger-app-hashmap-fields-integer-revision","text":"Adds fields to a form of an App. Parameter Name Type Required Description appId Integer yes The app ID fields Map (optional) The formFields which will add to form of kintone app Note: [String: Field]: Key: The field code of field on kintone app Value: The field settings of form field on kintone app revision Boolean (optional) Specify the revision number of the settings that will be deployed. The request will fail if the revision number is not the latest revision. The revision will not be checked if this parameter is ignored, or -1 is specified. Return BasicResponse Sample code add FormFields Source code Integer appId = {your_app_id} // App Id String fieldCode = {field_code_string} // Field code of new Field. It must be not as same as any fields in Pre-Live App Setttings Integer revision = {latest_revision_of_the_settings} // Integer // Create Radio field instance and set properties RadioButtonField addNewField = new RadioButtonField(fieldCode) HashMap optionArray = new HashMap () optionArray[\"1\"] = OptionData(\"1\",\"1\") optionArray[\"2\"] = OptionData(\"2\",\"2\") optionArray[\"3\"] = OptionData(\"3\",\"3\") addNewField.setOptions(optionArray) addNewField.setNoLabel(false) addNewField.setRequired(true) addNewField.setLabel(\"Label Radio\") addNewField.setAlign(AlignLayout.VERTICAL) // Add Field object into dictionary with key is Field Code HashMap properties = new HashMap () properties.put(fieldCode, addNewField); // Another add field here App appManagerment = new App(connection); BasicResponse res = appManagerment.addFormFields(appId, properties, revision);","title":"addFormFields(Integer app, HashMap fields, Integer revision)"},{"location":"reference/app/#updateformfieldsinteger-app-hashmap-fields-integer-revision","text":"Updates the field settings of fields in a form of an App. Parameter Name Type Required Description app Integer yes The app ID fields Map (optional) The formFields which will add to form of kintone app Note: [String: Field]: Key: The field code of field on kintone app Value: The field settings of form field on kintone app revision Boolean (optional) Specify the revision number of the settings that will be deployed. The request will fail if the revision number is not the latest revision. The revision will not be checked if this parameter is ignored, or -1 is specified. Return BasicResponse Sample code update FormFields Source code Integer appId = {your_app_id} // Integer String fieldCode = {field_code_string} // String | fieldCode of exist fields in Pre-Live App Setttings Integer revision = {latest_revision_of_the_settings} // Integer // Create Field Object to Update SingleLineTextField updateField = new SingleLineTextField(fieldCode) updateField.setDefaultValue(\"Hello Kintone\") updateField.setRequired(true) // Add Update Field object into dictionary with key is Field Code HashMap properties = new HashMap () properties.put(fieldCode, updateField); App appManagerment = new App(connection); BasicResponse res = appManagerment.updateFormFields(appId, properties, revision);","title":"updateFormFields(Integer app, HashMap fields, Integer revision)"},{"location":"reference/app/#deleteformfieldsinteger-app-arraylist-fields-integer-revision","text":"Deletes fields from a form of an App. Parameter Name Type Required Description app Integer yes The app ID fields Array String> yes The list of field codes of the fields to delete. Up to 100 field codes can be specified. revision Integer (optional) Specify the revision number of the settings that will be deployed. The request will fail if the revision number is not the latest revision. The revision will not be checked if this parameter is ignored, or -1 is specified. Return BasicResponse Sample code delete FormFields Source code int appId = {your_app_id} // Integer ArrayList fieldCodeArray = [{field_code_string}] // Array | Array of fieldCodes of exist fields in Pre-Live App Setttings int revision = {latest_revision_of_the_settings} // Integer App appManagerment = new App(connection); BasicResponse res = appManagerment.deleteFormFields(appId, fieldCodeArray, revision);","title":"deleteFormFields(Integer app, ArrayList fields, Integer revision)"},{"location":"reference/app/#getformlayoutinteger-appid-boolean-ispreview","text":"Get the layout of form in kintone app Parameter Name Type Required Description app Integer yes The kintone app id isPreview Boolean (optional) Get the app form layout with a pre-live settings . Return FormLayout Sample code get FormLayout Source code int appId = {your_app_id} // Integer boolean isPreview = true // Get a pre-live (preview) form fields App appManagerment = new App(connection); FormLayout res = appManagerment.getFormLayout(appId, isPreview)","title":"getFormLayout(Integer appId, Boolean isPreview)"},{"location":"reference/app/#updateformlayoutinteger-app-arraylist-layout-integer-revision","text":"Updates the field layout info of a form in an App. Parameter Name Type Required Description app Integer The kintone app id layout Array ItemLayout> yes A list of field layouts for each row. revision Integer (optional) Specify the revision number of the settings that will be deployed. The request will fail if the revision number is not the latest revision. The revision will not be checked if this parameter is ignored, or -1 is specified. Return BasicResponse Sample code update FormLayout Source code int appId = {your_app_id} // Integer ArrayList itemLayoutRequest = new ArrayList (); // Row Layout RowLayout rowLayout1 = new RowLayout(); ArrayList fieldsRowLayout1: new ArrayList (); FieldLayout singleFieldRowLayout1 = new FieldLayout(); singleFieldRowLayout1.setCode(\"Text\"); singleFieldRowLayout1.setType(FieldType.SINGLE_LINE_TEXT.rawValue); FieldSize singleFieldSizeRowLayout1 = new FieldSize(); singleFieldSizeRowLayout1.setWidth(\"193\"); singleFieldRowLayout.setSize(singleFieldSizeRowLayout1); fieldsRowLayout1.add(singleFieldRowLayout1!); FieldLayout richTextFieldRowLayout1 = new FieldLayout(); richTextFieldRowLayout1.setCode(\"Rich_text\"); richTextFieldRowLayout1.setType(FieldType.RICH_TEXT.rawValue); FieldSize richTextFieldSizeRowLayout1 = new FieldSize(); richTextFieldSizeRowLayout1.setWidth(\"315\") richTextFieldSizeRowLayout1.setInnerHeight(\"125\") richTextFieldRowLayout1.setSize(richTextFieldSizeRowLayout1) fieldsRowLayout1.add(richTextFieldRowLayout1!) rowLayout1.setFields(fieldsRowLayout1) // Subtable Layout SubTableLayout subTableLayout = new SubTableLayout(); ArrayList fieldSubTableLayout = new ArrayList (); FieldLayout singleFieldSubTableLayout1 = new FieldLayout(); singleFieldSubTableLayout1.setCode(\"Text_0\"); singleFieldSubTableLayout1.setType(FieldType.SINGLE_LINE_TEXT.rawValue); FieldSize singleFieldSizeSubTableLayout1 = new FieldSize(); singleFieldSizeSubTableLayout1.setWidth(\"193\"); singleFieldSubTableLayout1.setSize(singleFieldSizeSubTableLayout1); fieldSubTableLayout.add(singleFieldSubTableLayout1!); subTableLayout.setFields(fieldSubTableLayout); subTableLayout.setCode(\"Table\"); // GROUP Layout GroupLayout groupLayout = new GroupLayout(); ArrayList rowLayoutInGroup = new ArrayList (); // Row Layout RowLayout firstRowLayoutInGroup = new RowLayout(); ArrayList fieldsInRowLayoutInGroup = new ArrayList () // Numeric Field Layout FieldLayout numericFieldInRowLayoutInGroup = new FieldLayout(); numericFieldInRowLayoutInGroup.setCode(\"Number\"); numericFieldInRowLayoutInGroup.setType(FieldType.NUMBER.rawValue); // field size FieldSize numericFieldSizeInRowLayoutInGroup = new FieldSize(); numericFieldSizeInRowLayoutInGroup.setWidth(\"200\") numericFieldInRowLayoutInGroup.setSize(numericFieldSizeInRowLayoutInGroup) fieldsInRowLayoutInGroup.append(numericFieldInRowLayoutInGroup!) firstRowLayoutInGroup.setFields(fieldsInRowLayoutInGroup) rowLayoutInGroup.append(firstRowLayoutInGroup!) groupLayout.setLayout(rowLayoutInGroup) groupLayout.setCode(\"Field_group\") // Append layout itemLayoutRequest.add(rowLayout1!) itemLayoutRequest.add(subTableLayout!) itemLayoutRequest.add(groupLayout!) App appManagerment = new App(connection); BasicResponse res = appManagerment.updateFormLayout(appId, itemLayoutRequest);","title":"updateFormLayout(Integer app, ArrayList layout, Integer revision)"},{"location":"reference/app/#getgeneralsettingsinteger-app-languagesetting-lang-boolean-ispreview","text":"Gets the description, name, icon, revision and color theme of an App. Parameter Name Type Required Description app Integer yes The kintone app id lang LanguageSetting (optional) The localized language to retrieve the data in language constants isPreview Boolean (optional) Get general settings of the app with a pre-live settings . Return GeneralSettings Sample code get GeneralSettings Source code int appId = {your_app_id}; LanguageSetting lang = {your_language_code} // LanguageSetting( EN | JA | ZH ). Ex: LanguageSetting.JA boolean isPreview = true App appManagerment = new App(connection); GeneralSettings res = appManagerment.getGeneralSettings(appId, lang, isPreview);","title":"getGeneralSettings(Integer app, LanguageSetting lang, Boolean isPreview)"},{"location":"reference/app/#updategeneralsettingsinteger-app-generalsettings-generalsettings-integer-revision","text":"Updates the description, name, icon, revision and color theme of an App. Parameter Name Type Required Description app Integer yes The kintone app id generalSettings GeneralSettings (Conditional) The description, name, icon, revision and color theme of an App. The request will fail if the revision number is not the latest revision. The revision will not be checked if ignored, or -1 is specified. Return BasicResponse Sample code update general settings Source code int appId = {your_app_id}; GeneralSettings appGeneralSetting = new GeneralSettings(); appGeneralSetting.setName(\"GetViewsApp_Test\"); appGeneralSetting.setDescription(\" A list of great places to go! \"); Icon iconModel = new Icon(\"APP39\", Icon.IconType.PRESET); appGeneralSetting.setIcon(iconModel); appGeneralSetting.setTheme(GeneralSettings.IconTheme.WHITE); App appManagerment = new App(connection); BasicResponse res = appManagerment.updateGeneralSettings(appId, appGeneralSetting);","title":"updateGeneralSettings(Integer app, GeneralSettings generalSettings, Integer revision)"},{"location":"reference/app/#getviewsinteger-app-languagesetting-lang-boolean-ispreview","text":"Gets the View settings of an App. Parameter Name Type Required Description app Integer yes The kintone app id lang LanguageSetting (optional) The localized language to retrieve the data in language constants isPreview Boolean (optional) Get views of the app with a pre-live settings when isPreview param is set true . Return GetViewsResponse Sample code get Views Source code int appId = {your_app_id} LanguageSetting lang = LanguageSetting.EN // LanguageSetting( EN | JA | ZH ). Ex: LanguageSetting.JA boolean isPreview = true App appManagerment = new App(connection); GetViewsResponse res = app.getViews(appId, lang, isPreview);","title":"getViews(Integer app, LanguageSetting lang, Boolean isPreview)"},{"location":"reference/app/#updateviewsinteger-app-hashmap-views-integer-revision","text":"Updates the View settings of an App. Parameter Name Type Required Description app Integer yes The kintone app id views HashMap yes An object of data of Views. revision Integer (optional) Specify the revision number of the settings that will be deployed. The request will fail if the revision number is not the latest revision. The revision will not be checked if this parameter is ignored, or -1 is specified. Return UpdateViewsResponse Sample code update Views Source code int appId = {your_app_id)} int revision = {your_lastest_revision} //default: revision = -1 HashMap viewEntry = new HashMap (); ViewModel updateViewModel = new ViewModel(); updateViewModel.setName(\"ViewTest\") updateViewModel.setSort(\"Record_number desc\") updateViewModel.setType(ViewModel.ViewType.LIST) updateViewModel.setFilterCond(\"Created_datetime = LAST_WEEK()\") updateViewModel.setIndex(1) ArrayList fieldsViews = new ArrayList (); fieldsViews.add(\"Text\"); fieldsViews.add(\"Text_Area\"); fieldsViews.add(\"Created_datetime\"); updateViewModel.setFields(fieldsViews); viewEntry.put(\"ViewTest\", updateViewModel); ViewModel updateViewModel2 = new ViewModel(); updateViewModel2.setName(\"ViewTest2\") updateViewModel2.setSort(\"Record_number asc\") updateViewModel2.setType(ViewModel.ViewType.LIST) updateViewModel2.setFilterCond(\"Created_datetime > LAST_WEEK()\") updateViewModel2.setIndex(0) ArrayList fieldsInViews2 = new ArrayList (); fieldsInViews2.add(\"Text_Area\"); fieldsInViews2.add(\"Created_datetime\"); updateViewModel2.setFields(fieldsInViews2); viewEntry.put(\"ViewTest2\", updateViewModel2); App appManagerment = new App(connection); UpdateViewsResponse res = appManagerment.updateViews(appId, viewEntry, revision);","title":"updateViews(Integer app, HashMap views, Integer revision)"},{"location":"reference/app/#reference","text":"Get App Get Apps Get Form fields Add Form fields Update Form fields Delete Form fields Get Form Layout Update Form Layout Add Preview App Deploy App Settings Get App Deploy Status Get Views Update Views Get General Settings Update General Settings","title":"Reference"},{"location":"reference/authentication/","text":"Authentication Authentication module will be used by Connection . This module allow we authenticate with kintone app by password authenticator or API token authenticator. This module is also support basic authenticator. Warning If both the Token and Password Authentication are specified, the Token Authentication will be ignored and the Password authentication will be used. Constructor Parameter (none) Sample code Init authentication module Source code Auth kintoneAuth = new Auth(); Methods setPasswordAuth(username, password) Set password authentication for Authentication module. Parameter Name Type Required Description username String yes The username that is able to authenticate on kintone app password String yes The password that is able to authenticate on kintone app Return Auth Sample code Set password authentication Source code String username = \"cybozu\"; String password = \"cybozu\"; kintoneAuth.setPasswordAuth(username, password); setApiToken(apiTokenString) Set Api Token for Authentication module. Parameter Name Type Required Description apiToken String yes The apiToken that is able to authenticate on kintone app Return Auth Set APIToken authentication Source code String apiToken = \"123456789abcdefghijklmnopqrstuvwxyz\"; kintoneAuth.setApiToken(apiToken); setBasicAuth(username, password) Set Basic authentication for Authentication module. Parameter Name Type Required Description username String yes The username that is able to authenticate on kintone app password String yes The password that is able to authenticate on kintone app Return Auth Sample code Set basic authentication Source code String username = \"cybozu\"; String password = \"cybozu\"; kintoneAuth.setBasicAuth(username, password); createHeaderCredentials() Provide the list of HTTP Headers which use to authentication in. Parameter (none) Return Array HTTPHeader Sample code Provide the list of HTTP Headers which use to authentication in Source code for (HTTPHeader header : kintoneAuth.createHeaderCredentials()) { connection.setRequestProperty(header.getKey(), header.getValue()); } setClientCert(cert, password) Set certificate by certificate data Parameter Name Type Required Description cert InputStream yes Data read from certificate file received from kintone password String yes The password from kintone to decode the cert file Return Auth Sample code Set certificate by certificate data Source code Auth certAuth = new Auth(); certAuth.setPasswordAuth(\"YOUR_KINTONE_ID\", \"YOUR_KINTONE_PASSWORD\"); String certPassword = \"YOUR_CERT_PASSWORD\" String certPath = \"YOUR_CERT_PATH\" InputStream cert = new FileInputStream(certPath); auth.setClientCert(cert, certPassword) Connection connection = new Connection(\"YOUR_DOMAIN\", certAuth, -1); setClientCertByPath(filePath, password) Set certificate by path Parameter Name Type Required Description filePath String yes Path to kintone certificate file password String yes The password from kintone to decode the cert file Return Auth Sample code Set certificate by path Source code Auth certauth = new Auth(); certAuth.setPasswordAuth(\"YOUR_KINTONE_ID\", \"YOUR_KINTONE_PASSWORD\"); String certPassword = \"YOUR_CERT_PASSWORD\" String certPath = \"YOUR_CERT_PATH\" certauth.setClientCertByPath(certPath, certPassword); Connection connection = new Connection(\"YOUR_DOMAIN\", certAuth);","title":"Authentication"},{"location":"reference/authentication/#authentication","text":"Authentication module will be used by Connection . This module allow we authenticate with kintone app by password authenticator or API token authenticator. This module is also support basic authenticator. Warning If both the Token and Password Authentication are specified, the Token Authentication will be ignored and the Password authentication will be used.","title":"Authentication"},{"location":"reference/authentication/#constructor","text":"Parameter (none) Sample code Init authentication module Source code Auth kintoneAuth = new Auth();","title":"Constructor"},{"location":"reference/authentication/#methods","text":"","title":"Methods"},{"location":"reference/authentication/#setpasswordauthusername-password","text":"Set password authentication for Authentication module. Parameter Name Type Required Description username String yes The username that is able to authenticate on kintone app password String yes The password that is able to authenticate on kintone app Return Auth Sample code Set password authentication Source code String username = \"cybozu\"; String password = \"cybozu\"; kintoneAuth.setPasswordAuth(username, password);","title":"setPasswordAuth(username, password)"},{"location":"reference/authentication/#setapitokenapitokenstring","text":"Set Api Token for Authentication module. Parameter Name Type Required Description apiToken String yes The apiToken that is able to authenticate on kintone app Return Auth Set APIToken authentication Source code String apiToken = \"123456789abcdefghijklmnopqrstuvwxyz\"; kintoneAuth.setApiToken(apiToken);","title":"setApiToken(apiTokenString)"},{"location":"reference/authentication/#setbasicauthusername-password","text":"Set Basic authentication for Authentication module. Parameter Name Type Required Description username String yes The username that is able to authenticate on kintone app password String yes The password that is able to authenticate on kintone app Return Auth Sample code Set basic authentication Source code String username = \"cybozu\"; String password = \"cybozu\"; kintoneAuth.setBasicAuth(username, password);","title":"setBasicAuth(username, password)"},{"location":"reference/authentication/#createheadercredentials","text":"Provide the list of HTTP Headers which use to authentication in. Parameter (none) Return Array HTTPHeader Sample code Provide the list of HTTP Headers which use to authentication in Source code for (HTTPHeader header : kintoneAuth.createHeaderCredentials()) { connection.setRequestProperty(header.getKey(), header.getValue()); }","title":"createHeaderCredentials()"},{"location":"reference/authentication/#setclientcertcert-password","text":"Set certificate by certificate data Parameter Name Type Required Description cert InputStream yes Data read from certificate file received from kintone password String yes The password from kintone to decode the cert file Return Auth Sample code Set certificate by certificate data Source code Auth certAuth = new Auth(); certAuth.setPasswordAuth(\"YOUR_KINTONE_ID\", \"YOUR_KINTONE_PASSWORD\"); String certPassword = \"YOUR_CERT_PASSWORD\" String certPath = \"YOUR_CERT_PATH\" InputStream cert = new FileInputStream(certPath); auth.setClientCert(cert, certPassword) Connection connection = new Connection(\"YOUR_DOMAIN\", certAuth, -1);","title":"setClientCert(cert, password)"},{"location":"reference/authentication/#setclientcertbypathfilepath-password","text":"Set certificate by path Parameter Name Type Required Description filePath String yes Path to kintone certificate file password String yes The password from kintone to decode the cert file Return Auth Sample code Set certificate by path Source code Auth certauth = new Auth(); certAuth.setPasswordAuth(\"YOUR_KINTONE_ID\", \"YOUR_KINTONE_PASSWORD\"); String certPassword = \"YOUR_CERT_PASSWORD\" String certPath = \"YOUR_CERT_PATH\" certauth.setClientCertByPath(certPath, certPassword); Connection connection = new Connection(\"YOUR_DOMAIN\", certAuth);","title":"setClientCertByPath(filePath, password)"},{"location":"reference/bulk-request/","text":"BulkRequest The Bulk Request API allows multiple API requests to run on multiple kintone apps. The below API can be used with the Bulk Request API: Add Record Add Records Update Record Update Records Delete Records Update Status Update Statuses Update Assignees Constructor Parameter Name Type Required Description connection Connection yes The connection module of this SDK. Sample code Init bulk request module Source code BulkRequest bulkRequestManager = new BulkRequest(connection); Methods All below methods (excluded execute() method) will add request to queue, you must execute the execute() function to get result of BulkRequest. addRecord(app, record) Parameter See at Record - addRecord Return BulkRequest Sample code add Record Source code BulkRequest bulkRequestManager = new BulkRequest(connection); HashMap record = new HashMap (); Integer appID = 1; FieldValue fv = new FieldValue(); fv.setType(FieldType.SINGLE_LINE_TEXT); fv.setValue(\"sample_AddRecord\"); record.put(\"FieldCode1\", fv); bulkRequestManager.addRecord(appID, record); addRecords(app, records) Parameter See at Record - addRecords Return BulkRequest Sample code add multiple Records Source code BulkRequest bulkRequestManager = new BulkRequest(connection); ArrayList > records = new ArrayList >(); HashMap record1 = new HashMap (); HashMap record2 = new HashMap (); Integer appID = 1; FieldValue fv = new FieldValue(); fv.setType(FieldType.SINGLE_LINE_TEXT); fv.setValue(\"sample_AddRecords1\"); FieldValue fv2 = new FieldValue(); fv2.setType(FieldType.SINGLE_LINE_TEXT); fv2.setValue(\"sample_AddRecords2\"); record1.put(\"FieldCode1\", fv); record2.put(\"FieldCode1\", fv2); records.add(record1); records.add(record2); bulkRequestManager.addRecords(appID, records); updateRecordByID(app, id, record, revision) Parameter See at Record - updateRecordByID Return BulkRequest Sample code update Record By ID Source code BulkRequest bulkRequestManager = new BulkRequest(connection); HashMap record = new HashMap (); Integer appID = 1; Integer recordID = 1; Integer revision = 1; FieldValue fv = new FieldValue(); fv.setType(FieldType.SINGLE_LINE_TEXT); fv.setValue(\"sample_updateRecordById\"); record.put(\"FieldCode1\", fv); bulkRequestManager.updateRecordByID(appID, recordID, record, revision); updateRecordByUpdateKey(app, updateKey, record, revision) Parameter See at Record - updateRecordByUpdateKey Return BulkRequest Sample code update Record By UpdateKey Source code BulkRequest bulkRequestManager = new BulkRequest(connection); HashMap record = new HashMap (); RecordUpdateKey uKey = new RecordUpdateKey(\"\u6587\u5b57\u5217__1\u884c__0\", \"unique_value1\"); Integer appID = 1; Integer revision = 1; FieldValue fv = new FieldValue(); fv.setType(FieldType.SINGLE_LINE_TEXT); fv.setValue(\"sample_updateRecordByUpdateKey\"); record.put(\"FieldCode1\", fv); bulkRequestManager.updateRecordByUpdateKey(appID, uKey, record, revision); updateRecords(app, records) Parameter See at Record - updateRecords Return BulkRequest Sample code update multiple Records Source code BulkRequest bulkRequestManager = new BulkRequest(connection); HashMap record1 = new HashMap (); HashMap record2 = new HashMap (); Integer appID = 1; Integer recordId1 = 1; Integer recordId2 = 2; Integer revision = 1; FieldValue fv1 = new FieldValue(); fv1.setType(FieldType.SINGLE_LINE_TEXT); fv1.setValue(\"test_updateRecords1\"); FieldValue fv2 = new FieldValue(); fv2.setType(FieldType.SINGLE_LINE_TEXT); fv2.setValue(\"test_updateRecords2\"); record1.put(\"FieldCode1\", fv1); record2.put(\"FieldCode1\", fv2); ArrayList records = new ArrayList (); records.add(new RecordUpdateItem(recordId1, revision, null, record1)); records.add(new RecordUpdateItem(recordId2, null, null, record2)); bulkRequestManager.updateRecords(appID, records); deleteRecords(app, ids) Parameter See at Record - deleteRecords Return BulkRequest Sample code Bulk Delete Records Source code BulkRequest bulkRequestManager = new BulkRequest(connection); Integer appID = 1; ArrayList ids = new ArrayList (); ids.add(1); ids.add(2); bulkRequestManager.deleteRecords(appID, ids); deleteRecordsWithRevision(app, idsWithRevision) Parameter See at Record - deleteRecordsWithRevision Return BulkRequest Sample code delete Records With Revision Source code BulkRequest bulkRequestManager = new BulkRequest(connection); HashMap idsWithRevision = new HashMap (); Integer appID = 1; idsWithRevision.put(1, 1); idsWithRevision.put(2, null); idsWithRevision.put(3, -1); bulkRequestManager.deleteRecordsWithRevision(appID, idsWithRevision); updateRecordAssignees(app, record, assignees, revision) Parameter See at Record - updateRecordAssignees Return BulkRequest Sample code Update the Assignees for the record Source code BulkRequest bulkRequestManager = new BulkRequest(connection); Integer appID = 1; Integer recordID =1; Integer revision = 1; ArrayList assignees = new ArrayList (); assignees.add(\"sample_user\"); bulkRequestManager.updateRecordAssignees(appID, recordID, assignees, revision); updateRecordStatus(app, id, action, assignee, revision) Parameter See at Record - updateRecordStatus Return BulkRequest Sample code Update the status of a single record Source code BulkRequest bulkRequestManager = new BulkRequest(connection); Integer appID = 1; Integer recordID =1; String action = \"\u51e6\u7406\u958b\u59cb\"; String assignee = \"sample_user\"; Integer revision = 1; bulkRequestManager.updateRecordStatus(appID, recordID, action, assignee, revision); updateRecordsStatus(app, records) Parameter See at Record - updateRecordsStatus Return BulkRequest Sample code Update the status of multiple records in bulk Source code BulkRequest bulkRequestManager = new BulkRequest(connection); ArrayList rusi = new ArrayList (); Integer appID = 1; String action = \"\u51e6\u7406\u958b\u59cb\"; String assignee = \"sample_user1\"; Integer recordID1 =1; Integer recordID2 =2; Integer recordID3 =3; Integer revision1 = 1; Integer revision2 = null; Integer revision3 = -1; rusi.add(new RecordUpdateStatusItem(action, assignee, recordID1, revision1)); rusi.add(new RecordUpdateStatusItem(action, assignee, recordID2, revision2)); rusi.add(new RecordUpdateStatusItem(action, assignee, recordID3, revision3)); bulkRequestManager.updateRecordsStatus(appID, rusi); execute() Execute the bulk request and get data response Parameter (none) Return BulkRequestResponse Sample code Execute bulk request Source code BulkRequest bulkRequestManager = new BulkRequest(connection); bulkRequestManager.addRecord(/*[Args]*/); bulkRequestManager.addRecords(/*[Args]*/); bulkRequestManager.updateRecords(/*[Args]*/); bulkRequestManager.deleteRecords(/*[Args]*/); try { BulkRequestResponse responses = bulkRequestManager.execute(); } catch (Exception e) { System.out.println(e.getMessage()); } Reference Get Record on developer network","title":"Bulk Request"},{"location":"reference/bulk-request/#bulkrequest","text":"The Bulk Request API allows multiple API requests to run on multiple kintone apps. The below API can be used with the Bulk Request API: Add Record Add Records Update Record Update Records Delete Records Update Status Update Statuses Update Assignees","title":"BulkRequest"},{"location":"reference/bulk-request/#constructor","text":"","title":"Constructor"},{"location":"reference/bulk-request/#parameter","text":"Name Type Required Description connection Connection yes The connection module of this SDK.","title":"Parameter"},{"location":"reference/bulk-request/#sample-code","text":"Init bulk request module Source code BulkRequest bulkRequestManager = new BulkRequest(connection);","title":"Sample code"},{"location":"reference/bulk-request/#methods","text":"All below methods (excluded execute() method) will add request to queue, you must execute the execute() function to get result of BulkRequest.","title":"Methods"},{"location":"reference/bulk-request/#addrecordapp-record","text":"Parameter See at Record - addRecord Return BulkRequest","title":"addRecord(app, record)"},{"location":"reference/bulk-request/#sample-code_1","text":"add Record Source code BulkRequest bulkRequestManager = new BulkRequest(connection); HashMap record = new HashMap (); Integer appID = 1; FieldValue fv = new FieldValue(); fv.setType(FieldType.SINGLE_LINE_TEXT); fv.setValue(\"sample_AddRecord\"); record.put(\"FieldCode1\", fv); bulkRequestManager.addRecord(appID, record);","title":"Sample code"},{"location":"reference/bulk-request/#addrecordsapp-records","text":"Parameter See at Record - addRecords Return BulkRequest","title":"addRecords(app, records)"},{"location":"reference/bulk-request/#sample-code_2","text":"add multiple Records Source code BulkRequest bulkRequestManager = new BulkRequest(connection); ArrayList > records = new ArrayList >(); HashMap record1 = new HashMap (); HashMap record2 = new HashMap (); Integer appID = 1; FieldValue fv = new FieldValue(); fv.setType(FieldType.SINGLE_LINE_TEXT); fv.setValue(\"sample_AddRecords1\"); FieldValue fv2 = new FieldValue(); fv2.setType(FieldType.SINGLE_LINE_TEXT); fv2.setValue(\"sample_AddRecords2\"); record1.put(\"FieldCode1\", fv); record2.put(\"FieldCode1\", fv2); records.add(record1); records.add(record2); bulkRequestManager.addRecords(appID, records);","title":"Sample code"},{"location":"reference/bulk-request/#updaterecordbyidapp-id-record-revision","text":"Parameter See at Record - updateRecordByID Return BulkRequest","title":"updateRecordByID(app, id, record, revision)"},{"location":"reference/bulk-request/#sample-code_3","text":"update Record By ID Source code BulkRequest bulkRequestManager = new BulkRequest(connection); HashMap record = new HashMap (); Integer appID = 1; Integer recordID = 1; Integer revision = 1; FieldValue fv = new FieldValue(); fv.setType(FieldType.SINGLE_LINE_TEXT); fv.setValue(\"sample_updateRecordById\"); record.put(\"FieldCode1\", fv); bulkRequestManager.updateRecordByID(appID, recordID, record, revision);","title":"Sample code"},{"location":"reference/bulk-request/#updaterecordbyupdatekeyapp-updatekey-record-revision","text":"Parameter See at Record - updateRecordByUpdateKey Return BulkRequest","title":"updateRecordByUpdateKey(app, updateKey, record, revision)"},{"location":"reference/bulk-request/#sample-code_4","text":"update Record By UpdateKey Source code BulkRequest bulkRequestManager = new BulkRequest(connection); HashMap record = new HashMap (); RecordUpdateKey uKey = new RecordUpdateKey(\"\u6587\u5b57\u5217__1\u884c__0\", \"unique_value1\"); Integer appID = 1; Integer revision = 1; FieldValue fv = new FieldValue(); fv.setType(FieldType.SINGLE_LINE_TEXT); fv.setValue(\"sample_updateRecordByUpdateKey\"); record.put(\"FieldCode1\", fv); bulkRequestManager.updateRecordByUpdateKey(appID, uKey, record, revision);","title":"Sample code"},{"location":"reference/bulk-request/#updaterecordsapp-records","text":"Parameter See at Record - updateRecords Return BulkRequest","title":"updateRecords(app, records)"},{"location":"reference/bulk-request/#sample-code_5","text":"update multiple Records Source code BulkRequest bulkRequestManager = new BulkRequest(connection); HashMap record1 = new HashMap (); HashMap record2 = new HashMap (); Integer appID = 1; Integer recordId1 = 1; Integer recordId2 = 2; Integer revision = 1; FieldValue fv1 = new FieldValue(); fv1.setType(FieldType.SINGLE_LINE_TEXT); fv1.setValue(\"test_updateRecords1\"); FieldValue fv2 = new FieldValue(); fv2.setType(FieldType.SINGLE_LINE_TEXT); fv2.setValue(\"test_updateRecords2\"); record1.put(\"FieldCode1\", fv1); record2.put(\"FieldCode1\", fv2); ArrayList records = new ArrayList (); records.add(new RecordUpdateItem(recordId1, revision, null, record1)); records.add(new RecordUpdateItem(recordId2, null, null, record2)); bulkRequestManager.updateRecords(appID, records);","title":"Sample code"},{"location":"reference/bulk-request/#deleterecordsapp-ids","text":"Parameter See at Record - deleteRecords Return BulkRequest","title":"deleteRecords(app, ids)"},{"location":"reference/bulk-request/#sample-code_6","text":"Bulk Delete Records Source code BulkRequest bulkRequestManager = new BulkRequest(connection); Integer appID = 1; ArrayList ids = new ArrayList (); ids.add(1); ids.add(2); bulkRequestManager.deleteRecords(appID, ids);","title":"Sample code"},{"location":"reference/bulk-request/#deleterecordswithrevisionapp-idswithrevision","text":"Parameter See at Record - deleteRecordsWithRevision Return BulkRequest","title":"deleteRecordsWithRevision(app, idsWithRevision)"},{"location":"reference/bulk-request/#sample-code_7","text":"delete Records With Revision Source code BulkRequest bulkRequestManager = new BulkRequest(connection); HashMap idsWithRevision = new HashMap (); Integer appID = 1; idsWithRevision.put(1, 1); idsWithRevision.put(2, null); idsWithRevision.put(3, -1); bulkRequestManager.deleteRecordsWithRevision(appID, idsWithRevision);","title":"Sample code"},{"location":"reference/bulk-request/#updaterecordassigneesapp-record-assignees-revision","text":"Parameter See at Record - updateRecordAssignees Return BulkRequest","title":"updateRecordAssignees(app, record, assignees, revision)"},{"location":"reference/bulk-request/#sample-code_8","text":"Update the Assignees for the record Source code BulkRequest bulkRequestManager = new BulkRequest(connection); Integer appID = 1; Integer recordID =1; Integer revision = 1; ArrayList assignees = new ArrayList (); assignees.add(\"sample_user\"); bulkRequestManager.updateRecordAssignees(appID, recordID, assignees, revision);","title":"Sample code"},{"location":"reference/bulk-request/#updaterecordstatusapp-id-action-assignee-revision","text":"Parameter See at Record - updateRecordStatus Return BulkRequest","title":"updateRecordStatus(app, id, action, assignee, revision)"},{"location":"reference/bulk-request/#sample-code_9","text":"Update the status of a single record Source code BulkRequest bulkRequestManager = new BulkRequest(connection); Integer appID = 1; Integer recordID =1; String action = \"\u51e6\u7406\u958b\u59cb\"; String assignee = \"sample_user\"; Integer revision = 1; bulkRequestManager.updateRecordStatus(appID, recordID, action, assignee, revision);","title":"Sample code"},{"location":"reference/bulk-request/#updaterecordsstatusapp-records","text":"Parameter See at Record - updateRecordsStatus Return BulkRequest","title":"updateRecordsStatus(app, records)"},{"location":"reference/bulk-request/#sample-code_10","text":"Update the status of multiple records in bulk Source code BulkRequest bulkRequestManager = new BulkRequest(connection); ArrayList rusi = new ArrayList (); Integer appID = 1; String action = \"\u51e6\u7406\u958b\u59cb\"; String assignee = \"sample_user1\"; Integer recordID1 =1; Integer recordID2 =2; Integer recordID3 =3; Integer revision1 = 1; Integer revision2 = null; Integer revision3 = -1; rusi.add(new RecordUpdateStatusItem(action, assignee, recordID1, revision1)); rusi.add(new RecordUpdateStatusItem(action, assignee, recordID2, revision2)); rusi.add(new RecordUpdateStatusItem(action, assignee, recordID3, revision3)); bulkRequestManager.updateRecordsStatus(appID, rusi);","title":"Sample code"},{"location":"reference/bulk-request/#execute","text":"Execute the bulk request and get data response Parameter (none) Return BulkRequestResponse","title":"execute()"},{"location":"reference/bulk-request/#sample-code_11","text":"Execute bulk request Source code BulkRequest bulkRequestManager = new BulkRequest(connection); bulkRequestManager.addRecord(/*[Args]*/); bulkRequestManager.addRecords(/*[Args]*/); bulkRequestManager.updateRecords(/*[Args]*/); bulkRequestManager.deleteRecords(/*[Args]*/); try { BulkRequestResponse responses = bulkRequestManager.execute(); } catch (Exception e) { System.out.println(e.getMessage()); }","title":"Sample code"},{"location":"reference/bulk-request/#reference","text":"Get Record on developer network","title":"Reference"},{"location":"reference/bulks-exception/","text":"BulksException Handle error responses when using multiple bulk request Methods getResults() Parameter (none) Return ArrayList Object> Sample code Get responses if exist error when using multiple bulk request Source code try { BulkRequestResponse bulkRequestResponse = record.addAllRecords(appID, records); } catch (BulksException e) { System.out.println(e.getResults()); }","title":"Bulks Exception"},{"location":"reference/bulks-exception/#bulksexception","text":"Handle error responses when using multiple bulk request","title":"BulksException"},{"location":"reference/bulks-exception/#methods","text":"","title":"Methods"},{"location":"reference/bulks-exception/#getresults","text":"Parameter (none) Return ArrayList Object> Sample code Get responses if exist error when using multiple bulk request Source code try { BulkRequestResponse bulkRequestResponse = record.addAllRecords(appID, records); } catch (BulksException e) { System.out.println(e.getResults()); }","title":"getResults()"},{"location":"reference/connection/","text":"Connection Connection module will used as a connector to connect to kintone Rest API Constructor Parameter Name Type Required Description domain String yes The Domain name or FQDN auth Auth yes The authentication object guestSpaceID Integer (optional) The guest space id. Use this parameter to connect to kintone guest space. Sample code Init Connection module Source code // Define Authentication object Auth kintoneAuth = new Auth(); String username = \"cybozu\"; String password = \"cybozu\"; kintoneAuth.setPasswordAuth(username, password); String myDomainName = \"sample.cybozu.com\"; Connection connection = new Connection(myDomainName, kintoneAuth); // Define connection that included guest space int guestSpaceID = 1; Connection kintoneConnectionWithGuestSpaceDemo = new Connection(myDomainName, kintoneAuth, guestSpaceID); Methods setHeader(key, value) Set new header of the Connection Parameter Name Type Required Description key String yes The header's key name value String yes The header's value of key Return Connection Sample code Set header of the Connection Source code String username = \"cybozu\"; String password = \"cybozu\"; String key = \"X-HTTP-Method-Override\"; String value = \"GET\"; // Init authenticationAuth Auth kintoneAuth = new Auth(); kintoneAuth.setPasswordAuth(username, password); String myDomainName = \"sample.cybozu.com\"; Connection connection = new Connection(myDomainName, kintoneAuth); connection.setHeader(key, value); setProxy(proxyHost, proxyPort, proxyUsername, proxyPassword) Set the proxy of the request Parameter Name Type Required Description proxyHost String yes The proxy host name proxyPort Integer yes The proxy port number proxyUsername String (optional) User name of the proxy proxyPassword String (optional) Password of the proxy Return Connection Source code Set the proxy of the request Source code String username = \"cybozu\"; String password = \"cybozu\"; String proxyHost = \"xxxx\"; Integer proxyPort = 1234; // Init authenticationAuth Auth kintoneAuth = new Auth(); kintoneAuth.setPasswordAuth(username, password); String myDomainName = \"sample.cybozu.com\"; Connection connection = new Connection(myDomainName, kintoneAuth); // Set proxy without proxyUsername & proxyPassword connection.setProxy(proxyHost, proxyPort); // Set proxy with proxyUsername & proxyPassword String proxyUsername = \"xxxx\"; String proxyPassword = \"xxxx\"; connection.setProxy(proxyHost, proxyPort, proxyUsername, proxyPassword);","title":"Connection"},{"location":"reference/connection/#connection","text":"Connection module will used as a connector to connect to kintone Rest API","title":"Connection"},{"location":"reference/connection/#constructor","text":"Parameter Name Type Required Description domain String yes The Domain name or FQDN auth Auth yes The authentication object guestSpaceID Integer (optional) The guest space id. Use this parameter to connect to kintone guest space. Sample code Init Connection module Source code // Define Authentication object Auth kintoneAuth = new Auth(); String username = \"cybozu\"; String password = \"cybozu\"; kintoneAuth.setPasswordAuth(username, password); String myDomainName = \"sample.cybozu.com\"; Connection connection = new Connection(myDomainName, kintoneAuth); // Define connection that included guest space int guestSpaceID = 1; Connection kintoneConnectionWithGuestSpaceDemo = new Connection(myDomainName, kintoneAuth, guestSpaceID);","title":"Constructor"},{"location":"reference/connection/#methods","text":"","title":"Methods"},{"location":"reference/connection/#setheaderkey-value","text":"Set new header of the Connection Parameter Name Type Required Description key String yes The header's key name value String yes The header's value of key Return Connection Sample code Set header of the Connection Source code String username = \"cybozu\"; String password = \"cybozu\"; String key = \"X-HTTP-Method-Override\"; String value = \"GET\"; // Init authenticationAuth Auth kintoneAuth = new Auth(); kintoneAuth.setPasswordAuth(username, password); String myDomainName = \"sample.cybozu.com\"; Connection connection = new Connection(myDomainName, kintoneAuth); connection.setHeader(key, value);","title":"setHeader(key, value)"},{"location":"reference/connection/#setproxyproxyhost-proxyport-proxyusername-proxypassword","text":"Set the proxy of the request Parameter Name Type Required Description proxyHost String yes The proxy host name proxyPort Integer yes The proxy port number proxyUsername String (optional) User name of the proxy proxyPassword String (optional) Password of the proxy Return Connection Source code Set the proxy of the request Source code String username = \"cybozu\"; String password = \"cybozu\"; String proxyHost = \"xxxx\"; Integer proxyPort = 1234; // Init authenticationAuth Auth kintoneAuth = new Auth(); kintoneAuth.setPasswordAuth(username, password); String myDomainName = \"sample.cybozu.com\"; Connection connection = new Connection(myDomainName, kintoneAuth); // Set proxy without proxyUsername & proxyPassword connection.setProxy(proxyHost, proxyPort); // Set proxy with proxyUsername & proxyPassword String proxyUsername = \"xxxx\"; String proxyPassword = \"xxxx\"; connection.setProxy(proxyHost, proxyPort, proxyUsername, proxyPassword);","title":"setProxy(proxyHost, proxyPort, proxyUsername, proxyPassword)"},{"location":"reference/file/","text":"File Provide manipulate functions on file: file download file upload in the kintone app. Constructor Parameter Name Type Required Description connection Connection yes The connection module of this SDK. Sample code Initial file class Source code File fileManagement = new File(connection); Methods upload(filePath) Upload file kintone via Rest API Parameter Name Type Required Description filePath String yes The full path of file on your environment Return FileModel Sample code Get app sample Source code String username = \"cybozu\"; String password = \"cybozu\"; // Init authenticationAuth Auth kintoneAuth = new Auth(); kintoneAuth.setPasswordAuth(username, password); // Init Connection String myDomainName = \"sample.cybozu.com\"; Connection kintoneOnDemoDomain = new Connection(myDomainName, kintoneAuth); // Init File Module File kintoneFileManager = new File(kintoneOnDemoDomain); // execute upload file API String uploadPath = \"C:/Users/Administrator/Desktop/upload\"; FileModel fileModel = kintoneFileManager .upload(uploadPath + \"test.txt\"); download(fileKey, outPutFilePath) Download file kintone via Rest API Parameter Name Type Required Description fileKey String yes The file key of the uploaded file on kintone outPutFilePath String yes The full path of output file on your environment Return (none) Sample code Get apps sample Source code String username = \"cybozu\"; String password = \"cybozu\"; // Init authenticationAuth Auth kintoneAuth = new Auth(); kintoneAuth.setPasswordAuth(username, password); String myDomainName = \"sample.cybozu.com\"; Connection kintoneOnDemoDomain = new Connection(myDomainName, kintoneAuth); // Init File Module File kintoneFileManager = new File(kintoneOnDemoDomain); // Init Record Module Record kintonRecordManager = new Record(kintoneOnDemoDomain); // get filekey Integer appID = 1; Integer recordID =1; GetRecordResponse recordJson = kintonRecordManager.getRecord(appID, recordID); HashMap recordVal = recordJson.getRecord(); FieldValue fileVal = recordVal.get(\"TempFile\"); ArrayList fileList = (ArrayList ) fileVal.getValue(); // execute download file API String downloadPath = \"C:/Users/Administrator/Desktop/\"; for (int i = 0; i < fileList.size(); i++) { FileModel fdata = fileList.get(i); kintoneFileManager.download(fdata.getFileKey(), downloadPath + fdata.getName()); }","title":"File"},{"location":"reference/file/#file","text":"Provide manipulate functions on file: file download file upload in the kintone app.","title":"File"},{"location":"reference/file/#constructor","text":"Parameter Name Type Required Description connection Connection yes The connection module of this SDK. Sample code Initial file class Source code File fileManagement = new File(connection);","title":"Constructor"},{"location":"reference/file/#methods","text":"","title":"Methods"},{"location":"reference/file/#uploadfilepath","text":"Upload file kintone via Rest API Parameter Name Type Required Description filePath String yes The full path of file on your environment Return FileModel Sample code Get app sample Source code String username = \"cybozu\"; String password = \"cybozu\"; // Init authenticationAuth Auth kintoneAuth = new Auth(); kintoneAuth.setPasswordAuth(username, password); // Init Connection String myDomainName = \"sample.cybozu.com\"; Connection kintoneOnDemoDomain = new Connection(myDomainName, kintoneAuth); // Init File Module File kintoneFileManager = new File(kintoneOnDemoDomain); // execute upload file API String uploadPath = \"C:/Users/Administrator/Desktop/upload\"; FileModel fileModel = kintoneFileManager .upload(uploadPath + \"test.txt\");","title":"upload(filePath)"},{"location":"reference/file/#downloadfilekey-outputfilepath","text":"Download file kintone via Rest API Parameter Name Type Required Description fileKey String yes The file key of the uploaded file on kintone outPutFilePath String yes The full path of output file on your environment Return (none) Sample code Get apps sample Source code String username = \"cybozu\"; String password = \"cybozu\"; // Init authenticationAuth Auth kintoneAuth = new Auth(); kintoneAuth.setPasswordAuth(username, password); String myDomainName = \"sample.cybozu.com\"; Connection kintoneOnDemoDomain = new Connection(myDomainName, kintoneAuth); // Init File Module File kintoneFileManager = new File(kintoneOnDemoDomain); // Init Record Module Record kintonRecordManager = new Record(kintoneOnDemoDomain); // get filekey Integer appID = 1; Integer recordID =1; GetRecordResponse recordJson = kintonRecordManager.getRecord(appID, recordID); HashMap recordVal = recordJson.getRecord(); FieldValue fileVal = recordVal.get(\"TempFile\"); ArrayList fileList = (ArrayList ) fileVal.getValue(); // execute download file API String downloadPath = \"C:/Users/Administrator/Desktop/\"; for (int i = 0; i < fileList.size(); i++) { FileModel fdata = fileList.get(i); kintoneFileManager.download(fdata.getFileKey(), downloadPath + fdata.getName()); }","title":"download(fileKey, outPutFilePath)"},{"location":"reference/kintone-api-exception/","text":"kintoneAPIException Handle error responses from kintone Rest API Methods getHttpErrorCode() Parameter (none) Return int Sample code Get http error code Source code String appId = 1 Integer id = -1 try { GetRecordResponse response = recordManagerment.getRecord(appId, id); } catch(kintoneException ke) { int errorCode = ke.getHttpErrorCode(); } getErrorResponse() Parameter (none) Return ErrorResponse Sample code Get apps with error response Source code String appId = 1 Integer id = -1 try { GetRecordResponse response = recordManagerment.getRecord(appId, id); } catch(kintoneException ke) { String id = ke.getErrorResponse().getId(); String message = ke.getErrorResponse().getMessage(); String code = ke.getErrorResponse().getCode(); } getErrorResponses() Parameter (none) Return ArrayList ErrorResponse Sample code Get apps with error responses Source code String appId = 1 Integer id = -1 HashMap record = new HashMap (); FieldValue fv = new FieldValue(); fv.setType(FieldType.SINGLE_LINE_TEXT); fv.setValue(\"test_AddRecord\"); BulkRequest bulkRequestManager = new BulkRequest(connection); bulkRequestManager.addRecord(appId, record); try { BulkRequestResponse responses = bulkRequestManager.execute(); } catch(kintoneException ke) { for(ErrorResponse errorResponse : ke.getErrorResponses()) { String id = errorResponse.getId(); String message = errorResponse.getMessage(); String code = errorResponse.getCode(); } }","title":"Kintone APIException"},{"location":"reference/kintone-api-exception/#kintoneapiexception","text":"Handle error responses from kintone Rest API","title":"kintoneAPIException"},{"location":"reference/kintone-api-exception/#methods","text":"","title":"Methods"},{"location":"reference/kintone-api-exception/#gethttperrorcode","text":"Parameter (none) Return int Sample code Get http error code Source code String appId = 1 Integer id = -1 try { GetRecordResponse response = recordManagerment.getRecord(appId, id); } catch(kintoneException ke) { int errorCode = ke.getHttpErrorCode(); }","title":"getHttpErrorCode()"},{"location":"reference/kintone-api-exception/#geterrorresponse","text":"Parameter (none) Return ErrorResponse Sample code Get apps with error response Source code String appId = 1 Integer id = -1 try { GetRecordResponse response = recordManagerment.getRecord(appId, id); } catch(kintoneException ke) { String id = ke.getErrorResponse().getId(); String message = ke.getErrorResponse().getMessage(); String code = ke.getErrorResponse().getCode(); }","title":"getErrorResponse()"},{"location":"reference/kintone-api-exception/#geterrorresponses","text":"Parameter (none) Return ArrayList ErrorResponse Sample code Get apps with error responses Source code String appId = 1 Integer id = -1 HashMap record = new HashMap (); FieldValue fv = new FieldValue(); fv.setType(FieldType.SINGLE_LINE_TEXT); fv.setValue(\"test_AddRecord\"); BulkRequest bulkRequestManager = new BulkRequest(connection); bulkRequestManager.addRecord(appId, record); try { BulkRequestResponse responses = bulkRequestManager.execute(); } catch(kintoneException ke) { for(ErrorResponse errorResponse : ke.getErrorResponses()) { String id = errorResponse.getId(); String message = errorResponse.getMessage(); String code = errorResponse.getCode(); } }","title":"getErrorResponses()"},{"location":"reference/record-cursor/","text":"RecordCursor This module provide functions to work with Record Cursor. The user or API Token must have permission to view the records. Constructor Parameter Name Type Required Description connection Connection yes The connection module of this SDK. Sample code Init app module Source code // Init authentication Auth kintoneAuth = new Auth() // Password Authentication String username = \"your_username\" String password = \"your_password\" kintoneAuth = kintoneAuth.setPasswordAuth(username, password) Connection connection = Connection( \"your_domain\", kintoneAuth ) RecordCursor recordCursor = new RecordCursor(connection); Methods createCursor(Integer app, Array String> fields, String query, Integer size) Create a cursor. Parameter Name Type Required Description appId Integer yes The kintone app ID fields Array String> (optional) Fields of record to return query String (optional) Query condition size Integer (optional) Number of records to retrieve per request. Default: 100. Maximum: 500. Return CreateRecordCursorResponse Sample code create Cursor Source code RecordCursor recordCursor = new RecordCursor(connection); int appID = 110; int size = 500; String query = \"order by \u6570\u5024 desc\"; ArrayList String fields = new ArrayList String (); fields.add(\"\u6570\u5024\"); CreateRecordCursorResponse cursor = recordCursor.createCursor(appID, fields, query, size); System.out.println(\"cursorID: \" + cursor.getId()); System.out.println(\"totalRecord: \" + cursor.getTotalCount()); /* output: cursorID: \"your_cursor_id\" totalRecord: 50 */ getRecords(String cursorID) Get one block of records. Parameter Name Type Required Description cursorID String (optional) The cursor ID. Return GetRecordCursorResponse Sample code Get Records Source code RecordCursor recordCursor = new RecordCursor(connection); String cursorId = \"dc24fc1f-4195-41b3-a55d-7e4547d45de1\"; GetRecordCursorResponse response = recordCursor.getRecords(cursorId); ArrayList > resultRecords = response.getRecords(); for (HashMap record : resultRecords) { for (Entry entry : record.entrySet()) { System.out.println(entry.getKey() + \" \" + entry.getValue().getValue()); } } /* output: \u6570\u5024 7669 \u6570\u5024 7668 \u6570\u5024 7667 \u6570\u5024 7666 \u6570\u5024 7665 */ getAllRecords(String cursorID) Get all records Parameter Name Type Required Description cursorID String yes The cursor ID. Return GetRecordsResponse Sample code get Apps By IDs Source code RecordCursor recordCursor = new RecordCursor(connection); String cursorId = \"dc24fc1f-4195-41b3-a55d-7e4547d45de1\"; GetRecordsResponse response = recordCursor.getAllRecords(cursorId); ArrayList > resultRecords = response.getRecords(); for (HashMap record : resultRecords) { for (Entry entry : record.entrySet()) { System.out.println(entry.getKey() + \" \" + entry.getValue().getValue()); } } /* output: \u6570\u5024 7669 \u6570\u5024 7668 \u6570\u5024 7667 \u6570\u5024 7666 \u6570\u5024 7665 */ deleteCursor(String cursorID) Delete a cursor Parameter Name Type Required Description cursorID String yes The cursor ID. Return none Sample code Delete Cursor Source code RecordCursor recordCursor = new RecordCursor(connection); String cursorId = \"dc24fc1f-4195-41b3-a55d-7e4547d45de1\"; recordCursor.deleteCursor(cursorId);","title":"RecordCursor"},{"location":"reference/record-cursor/#recordcursor","text":"This module provide functions to work with Record Cursor. The user or API Token must have permission to view the records.","title":"RecordCursor"},{"location":"reference/record-cursor/#constructor","text":"","title":"Constructor"},{"location":"reference/record-cursor/#parameter","text":"Name Type Required Description connection Connection yes The connection module of this SDK.","title":"Parameter"},{"location":"reference/record-cursor/#sample-code","text":"Init app module Source code // Init authentication Auth kintoneAuth = new Auth() // Password Authentication String username = \"your_username\" String password = \"your_password\" kintoneAuth = kintoneAuth.setPasswordAuth(username, password) Connection connection = Connection( \"your_domain\", kintoneAuth ) RecordCursor recordCursor = new RecordCursor(connection);","title":"Sample code"},{"location":"reference/record-cursor/#methods","text":"","title":"Methods"},{"location":"reference/record-cursor/#createcursorinteger-app-arraystring62-fields-string-query-integer-size","text":"Create a cursor. Parameter Name Type Required Description appId Integer yes The kintone app ID fields Array String> (optional) Fields of record to return query String (optional) Query condition size Integer (optional) Number of records to retrieve per request. Default: 100. Maximum: 500. Return CreateRecordCursorResponse Sample code create Cursor Source code RecordCursor recordCursor = new RecordCursor(connection); int appID = 110; int size = 500; String query = \"order by \u6570\u5024 desc\"; ArrayList String fields = new ArrayList String (); fields.add(\"\u6570\u5024\"); CreateRecordCursorResponse cursor = recordCursor.createCursor(appID, fields, query, size); System.out.println(\"cursorID: \" + cursor.getId()); System.out.println(\"totalRecord: \" + cursor.getTotalCount()); /* output: cursorID: \"your_cursor_id\" totalRecord: 50 */","title":"createCursor(Integer app, Array&lt;String> fields, String query, Integer size)"},{"location":"reference/record-cursor/#getrecordsstring-cursorid","text":"Get one block of records. Parameter Name Type Required Description cursorID String (optional) The cursor ID. Return GetRecordCursorResponse Sample code Get Records Source code RecordCursor recordCursor = new RecordCursor(connection); String cursorId = \"dc24fc1f-4195-41b3-a55d-7e4547d45de1\"; GetRecordCursorResponse response = recordCursor.getRecords(cursorId); ArrayList > resultRecords = response.getRecords(); for (HashMap record : resultRecords) { for (Entry entry : record.entrySet()) { System.out.println(entry.getKey() + \" \" + entry.getValue().getValue()); } } /* output: \u6570\u5024 7669 \u6570\u5024 7668 \u6570\u5024 7667 \u6570\u5024 7666 \u6570\u5024 7665 */","title":"getRecords(String cursorID)"},{"location":"reference/record-cursor/#getallrecordsstring-cursorid","text":"Get all records Parameter Name Type Required Description cursorID String yes The cursor ID. Return GetRecordsResponse Sample code get Apps By IDs Source code RecordCursor recordCursor = new RecordCursor(connection); String cursorId = \"dc24fc1f-4195-41b3-a55d-7e4547d45de1\"; GetRecordsResponse response = recordCursor.getAllRecords(cursorId); ArrayList > resultRecords = response.getRecords(); for (HashMap record : resultRecords) { for (Entry entry : record.entrySet()) { System.out.println(entry.getKey() + \" \" + entry.getValue().getValue()); } } /* output: \u6570\u5024 7669 \u6570\u5024 7668 \u6570\u5024 7667 \u6570\u5024 7666 \u6570\u5024 7665 */","title":"getAllRecords(String cursorID)"},{"location":"reference/record-cursor/#deletecursorstring-cursorid","text":"Delete a cursor Parameter Name Type Required Description cursorID String yes The cursor ID. Return none Sample code Delete Cursor Source code RecordCursor recordCursor = new RecordCursor(connection); String cursorId = \"dc24fc1f-4195-41b3-a55d-7e4547d45de1\"; recordCursor.deleteCursor(cursorId);","title":"deleteCursor(String cursorID)"},{"location":"reference/record/","text":"Record Provide manipulate functions on records: get, update, delete, update the record status assignees in the kintone app Constructor Parameter Name Type Required Description connection Connection yes The connection module of this SDK. Sample code Init record module Source code String USERNAME = \"YOUR_USERNAME\"; String PASSWORD = \"YOUR_PASSWORD\"; // Init authenticationAuth Auth kintoneAuthWithPassword = new Auth(); kintoneAuthWithPassword.setPasswordAuth(USERNAME, PASSWORD); // Init Connection without \"guest space ID\" Connection kintoneOnDemoDomain = new Connection(\"sample.domain.dot\", kintoneAuthWithPassword); // Init Record Module Record kintoneRecordManager = new Record(kintoneOnDemoDomain); Methods getRecord(app, id) Retrieves details of 1 record from an app. Parameter Name Type Required Description app Integer yes The kintone app ID id Integer yes The record ID in kintone app Return GetRecordResponse Sample code Get record Source code String USERNAME = \"YOUR_USERNAME\"; String PASSWORD = \"YOUR_PASSWORD\"; // Init authenticationAuth Auth kintoneAuthWithPassword = new Auth(); kintoneAuthWithPassword.setPasswordAuth(USERNAME, PASSWORD); // Init Connection without \"guest space ID\" Connection kintoneOnDemoDomain = new Connection(\"sample.domain.dot\", kintoneAuthWithPassword); // Init Record Module Record kintoneRecordManager = new Record(kintoneOnDemoDomain); // execute GET RECORD API Integer appID = 1; Integer recordID = 1; GetRecordResponse response = kintoneRecordManager.getRecord(appID, recordID); getRecords(app, query, fields, totalCount) Retrieves details of multiple records from an app using a query string. Parameter Name Type Required Description app Integer yes The kintone app ID query String (optional) The query string that will specify what records will be responded. fields ArrayList String> (optional) List of field codes you want in the response. totalCount Boolean (optional) If \"true\", the request will retrieve total count of records match with query conditions. Return GetRecordsResponse Sample code Get records Source code String USERNAME = \"YOUR_USERNAME\"; String PASSWORD = \"YOUR_PASSWORD\"; // Init authenticationAuth Auth kintoneAuthWithPassword = new Auth(); kintoneAuthWithPassword.setPasswordAuth(USERNAME, PASSWORD); // Init Connection without \"guest space ID\" Connection kintoneOnDemoDomain = new Connection(\"sample.domain.dot\", kintoneAuthWithPassword); // Init Record Module Record kintoneRecordManager = new Record(kintoneOnDemoDomain); // execute GET RECORDS API Integer appID = 1; String query = \"$id >=\" + 1 + \"and $id < =\" + 10 + \"order by $id asc\"; GetRecordsResponse response = kintoneRecordManager.getRecords(appID, query, null, true); getAllRecordsByCursor(Integer app, String query, Array String> fields) Retrieves details of all records from an app using a query string. Parameter Name Type Required Description app Integer yes The kintone app ID query String (optional) The query string that will specify what records will be responded. fields ArrayList String> (optional) List of field codes you want in the response. Return GetRecordsResponse Sample code Get all records by cursor Source code String USERNAME = \"YOUR_USERNAME\"; String PASSWORD = \"YOUR_PASSWORD\"; // Init authenticationAuth Auth kintoneAuthWithPassword = new Auth(); kintoneAuthWithPassword.setPasswordAuth(USERNAME, PASSWORD); // Init Connection without \"guest space ID\" Connection kintoneOnDemoDomain = new Connection(\"sample.domain.dot\", kintoneAuthWithPassword); // Init Record Module Record kintoneRecordManager = new Record(kintoneOnDemoDomain); // execute GET RECORDS API Integer appID = 1; String query = \"$id >=\" + 1 + \"and $id < =\" + 10 + \"order by $id asc\"; GetRecordsResponse response = kintoneRecordManager.getAllRecordsByCursor(appID, query, null); addRecord(app, record) Add one record to an app. Parameter Name Type Required Description app Integer yes The kintone app ID record HashMap String, FieldValue > (optional) The record data to be add to kintone app. About the format, please look the sample below or reference at the end of this page Return AddRecordResponse Sample code Add record Source code String USERNAME = \"YOUR_USERNAME\"; String PASSWORD = \"YOUR_PASSWORD\"; // Init authenticationAuth Auth kintoneAuthWithPassword = new Auth(); kintoneAuthWithPassword.setPasswordAuth(USERNAME, PASSWORD); // Init Connection without \"guest space ID\" Connection kintoneOnDemoDomain = new Connection(\"sample.domain.dot\", kintoneAuthWithPassword); // Init Record Module Record kintoneRecordManager = new Record(kintoneOnDemoDomain); // execute ADD RECORD API Integer appID = 1; HashMap String, FieldValue record = new HashMap String, FieldValue (); FieldValue fv = new FieldValue(); fv.setType(FieldType.SINGLE_LINE_TEXT); fv.setValue(\"sample_AddRecord\"); record.put(\"FieldCode1\", fv); AddRecordResponse response = kintoneRecordManager.addRecord(appID, record); addRecords(app, records) Add multiple records to an app. Parameter Name Type Required Description app Integer yes The kintone app ID records ArrayList HashMap String, FieldValue >> yes List of records data to be add to kintone app. About the format, please look the sample below or reference at the end of this page. Return AddRecordsResponse Sample code Add multi records Source code String USERNAME = \"YOUR_USERNAME\"; String PASSWORD = \"YOUR_PASSWORD\"; // Init authenticationAuth Auth kintoneAuthWithPassword = new Auth(); kintoneAuthWithPassword.setPasswordAuth(USERNAME, PASSWORD); // Init Connection without \"guest space ID\" Connection kintoneOnDemoDomain = new Connection(\"sample.domain.dot\", kintoneAuthWithPassword); // Init Record Module Record kintoneRecordManager = new Record(kintoneOnDemoDomain); // execute ADD RECORDS API Integer appID = 1; ArrayList HashMap String, FieldValue > records = new ArrayList HashMap String, FieldValue >(); HashMap String, FieldValue record1 = new HashMap String, FieldValue (); HashMap String, FieldValue record2 = new HashMap String, FieldValue (); FieldValue fv = new FieldValue(); fv.setType(FieldType.SINGLE_LINE_TEXT); fv.setValue(\"sample_AddRecords1\"); FieldValue fv2 = new FieldValue(); fv2.setType(FieldType.SINGLE_LINE_TEXT); fv2.setValue(\"sample_AddRecords2\"); record1.put(\"FieldCode1\", fv); record2.put(\"FieldCode1\", fv2); records.add(record1); records.add(record2); AddRecordsResponse response = kintoneRecordManager.addRecords(appID, records); updateRecordByID(app, id, record, revision) Updates details of 1 record in an app by specifying its record number. Parameter Name Type Required Description app Integer yes The kintone app ID id Integer yes The record ID on kintone app record HashMap String, FieldValue > yes The record data to be update in kintone app. About the format, please look the sample below or reference at the end of this page. revision Integer (optional) The revision number of record Return UpdateRecordResponse Sample code Update record by ID Source code String USERNAME = \"YOUR_USERNAME\"; String PASSWORD = \"YOUR_PASSWORD\"; // Init authenticationAuth Auth kintoneAuthWithPassword = new Auth(); kintoneAuthWithPassword.setPasswordAuth(USERNAME, PASSWORD); // Init Connection without \"guest space ID\" Connection kintoneOnDemoDomain = new Connection(\"sample.domain.dot\", kintoneAuthWithPassword); // Init Record Module Record kintoneRecordManager = new Record(kintoneOnDemoDomain); // execute UPDATE RECORD API Integer appID = 1; Integer recordID = 1; Integer revision = 1; HashMap String, FieldValue record = new HashMap String, FieldValue (); FieldValue fv = new FieldValue(); fv.setType(FieldType.SINGLE_LINE_TEXT); fv.setValue(\"sample_updateRecordById\"); record.put(\"FieldCode1\", fv); UpdateRecordResponse response = kintoneRecordManager.updateRecordByID(appID, recordID, record, revision); updateRecordByUpdateKey(app, updateKey, record, revision) Updates details of 1 record in an app by unique key. Parameter Name Type Required Description app Integer yes The kintone app ID updateKey RecordUpdateKey yes The unique key of the record to be updated. About the format, please look the sample below or reference at the end of this page. record HashMap String, FieldValue > yes The record data will be added to kintone app. About the format, please look the sample below or reference at the end of this page. revision Integer (optional) The revision number of record Return UpdateRecordResponse Sample code Update record by UpdateKey Source code String USERNAME = \"YOUR_USERNAME\"; String PASSWORD = \"YOUR_PASSWORD\"; // Init authenticationAuth Auth kintoneAuthWithPassword = new Auth(); kintoneAuthWithPassword.setPasswordAuth(USERNAME, PASSWORD); // Init Connection without \"guest space ID\" Connection kintoneOnDemoDomain = new Connection(\"sample.domain.dot\", kintoneAuthWithPassword); // Init Record Module Record kintoneRecordManager = new Record(kintoneOnDemoDomain); // execute UPDATE RECORD API Integer appID = 1; HashMap String, FieldValue record = new HashMap String, FieldValue (); RecordUpdateKey uKey = new RecordUpdateKey(\"\u6587\u5b57\u5217__1\u884c__0\", \"unique_value1\"); Integer revision = 1; FieldValue fv = new FieldValue(); fv.setType(FieldType.SINGLE_LINE_TEXT); fv.setValue(\"sample_updateRecordByUpdateKey\"); record.put(\"FieldCode1\", fv); UpdateRecordResponse response = kintoneRecordManager.updateRecordByUpdateKey(appID, uKey, record, revision); updateRecords(app, records) Updates details of multiple records in an app, by specifying their record number, or a different unique key. Parameter Name Type Required Description app Integer yes The kintone app ID records ArrayList RecordUpdateItem > yes The record data will be added to kintone app. About the format, please look the sample below or reference at the end of this page. Return UpdateRecordsResponse Sample code Update multi records Source code String USERNAME = \"YOUR_USERNAME\"; String PASSWORD = \"YOUR_PASSWORD\"; // Init authenticationAuth Auth kintoneAuthWithPassword = new Auth(); kintoneAuthWithPassword.setPasswordAuth(USERNAME, PASSWORD); // Init Connection without \"guest space ID\" Connection kintoneOnDemoDomain = new Connection(\"sample.domain.dot\", kintoneAuthWithPassword); // Init Record Module Record kintoneRecordManager = new Record(kintoneOnDemoDomain); // execute UPDATE RECORDS API Integer appID = 1; HashMap String, FieldValue record1 = new HashMap String, FieldValue (); HashMap String, FieldValue record2 = new HashMap String, FieldValue (); FieldValue fv1 = new FieldValue(); fv1.setType(FieldType.SINGLE_LINE_TEXT); fv1.setValue(\"test_updateRecords1\"); FieldValue fv2 = new FieldValue(); fv2.setType(FieldType.SINGLE_LINE_TEXT); fv2.setValue(\"test_updateRecords2\"); record1.put(\"FieldCode1\", fv1); record2.put(\"FieldCode1\", fv2); ArrayList RecordUpdateItem records = new ArrayList RecordUpdateItem (); records.add(new RecordUpdateItem(1, null, null, record1)); records.add(new RecordUpdateItem(2, null, null, record2)); UpdateRecordsResponse response = kintoneRecordManager.updateRecords(appID, records); deleteRecords(app, ids) Deletes multiple records in an app. Parameter Name Type Required Description app Integer yes The kintone app ID ids ArrayList Integer> yes The list ids of record will be delete. Return (none) Sample code Delete multi record Source code String USERNAME = \"YOUR_USERNAME\"; String PASSWORD = \"YOUR_PASSWORD\"; // Init authenticationAuth Auth kintoneAuthWithPassword = new Auth(); kintoneAuthWithPassword.setPasswordAuth(USERNAME, PASSWORD); // Init Connection without \"guest space ID\" Connection kintoneOnDemoDomain = new Connection(\"sample.domain.dot\", kintoneAuthWithPassword); // Init Record Module Record kintoneRecordManager = new Record(kintoneOnDemoDomain); // execute DELETE RECORDS API Integer appID = 1; ArrayList Integer ids = new ArrayList Integer (); ids.add(1); ids.add(2); kintoneRecordManager.deleteRecords(appID, ids); deleteRecordsWithRevision(app, idsWithRevision) Deletes multiple records in an app with revision. Parameter Name Type Required Description app Integer yes The kintone app ID idsWithRevision HashTable Integer, Integer> yes ( key : The Id of record , value : The Revision of record. ) Return (none) Sample code Delete record with revision Source code String USERNAME = \"YOUR_USERNAME\"; String PASSWORD = \"YOUR_PASSWORD\"; // Init authenticationAuth Auth kintoneAuthWithPassword = new Auth(); kintoneAuthWithPassword.setPasswordAuth(USERNAME, PASSWORD); // Init Connection without \"guest space ID\" Connection kintoneOnDemoDomain = new Connection(\"sample.domain.dot\", kintoneAuthWithPassword); // Init Record Module Record kintoneRecordManager = new Record(kintoneOnDemoDomain); // execute DELETE RECORDS API Integer appID = 1; HashMap Integer, Integer idsWithRevision = new HashMap Integer, Integer (); idsWithRevision.put(1, 1); idsWithRevision.put(2, null); idsWithRevision.put(3, -1); kintoneRecordManager.deleteRecordsWithRevision(appID, idsWithRevision); updateRecordAssignees(app, id, assignees, revision) Update assignees of a record. Parameter Name Type Required Description app Integer yes The kintone app ID id Integer yes The record ID of kintone app assignees ArrayList String> yes The user code(s) of the assignee(s) revision Integer (option) The revision number of record Return UpdateRecordResponse Sample code update record Assignees Source code String USERNAME = \"YOUR_USERNAME\"; String PASSWORD = \"YOUR_PASSWORD\"; // Init authenticationAuth Auth kintoneAuthWithPassword = new Auth(); kintoneAuthWithPassword.setPasswordAuth(USERNAME, PASSWORD); // Init Connection without \"guest space ID\" Connection kintoneOnDemoDomain = new Connection(\"sample.domain.dot\", kintoneAuthWithPassword); // Init Record Module Record kintoneRecordManager = new Record(kintoneOnDemoDomain); // execute UPDATE RECORD API Integer appID = 1; Integer recordID =1; ArrayList String assignees = new ArrayList String (); assignees.add(\"sample_user\"); Integer revision = 1; UpdateRecordResponse response = kintoneRecordManager.updateRecordAssignees(appID, recordID, assignees, revision); updateRecordStatus(app, id, action, assignee, revision) Updates the Status of a record of an app. Parameter Name Type Required Description app Integer yes The kintone app ID. id Integer yes The record ID on kintone app. action String yes The Action name will be run. assignee String (Conditionally required) The next Assignee. Specify the Assignee's log in name. Required, if the \"Assignee List\" of the current status is set to \"User chooses one assignee from the list to take action\", and a selectable assignee exists. revision Integer (optional) The revision of record Return UpdateRecordResponse Sample code Update record status Source code String USERNAME = \"YOUR_USERNAME\"; String PASSWORD = \"YOUR_PASSWORD\"; // Init authenticationAuth Auth kintoneAuthWithPassword = new Auth(); kintoneAuthWithPassword.setPasswordAuth(USERNAME, PASSWORD); // Init Connection without \"guest space ID\" Connection kintoneOnDemoDomain = new Connection(\"sample.domain.dot\", kintoneAuthWithPassword); // Init Record Module Record kintoneRecordManager = new Record(kintoneOnDemoDomain); // execute UPDATE RECORD API Integer appID = 1; Integer recordID =1; String assignee = \"sample_user\"; String action = \"\u51e6\u7406\u958b\u59cb\"; Integer revision = 1; UpdateRecordResponse response = kintoneRecordManager.updateRecordStatus(appID, recordID, action, assignee, revision); updateRecordsStatus(app, records) Updates the Status of multiple records of an app. Parameter Name Type Required Description app Integer yes The kintone app ID records ArrayList RecordUpdateStatusItem > yes The recod status data. See belowsample codee or reference at the end of this page to know format. Return UpdateRecordsResponse Sample code Update multi record status Source code String USERNAME = \"YOUR_USERNAME\"; String PASSWORD = \"YOUR_PASSWORD\"; // Init authenticationAuth Auth kintoneAuthWithPassword = new Auth(); kintoneAuthWithPassword.setPasswordAuth(USERNAME, PASSWORD); // Init Connection without \"guest space ID\" Connection kintoneOnDemoDomain = new Connection(\"sample.domain.dot\", kintoneAuthWithPassword); // Init Record Module Record kintoneRecordManager = new Record(kintoneOnDemoDomain); // execute UPDATE RECORDS API Integer appID = 1; ArrayList RecordUpdateStatusItem rusi = new ArrayList RecordUpdateStatusItem (); String action = \"\u51e6\u7406\u958b\u59cb\"; String assignee = \"sample_user1\"; Integer recordID1 =1; Integer recordID2 =2; Integer recordID3 =3; Integer revision1 = 1; Integer revision2 = null; Integer revision3 = -1; rusi.add(new RecordUpdateStatusItem(action, assignee, recordID1, revision1)); rusi.add(new RecordUpdateStatusItem(action, assignee, recordID2, revision2)); rusi.add(new RecordUpdateStatusItem(action, assignee, recordID3, revision3)); UpdateRecordsResponse response = kintoneRecordManager.updateRecordsStatus(appID, rusi); getComments(app, record, order, offset, limit) Parameter Name Type Required Description app Integer yes The kintone app ID record Integer yes The kintone app ID order String (optional) The sort order of the Comment ID. Please select asc or desc offset Integer (optional) The number of first comments will be ignored. limit Integer (optional) The number of records to retrieve. Return GetCommentsResponse Sample code Get comments Source code String USERNAME = \"YOUR_USERNAME\"; String PASSWORD = \"YOUR_PASSWORD\"; // Init authenticationAuth Auth kintoneAuthWithPassword = new Auth(); kintoneAuthWithPassword.setPasswordAuth(USERNAME, PASSWORD); // Init Connection without \"guest space ID\" Connection kintoneOnDemoDomain = new Connection(\"sample.domain.dot\", kintoneAuthWithPassword); // Init Record Module Record kintoneRecordManager = new Record(kintoneOnDemoDomain); // execute GET RECORD_COMMENTS API Integer appID = 1; Integer recordID = 1; String order = \"asc\"; Integer offsset = 1; Integer limit = 2; GetCommentsResponse response = kintoneRecordManager.getComments(appID, recordID, order, offsset, limit); addComment(app, record, comment) Parameter Name Type Required Description app Integer yes The kintone app ID record Integer yes The kintone app ID comment CommentContent yes About the format, please look the sample below or reference at the end of this page. Return AddCommentResponse Sample code Add comment Source code String USERNAME = \"YOUR_USERNAME\"; String PASSWORD = \"YOUR_PASSWORD\"; // Init authenticationAuth Auth kintoneAuthWithPassword = new Auth(); kintoneAuthWithPassword.setPasswordAuth(USERNAME, PASSWORD); // Init Connection without \"guest space ID\" Connection kintoneOnDemoDomain = new Connection(\"sample.domain.dot\", kintoneAuthWithPassword); // Init Record Module Record kintoneRecordManager = new Record(kintoneOnDemoDomain); // execute ADD RECORD_COMMENT API Integer app = 1; Integer record = 1; CommentContent comment = new CommentContent(); ArrayList CommentMention mentionList = new ArrayList CommentMention (); CommentMention mention = new CommentMention(); mention.setCode(\"sample_user\"); mention.setType(\"USER\"); mentionList.add(mention); comment.setText(\"test comment\"); comment.setMentions(mentionList); AddCommentResponse response = kintoneRecordManager.addComment(app, record, comment); deleteComment(app, record, comment) Parameter Name Type Required Description app Integer yes The kintone app ID record Integer yes The record ID on kintone app comment Integer yes The comment ID on kintone record Return (none) Sample code Delete comment Source code String USERNAME = \"YOUR_USERNAME\"; String PASSWORD = \"YOUR_PASSWORD\"; // Init authenticationAuth Auth kintoneAuthWithPassword = new Auth(); kintoneAuthWithPassword.setPasswordAuth(USERNAME, PASSWORD); // Init Connection without \"guest space ID\" Connection kintoneOnDemoDomain = new Connection(\"sample.domain.dot\", kintoneAuthWithPassword); // Init Record Module Record kintoneRecordManager = new Record(kintoneOnDemoDomain); // execute DELETE RECORD_COMMENT API Integer app = 1; Integer record = 1; Integer comment = 1; kintoneRecordManager.deleteComment(app, record, comment); getAllRecordsByQuery(app, query, fields, totalCount) Parameter Name Type Required Description app Integer yes The kintone app ID query String (optional) The query string that will specify what records will be responded. fields ArrayList String (optional) List of field codes you want in the response. totalCount Boolean (optional) If \"true\", the request will retrieve total count of records match with query conditions. Return GetRecordsResponse Sample code Get all records by query Source code Integer appID = {YOUR_APP_ID}; String query = {YOUR_QUERY}; ArrayList String fields = new ArrayList String (); GetRecordsResponse getAllRecords = kintoneRecordManager.getAllRecordsByQuery(appID, query, fields); deleteAllRecordsByQuery(Integer app, String query) Delete all records by indicating query. Can delete over 2000 records, but can't do rollback. Parameter Name Type Required Description app Integer yes The kintone app ID query String (optional) The query string that will specify what records will be responded. If nothing is specified, fields will be returned from all accessible records. The query detail can't indicate limit and offset . Return (none) Sample code Delete all records by query Source code Integer appID = 114; String query = \"$id >=\" + 1 + \"and $id < =\" + 10 + \"order by $id asc\"; try { // Init Record Module Record kintoneRecord = new Record(kintoneConnection); BulkRequestResponse bulkRequestResponse = kintoneRecord.deleteAllRecordsByQuery(appID, query); } catch (BulksException e) { System.out.println(e.getResults()); // Ex: If User delete 6000 records: // Case 1: If there error occur in record 0 // Err response: // [KintoneAPIException] // Case 2: the error occur in record 4000 // err response // [ // BulkRequestResponse, // BulkRequestResponse, // BulkRequestResponse, // BulkRequestResponse, // BulkRequestResponse, // BulkRequestResponse, // BulkRequestResponse, // BulkRequestResponse, // BulkRequestResponse, // BulkRequestResponse, // BulkRequestResponse, // BulkRequestResponse, // BulkRequestResponse, // BulkRequestResponse, // BulkRequestResponse, // BulkRequestResponse, // KintoneAPIException // ] } updateAllRecords(Integer app, ArrayList RecordUpdateItem> records) Update all records to the kintone app Parameter Name Type Required Description app Integer yes The kintone app ID records Array RecordUpdateItem yes The records data which will update to kintone app Return (none) Sample code update all records Source code Integer appID = 114; HashMap String, FieldValue record = new HashMap(); FieldValue fv = new FieldValue(); fv.setType(FieldType.SINGLE_LINE_TEXT); fv.setValue(\"test_updateRecords3x\"); record.put(\"\u6587\u5b57\u5217__1\u884c\", fv); ArrayList RecordUpdateItem records = new ArrayList RecordUpdateItem (); records.add(new RecordUpdateItem(58178, null, null, record)); try { BulkRequestResponse bulkRequestResponse = this.passwordAuthRecordManagerment.updateAllRecords(appID, records); UpdateRecordsResponse updateRecordsResponse = (UpdateRecordsResponse) bulkRequestResponse.getResults().get(0); System.out.println(\"record ID: \" + updateRecordsResponse.getRecords().get(0).getID()); System.out.println(\"revision: \" + updateRecordsResponse.getRecords().get(0).getRevision()); /* output: record ID: 58178 // record ID revision: 5 // revision */ } catch (BulksException e) { System.out.println(e.getResults()); // Ex: If User update 6000 records: // Case 1: If there error occur in record 0 // Err response: // [KintoneAPIException] // Case 2: the error occur in record 4000 // err response // [ // UpdateRecordsResponse, // UpdateRecordsResponse, // UpdateRecordsResponse, // UpdateRecordsResponse, // UpdateRecordsResponse, // UpdateRecordsResponse, // UpdateRecordsResponse, // UpdateRecordsResponse, // UpdateRecordsResponse, // UpdateRecordsResponse, // UpdateRecordsResponse, // UpdateRecordsResponse, // UpdateRecordsResponse, // UpdateRecordsResponse, // UpdateRecordsResponse, // UpdateRecordsResponse, // UpdateRecordsResponse, // UpdateRecordsResponse, // UpdateRecordsResponse, // UpdateRecordsResponse, // KintoneAPIException // ] } addAllRecords(Integer app, ArrayList HashMap String, FieldValue >> records) Add all records to the kintone app Parameter Name Type Required Description app Integer yes The kintone app ID records Array HashTable String, FieldValue yes The records data which will add to kintone app Return (none) Sample code update all records Source code Integer appID = 114; ArrayList HashMap String, FieldValue records = new ArrayList HashMap String, FieldValue (); HashMap String, FieldValue record = new HashMap String, FieldValue (); FieldValue fv = new FieldValue(); fv.setType(FieldType.SINGLE_LINE_TEXT); fv.setValue(\"test_updateRecords3x\"); record.put(\"\u6587\u5b57\u5217__1\u884c\", fv); records.add(record); try { BulkRequestResponse bulkRequestResponse = this.passwordAuthRecordManagerment.addAllRecords(appID, records); AddRecordsResponse addRecordsResponse = (AddRecordsResponse) bulkRequestResponse.getResults().get(0); System.out.println(\"record ID: \" + addRecordsResponse.getIDs().get(0)); System.out.println(\"revision: \" + addRecordsResponse.getRevisions().get(0)); /* output: record ID: 58179 // record ID revision: 1 // revision */ } catch (BulksException e) { System.out.println(e.getResults()); // Ex: User update 6000 records: // Case 1: If there error occur in record 0 // err response:[KintoneAPIException] // Case 2: the error occur in record 4000 // err response: // [ // AddRecordsResponse, // AddRecordsResponse, // AddRecordsResponse, // AddRecordsResponse, // AddRecordsResponse, // AddRecordsResponse, // AddRecordsResponse, // AddRecordsResponse, // AddRecordsResponse, // AddRecordsResponse, // AddRecordsResponse, // AddRecordsResponse, // AddRecordsResponse, // AddRecordsResponse, // AddRecordsResponse, // AddRecordsResponse, // AddRecordsResponse, // AddRecordsResponse, // AddRecordsResponse, // AddRecordsResponse, // KintoneAPIException // ] } Reference Get Record on developer network Add Record on developer network Update Record on developer network Delete Record on developer network Get Comments on developer network Add Comment on developer network Delete Comment on developer network Update Record Status on developer network Update Record Assignees on developer network","title":"Record"},{"location":"reference/record/#record","text":"Provide manipulate functions on records: get, update, delete, update the record status assignees in the kintone app","title":"Record"},{"location":"reference/record/#constructor","text":"Parameter Name Type Required Description connection Connection yes The connection module of this SDK. Sample code Init record module Source code String USERNAME = \"YOUR_USERNAME\"; String PASSWORD = \"YOUR_PASSWORD\"; // Init authenticationAuth Auth kintoneAuthWithPassword = new Auth(); kintoneAuthWithPassword.setPasswordAuth(USERNAME, PASSWORD); // Init Connection without \"guest space ID\" Connection kintoneOnDemoDomain = new Connection(\"sample.domain.dot\", kintoneAuthWithPassword); // Init Record Module Record kintoneRecordManager = new Record(kintoneOnDemoDomain);","title":"Constructor"},{"location":"reference/record/#methods","text":"","title":"Methods"},{"location":"reference/record/#getrecordapp-id","text":"Retrieves details of 1 record from an app. Parameter Name Type Required Description app Integer yes The kintone app ID id Integer yes The record ID in kintone app Return GetRecordResponse Sample code Get record Source code String USERNAME = \"YOUR_USERNAME\"; String PASSWORD = \"YOUR_PASSWORD\"; // Init authenticationAuth Auth kintoneAuthWithPassword = new Auth(); kintoneAuthWithPassword.setPasswordAuth(USERNAME, PASSWORD); // Init Connection without \"guest space ID\" Connection kintoneOnDemoDomain = new Connection(\"sample.domain.dot\", kintoneAuthWithPassword); // Init Record Module Record kintoneRecordManager = new Record(kintoneOnDemoDomain); // execute GET RECORD API Integer appID = 1; Integer recordID = 1; GetRecordResponse response = kintoneRecordManager.getRecord(appID, recordID);","title":"getRecord(app, id)"},{"location":"reference/record/#getrecordsapp-query-fields-totalcount","text":"Retrieves details of multiple records from an app using a query string. Parameter Name Type Required Description app Integer yes The kintone app ID query String (optional) The query string that will specify what records will be responded. fields ArrayList String> (optional) List of field codes you want in the response. totalCount Boolean (optional) If \"true\", the request will retrieve total count of records match with query conditions. Return GetRecordsResponse Sample code Get records Source code String USERNAME = \"YOUR_USERNAME\"; String PASSWORD = \"YOUR_PASSWORD\"; // Init authenticationAuth Auth kintoneAuthWithPassword = new Auth(); kintoneAuthWithPassword.setPasswordAuth(USERNAME, PASSWORD); // Init Connection without \"guest space ID\" Connection kintoneOnDemoDomain = new Connection(\"sample.domain.dot\", kintoneAuthWithPassword); // Init Record Module Record kintoneRecordManager = new Record(kintoneOnDemoDomain); // execute GET RECORDS API Integer appID = 1; String query = \"$id >=\" + 1 + \"and $id < =\" + 10 + \"order by $id asc\"; GetRecordsResponse response = kintoneRecordManager.getRecords(appID, query, null, true);","title":"getRecords(app, query, fields, totalCount)"},{"location":"reference/record/#getallrecordsbycursorinteger-app-string-query-arraystring62-fields","text":"Retrieves details of all records from an app using a query string. Parameter Name Type Required Description app Integer yes The kintone app ID query String (optional) The query string that will specify what records will be responded. fields ArrayList String> (optional) List of field codes you want in the response. Return GetRecordsResponse Sample code Get all records by cursor Source code String USERNAME = \"YOUR_USERNAME\"; String PASSWORD = \"YOUR_PASSWORD\"; // Init authenticationAuth Auth kintoneAuthWithPassword = new Auth(); kintoneAuthWithPassword.setPasswordAuth(USERNAME, PASSWORD); // Init Connection without \"guest space ID\" Connection kintoneOnDemoDomain = new Connection(\"sample.domain.dot\", kintoneAuthWithPassword); // Init Record Module Record kintoneRecordManager = new Record(kintoneOnDemoDomain); // execute GET RECORDS API Integer appID = 1; String query = \"$id >=\" + 1 + \"and $id < =\" + 10 + \"order by $id asc\"; GetRecordsResponse response = kintoneRecordManager.getAllRecordsByCursor(appID, query, null);","title":"getAllRecordsByCursor(Integer app, String query, Array&lt;String> fields)"},{"location":"reference/record/#addrecordapp-record","text":"Add one record to an app. Parameter Name Type Required Description app Integer yes The kintone app ID record HashMap String, FieldValue > (optional) The record data to be add to kintone app. About the format, please look the sample below or reference at the end of this page Return AddRecordResponse Sample code Add record Source code String USERNAME = \"YOUR_USERNAME\"; String PASSWORD = \"YOUR_PASSWORD\"; // Init authenticationAuth Auth kintoneAuthWithPassword = new Auth(); kintoneAuthWithPassword.setPasswordAuth(USERNAME, PASSWORD); // Init Connection without \"guest space ID\" Connection kintoneOnDemoDomain = new Connection(\"sample.domain.dot\", kintoneAuthWithPassword); // Init Record Module Record kintoneRecordManager = new Record(kintoneOnDemoDomain); // execute ADD RECORD API Integer appID = 1; HashMap String, FieldValue record = new HashMap String, FieldValue (); FieldValue fv = new FieldValue(); fv.setType(FieldType.SINGLE_LINE_TEXT); fv.setValue(\"sample_AddRecord\"); record.put(\"FieldCode1\", fv); AddRecordResponse response = kintoneRecordManager.addRecord(appID, record);","title":"addRecord(app, record)"},{"location":"reference/record/#addrecordsapp-records","text":"Add multiple records to an app. Parameter Name Type Required Description app Integer yes The kintone app ID records ArrayList HashMap String, FieldValue >> yes List of records data to be add to kintone app. About the format, please look the sample below or reference at the end of this page. Return AddRecordsResponse Sample code Add multi records Source code String USERNAME = \"YOUR_USERNAME\"; String PASSWORD = \"YOUR_PASSWORD\"; // Init authenticationAuth Auth kintoneAuthWithPassword = new Auth(); kintoneAuthWithPassword.setPasswordAuth(USERNAME, PASSWORD); // Init Connection without \"guest space ID\" Connection kintoneOnDemoDomain = new Connection(\"sample.domain.dot\", kintoneAuthWithPassword); // Init Record Module Record kintoneRecordManager = new Record(kintoneOnDemoDomain); // execute ADD RECORDS API Integer appID = 1; ArrayList HashMap String, FieldValue > records = new ArrayList HashMap String, FieldValue >(); HashMap String, FieldValue record1 = new HashMap String, FieldValue (); HashMap String, FieldValue record2 = new HashMap String, FieldValue (); FieldValue fv = new FieldValue(); fv.setType(FieldType.SINGLE_LINE_TEXT); fv.setValue(\"sample_AddRecords1\"); FieldValue fv2 = new FieldValue(); fv2.setType(FieldType.SINGLE_LINE_TEXT); fv2.setValue(\"sample_AddRecords2\"); record1.put(\"FieldCode1\", fv); record2.put(\"FieldCode1\", fv2); records.add(record1); records.add(record2); AddRecordsResponse response = kintoneRecordManager.addRecords(appID, records);","title":"addRecords(app, records)"},{"location":"reference/record/#updaterecordbyidapp-id-record-revision","text":"Updates details of 1 record in an app by specifying its record number. Parameter Name Type Required Description app Integer yes The kintone app ID id Integer yes The record ID on kintone app record HashMap String, FieldValue > yes The record data to be update in kintone app. About the format, please look the sample below or reference at the end of this page. revision Integer (optional) The revision number of record Return UpdateRecordResponse Sample code Update record by ID Source code String USERNAME = \"YOUR_USERNAME\"; String PASSWORD = \"YOUR_PASSWORD\"; // Init authenticationAuth Auth kintoneAuthWithPassword = new Auth(); kintoneAuthWithPassword.setPasswordAuth(USERNAME, PASSWORD); // Init Connection without \"guest space ID\" Connection kintoneOnDemoDomain = new Connection(\"sample.domain.dot\", kintoneAuthWithPassword); // Init Record Module Record kintoneRecordManager = new Record(kintoneOnDemoDomain); // execute UPDATE RECORD API Integer appID = 1; Integer recordID = 1; Integer revision = 1; HashMap String, FieldValue record = new HashMap String, FieldValue (); FieldValue fv = new FieldValue(); fv.setType(FieldType.SINGLE_LINE_TEXT); fv.setValue(\"sample_updateRecordById\"); record.put(\"FieldCode1\", fv); UpdateRecordResponse response = kintoneRecordManager.updateRecordByID(appID, recordID, record, revision);","title":"updateRecordByID(app, id, record, revision)"},{"location":"reference/record/#updaterecordbyupdatekeyapp-updatekey-record-revision","text":"Updates details of 1 record in an app by unique key. Parameter Name Type Required Description app Integer yes The kintone app ID updateKey RecordUpdateKey yes The unique key of the record to be updated. About the format, please look the sample below or reference at the end of this page. record HashMap String, FieldValue > yes The record data will be added to kintone app. About the format, please look the sample below or reference at the end of this page. revision Integer (optional) The revision number of record Return UpdateRecordResponse Sample code Update record by UpdateKey Source code String USERNAME = \"YOUR_USERNAME\"; String PASSWORD = \"YOUR_PASSWORD\"; // Init authenticationAuth Auth kintoneAuthWithPassword = new Auth(); kintoneAuthWithPassword.setPasswordAuth(USERNAME, PASSWORD); // Init Connection without \"guest space ID\" Connection kintoneOnDemoDomain = new Connection(\"sample.domain.dot\", kintoneAuthWithPassword); // Init Record Module Record kintoneRecordManager = new Record(kintoneOnDemoDomain); // execute UPDATE RECORD API Integer appID = 1; HashMap String, FieldValue record = new HashMap String, FieldValue (); RecordUpdateKey uKey = new RecordUpdateKey(\"\u6587\u5b57\u5217__1\u884c__0\", \"unique_value1\"); Integer revision = 1; FieldValue fv = new FieldValue(); fv.setType(FieldType.SINGLE_LINE_TEXT); fv.setValue(\"sample_updateRecordByUpdateKey\"); record.put(\"FieldCode1\", fv); UpdateRecordResponse response = kintoneRecordManager.updateRecordByUpdateKey(appID, uKey, record, revision);","title":"updateRecordByUpdateKey(app, updateKey, record, revision)"},{"location":"reference/record/#updaterecordsapp-records","text":"Updates details of multiple records in an app, by specifying their record number, or a different unique key. Parameter Name Type Required Description app Integer yes The kintone app ID records ArrayList RecordUpdateItem > yes The record data will be added to kintone app. About the format, please look the sample below or reference at the end of this page. Return UpdateRecordsResponse Sample code Update multi records Source code String USERNAME = \"YOUR_USERNAME\"; String PASSWORD = \"YOUR_PASSWORD\"; // Init authenticationAuth Auth kintoneAuthWithPassword = new Auth(); kintoneAuthWithPassword.setPasswordAuth(USERNAME, PASSWORD); // Init Connection without \"guest space ID\" Connection kintoneOnDemoDomain = new Connection(\"sample.domain.dot\", kintoneAuthWithPassword); // Init Record Module Record kintoneRecordManager = new Record(kintoneOnDemoDomain); // execute UPDATE RECORDS API Integer appID = 1; HashMap String, FieldValue record1 = new HashMap String, FieldValue (); HashMap String, FieldValue record2 = new HashMap String, FieldValue (); FieldValue fv1 = new FieldValue(); fv1.setType(FieldType.SINGLE_LINE_TEXT); fv1.setValue(\"test_updateRecords1\"); FieldValue fv2 = new FieldValue(); fv2.setType(FieldType.SINGLE_LINE_TEXT); fv2.setValue(\"test_updateRecords2\"); record1.put(\"FieldCode1\", fv1); record2.put(\"FieldCode1\", fv2); ArrayList RecordUpdateItem records = new ArrayList RecordUpdateItem (); records.add(new RecordUpdateItem(1, null, null, record1)); records.add(new RecordUpdateItem(2, null, null, record2)); UpdateRecordsResponse response = kintoneRecordManager.updateRecords(appID, records);","title":"updateRecords(app, records)"},{"location":"reference/record/#deleterecordsapp-ids","text":"Deletes multiple records in an app. Parameter Name Type Required Description app Integer yes The kintone app ID ids ArrayList Integer> yes The list ids of record will be delete. Return (none) Sample code Delete multi record Source code String USERNAME = \"YOUR_USERNAME\"; String PASSWORD = \"YOUR_PASSWORD\"; // Init authenticationAuth Auth kintoneAuthWithPassword = new Auth(); kintoneAuthWithPassword.setPasswordAuth(USERNAME, PASSWORD); // Init Connection without \"guest space ID\" Connection kintoneOnDemoDomain = new Connection(\"sample.domain.dot\", kintoneAuthWithPassword); // Init Record Module Record kintoneRecordManager = new Record(kintoneOnDemoDomain); // execute DELETE RECORDS API Integer appID = 1; ArrayList Integer ids = new ArrayList Integer (); ids.add(1); ids.add(2); kintoneRecordManager.deleteRecords(appID, ids);","title":"deleteRecords(app, ids)"},{"location":"reference/record/#deleterecordswithrevisionapp-idswithrevision","text":"Deletes multiple records in an app with revision. Parameter Name Type Required Description app Integer yes The kintone app ID idsWithRevision HashTable Integer, Integer> yes ( key : The Id of record , value : The Revision of record. ) Return (none) Sample code Delete record with revision Source code String USERNAME = \"YOUR_USERNAME\"; String PASSWORD = \"YOUR_PASSWORD\"; // Init authenticationAuth Auth kintoneAuthWithPassword = new Auth(); kintoneAuthWithPassword.setPasswordAuth(USERNAME, PASSWORD); // Init Connection without \"guest space ID\" Connection kintoneOnDemoDomain = new Connection(\"sample.domain.dot\", kintoneAuthWithPassword); // Init Record Module Record kintoneRecordManager = new Record(kintoneOnDemoDomain); // execute DELETE RECORDS API Integer appID = 1; HashMap Integer, Integer idsWithRevision = new HashMap Integer, Integer (); idsWithRevision.put(1, 1); idsWithRevision.put(2, null); idsWithRevision.put(3, -1); kintoneRecordManager.deleteRecordsWithRevision(appID, idsWithRevision);","title":"deleteRecordsWithRevision(app, idsWithRevision)"},{"location":"reference/record/#updaterecordassigneesapp-id-assignees-revision","text":"Update assignees of a record. Parameter Name Type Required Description app Integer yes The kintone app ID id Integer yes The record ID of kintone app assignees ArrayList String> yes The user code(s) of the assignee(s) revision Integer (option) The revision number of record Return UpdateRecordResponse Sample code update record Assignees Source code String USERNAME = \"YOUR_USERNAME\"; String PASSWORD = \"YOUR_PASSWORD\"; // Init authenticationAuth Auth kintoneAuthWithPassword = new Auth(); kintoneAuthWithPassword.setPasswordAuth(USERNAME, PASSWORD); // Init Connection without \"guest space ID\" Connection kintoneOnDemoDomain = new Connection(\"sample.domain.dot\", kintoneAuthWithPassword); // Init Record Module Record kintoneRecordManager = new Record(kintoneOnDemoDomain); // execute UPDATE RECORD API Integer appID = 1; Integer recordID =1; ArrayList String assignees = new ArrayList String (); assignees.add(\"sample_user\"); Integer revision = 1; UpdateRecordResponse response = kintoneRecordManager.updateRecordAssignees(appID, recordID, assignees, revision);","title":"updateRecordAssignees(app, id, assignees, revision)"},{"location":"reference/record/#updaterecordstatusapp-id-action-assignee-revision","text":"Updates the Status of a record of an app. Parameter Name Type Required Description app Integer yes The kintone app ID. id Integer yes The record ID on kintone app. action String yes The Action name will be run. assignee String (Conditionally required) The next Assignee. Specify the Assignee's log in name. Required, if the \"Assignee List\" of the current status is set to \"User chooses one assignee from the list to take action\", and a selectable assignee exists. revision Integer (optional) The revision of record Return UpdateRecordResponse Sample code Update record status Source code String USERNAME = \"YOUR_USERNAME\"; String PASSWORD = \"YOUR_PASSWORD\"; // Init authenticationAuth Auth kintoneAuthWithPassword = new Auth(); kintoneAuthWithPassword.setPasswordAuth(USERNAME, PASSWORD); // Init Connection without \"guest space ID\" Connection kintoneOnDemoDomain = new Connection(\"sample.domain.dot\", kintoneAuthWithPassword); // Init Record Module Record kintoneRecordManager = new Record(kintoneOnDemoDomain); // execute UPDATE RECORD API Integer appID = 1; Integer recordID =1; String assignee = \"sample_user\"; String action = \"\u51e6\u7406\u958b\u59cb\"; Integer revision = 1; UpdateRecordResponse response = kintoneRecordManager.updateRecordStatus(appID, recordID, action, assignee, revision);","title":"updateRecordStatus(app, id, action, assignee, revision)"},{"location":"reference/record/#updaterecordsstatusapp-records","text":"Updates the Status of multiple records of an app. Parameter Name Type Required Description app Integer yes The kintone app ID records ArrayList RecordUpdateStatusItem > yes The recod status data. See belowsample codee or reference at the end of this page to know format. Return UpdateRecordsResponse Sample code Update multi record status Source code String USERNAME = \"YOUR_USERNAME\"; String PASSWORD = \"YOUR_PASSWORD\"; // Init authenticationAuth Auth kintoneAuthWithPassword = new Auth(); kintoneAuthWithPassword.setPasswordAuth(USERNAME, PASSWORD); // Init Connection without \"guest space ID\" Connection kintoneOnDemoDomain = new Connection(\"sample.domain.dot\", kintoneAuthWithPassword); // Init Record Module Record kintoneRecordManager = new Record(kintoneOnDemoDomain); // execute UPDATE RECORDS API Integer appID = 1; ArrayList RecordUpdateStatusItem rusi = new ArrayList RecordUpdateStatusItem (); String action = \"\u51e6\u7406\u958b\u59cb\"; String assignee = \"sample_user1\"; Integer recordID1 =1; Integer recordID2 =2; Integer recordID3 =3; Integer revision1 = 1; Integer revision2 = null; Integer revision3 = -1; rusi.add(new RecordUpdateStatusItem(action, assignee, recordID1, revision1)); rusi.add(new RecordUpdateStatusItem(action, assignee, recordID2, revision2)); rusi.add(new RecordUpdateStatusItem(action, assignee, recordID3, revision3)); UpdateRecordsResponse response = kintoneRecordManager.updateRecordsStatus(appID, rusi);","title":"updateRecordsStatus(app, records)"},{"location":"reference/record/#getcommentsapp-record-order-offset-limit","text":"Parameter Name Type Required Description app Integer yes The kintone app ID record Integer yes The kintone app ID order String (optional) The sort order of the Comment ID. Please select asc or desc offset Integer (optional) The number of first comments will be ignored. limit Integer (optional) The number of records to retrieve. Return GetCommentsResponse Sample code Get comments Source code String USERNAME = \"YOUR_USERNAME\"; String PASSWORD = \"YOUR_PASSWORD\"; // Init authenticationAuth Auth kintoneAuthWithPassword = new Auth(); kintoneAuthWithPassword.setPasswordAuth(USERNAME, PASSWORD); // Init Connection without \"guest space ID\" Connection kintoneOnDemoDomain = new Connection(\"sample.domain.dot\", kintoneAuthWithPassword); // Init Record Module Record kintoneRecordManager = new Record(kintoneOnDemoDomain); // execute GET RECORD_COMMENTS API Integer appID = 1; Integer recordID = 1; String order = \"asc\"; Integer offsset = 1; Integer limit = 2; GetCommentsResponse response = kintoneRecordManager.getComments(appID, recordID, order, offsset, limit);","title":"getComments(app, record, order, offset, limit)"},{"location":"reference/record/#addcommentapp-record-comment","text":"Parameter Name Type Required Description app Integer yes The kintone app ID record Integer yes The kintone app ID comment CommentContent yes About the format, please look the sample below or reference at the end of this page. Return AddCommentResponse Sample code Add comment Source code String USERNAME = \"YOUR_USERNAME\"; String PASSWORD = \"YOUR_PASSWORD\"; // Init authenticationAuth Auth kintoneAuthWithPassword = new Auth(); kintoneAuthWithPassword.setPasswordAuth(USERNAME, PASSWORD); // Init Connection without \"guest space ID\" Connection kintoneOnDemoDomain = new Connection(\"sample.domain.dot\", kintoneAuthWithPassword); // Init Record Module Record kintoneRecordManager = new Record(kintoneOnDemoDomain); // execute ADD RECORD_COMMENT API Integer app = 1; Integer record = 1; CommentContent comment = new CommentContent(); ArrayList CommentMention mentionList = new ArrayList CommentMention (); CommentMention mention = new CommentMention(); mention.setCode(\"sample_user\"); mention.setType(\"USER\"); mentionList.add(mention); comment.setText(\"test comment\"); comment.setMentions(mentionList); AddCommentResponse response = kintoneRecordManager.addComment(app, record, comment);","title":"addComment(app, record, comment)"},{"location":"reference/record/#deletecommentapp-record-comment","text":"Parameter Name Type Required Description app Integer yes The kintone app ID record Integer yes The record ID on kintone app comment Integer yes The comment ID on kintone record Return (none) Sample code Delete comment Source code String USERNAME = \"YOUR_USERNAME\"; String PASSWORD = \"YOUR_PASSWORD\"; // Init authenticationAuth Auth kintoneAuthWithPassword = new Auth(); kintoneAuthWithPassword.setPasswordAuth(USERNAME, PASSWORD); // Init Connection without \"guest space ID\" Connection kintoneOnDemoDomain = new Connection(\"sample.domain.dot\", kintoneAuthWithPassword); // Init Record Module Record kintoneRecordManager = new Record(kintoneOnDemoDomain); // execute DELETE RECORD_COMMENT API Integer app = 1; Integer record = 1; Integer comment = 1; kintoneRecordManager.deleteComment(app, record, comment);","title":"deleteComment(app, record, comment)"},{"location":"reference/record/#getallrecordsbyqueryapp-query-fields-totalcount","text":"Parameter Name Type Required Description app Integer yes The kintone app ID query String (optional) The query string that will specify what records will be responded. fields ArrayList String (optional) List of field codes you want in the response. totalCount Boolean (optional) If \"true\", the request will retrieve total count of records match with query conditions. Return GetRecordsResponse Sample code Get all records by query Source code Integer appID = {YOUR_APP_ID}; String query = {YOUR_QUERY}; ArrayList String fields = new ArrayList String (); GetRecordsResponse getAllRecords = kintoneRecordManager.getAllRecordsByQuery(appID, query, fields);","title":"getAllRecordsByQuery(app, query, fields, totalCount)"},{"location":"reference/record/#deleteallrecordsbyqueryinteger-app-string-query","text":"Delete all records by indicating query. Can delete over 2000 records, but can't do rollback. Parameter Name Type Required Description app Integer yes The kintone app ID query String (optional) The query string that will specify what records will be responded. If nothing is specified, fields will be returned from all accessible records. The query detail can't indicate limit and offset . Return (none) Sample code Delete all records by query Source code Integer appID = 114; String query = \"$id >=\" + 1 + \"and $id < =\" + 10 + \"order by $id asc\"; try { // Init Record Module Record kintoneRecord = new Record(kintoneConnection); BulkRequestResponse bulkRequestResponse = kintoneRecord.deleteAllRecordsByQuery(appID, query); } catch (BulksException e) { System.out.println(e.getResults()); // Ex: If User delete 6000 records: // Case 1: If there error occur in record 0 // Err response: // [KintoneAPIException] // Case 2: the error occur in record 4000 // err response // [ // BulkRequestResponse, // BulkRequestResponse, // BulkRequestResponse, // BulkRequestResponse, // BulkRequestResponse, // BulkRequestResponse, // BulkRequestResponse, // BulkRequestResponse, // BulkRequestResponse, // BulkRequestResponse, // BulkRequestResponse, // BulkRequestResponse, // BulkRequestResponse, // BulkRequestResponse, // BulkRequestResponse, // BulkRequestResponse, // KintoneAPIException // ] }","title":"deleteAllRecordsByQuery(Integer app, String query)"},{"location":"reference/record/#updateallrecordsinteger-app-arraylistrecordupdateitem62-records","text":"Update all records to the kintone app Parameter Name Type Required Description app Integer yes The kintone app ID records Array RecordUpdateItem yes The records data which will update to kintone app Return (none) Sample code update all records Source code Integer appID = 114; HashMap String, FieldValue record = new HashMap(); FieldValue fv = new FieldValue(); fv.setType(FieldType.SINGLE_LINE_TEXT); fv.setValue(\"test_updateRecords3x\"); record.put(\"\u6587\u5b57\u5217__1\u884c\", fv); ArrayList RecordUpdateItem records = new ArrayList RecordUpdateItem (); records.add(new RecordUpdateItem(58178, null, null, record)); try { BulkRequestResponse bulkRequestResponse = this.passwordAuthRecordManagerment.updateAllRecords(appID, records); UpdateRecordsResponse updateRecordsResponse = (UpdateRecordsResponse) bulkRequestResponse.getResults().get(0); System.out.println(\"record ID: \" + updateRecordsResponse.getRecords().get(0).getID()); System.out.println(\"revision: \" + updateRecordsResponse.getRecords().get(0).getRevision()); /* output: record ID: 58178 // record ID revision: 5 // revision */ } catch (BulksException e) { System.out.println(e.getResults()); // Ex: If User update 6000 records: // Case 1: If there error occur in record 0 // Err response: // [KintoneAPIException] // Case 2: the error occur in record 4000 // err response // [ // UpdateRecordsResponse, // UpdateRecordsResponse, // UpdateRecordsResponse, // UpdateRecordsResponse, // UpdateRecordsResponse, // UpdateRecordsResponse, // UpdateRecordsResponse, // UpdateRecordsResponse, // UpdateRecordsResponse, // UpdateRecordsResponse, // UpdateRecordsResponse, // UpdateRecordsResponse, // UpdateRecordsResponse, // UpdateRecordsResponse, // UpdateRecordsResponse, // UpdateRecordsResponse, // UpdateRecordsResponse, // UpdateRecordsResponse, // UpdateRecordsResponse, // UpdateRecordsResponse, // KintoneAPIException // ] }","title":"updateAllRecords(Integer app, ArrayList&lt;RecordUpdateItem> records)"},{"location":"reference/record/#addallrecordsinteger-app-arraylisthashmapstring-fieldvalue6262-records","text":"Add all records to the kintone app Parameter Name Type Required Description app Integer yes The kintone app ID records Array HashTable String, FieldValue yes The records data which will add to kintone app Return (none) Sample code update all records Source code Integer appID = 114; ArrayList HashMap String, FieldValue records = new ArrayList HashMap String, FieldValue (); HashMap String, FieldValue record = new HashMap String, FieldValue (); FieldValue fv = new FieldValue(); fv.setType(FieldType.SINGLE_LINE_TEXT); fv.setValue(\"test_updateRecords3x\"); record.put(\"\u6587\u5b57\u5217__1\u884c\", fv); records.add(record); try { BulkRequestResponse bulkRequestResponse = this.passwordAuthRecordManagerment.addAllRecords(appID, records); AddRecordsResponse addRecordsResponse = (AddRecordsResponse) bulkRequestResponse.getResults().get(0); System.out.println(\"record ID: \" + addRecordsResponse.getIDs().get(0)); System.out.println(\"revision: \" + addRecordsResponse.getRevisions().get(0)); /* output: record ID: 58179 // record ID revision: 1 // revision */ } catch (BulksException e) { System.out.println(e.getResults()); // Ex: User update 6000 records: // Case 1: If there error occur in record 0 // err response:[KintoneAPIException] // Case 2: the error occur in record 4000 // err response: // [ // AddRecordsResponse, // AddRecordsResponse, // AddRecordsResponse, // AddRecordsResponse, // AddRecordsResponse, // AddRecordsResponse, // AddRecordsResponse, // AddRecordsResponse, // AddRecordsResponse, // AddRecordsResponse, // AddRecordsResponse, // AddRecordsResponse, // AddRecordsResponse, // AddRecordsResponse, // AddRecordsResponse, // AddRecordsResponse, // AddRecordsResponse, // AddRecordsResponse, // AddRecordsResponse, // AddRecordsResponse, // KintoneAPIException // ] }","title":"addAllRecords(Integer app, ArrayList&lt;HashMap&lt;String, FieldValue>> records)"},{"location":"reference/record/#reference","text":"Get Record on developer network Add Record on developer network Update Record on developer network Delete Record on developer network Get Comments on developer network Add Comment on developer network Delete Comment on developer network Update Record Status on developer network Update Record Assignees on developer network","title":"Reference"},{"location":"reference/model/app/basic-response/","text":"BasicResponse The basic response Constructor Parameter Name Type Description revision Integer The revision of the app Methods getRevision() The revision of the app. Parameter (none) Return Integer","title":"BasicResponse"},{"location":"reference/model/app/basic-response/#basicresponse","text":"The basic response","title":"BasicResponse"},{"location":"reference/model/app/basic-response/#constructor","text":"","title":"Constructor"},{"location":"reference/model/app/basic-response/#parameter","text":"Name Type Description revision Integer The revision of the app","title":"Parameter"},{"location":"reference/model/app/basic-response/#methods","text":"","title":"Methods"},{"location":"reference/model/app/basic-response/#getrevision","text":"The revision of the app. Parameter (none) Return Integer","title":"getRevision()"},{"location":"reference/model/app/app/app-deploy-status/","text":"AppDeployStatus Get information about the deploy status of an app Constructor Parameter Name Type Description app Integer The appId status Status The status of the deployment of App settings. Methods getApp() Get the appId Parameter (none) Return Integer getStatus() The status of the deployment of App settings. Parameter (none) Return String Enum Status Name Type Value Description PROCESSING String PROCESSING The App settings are being deployed. SUCCESS String SUCCESS The App settings have been deployed. FAIL String FAIL An error occurred, and the deployment of App settings failed. CANCEL String CANCEL The deployment of App settings was canceled, due to the deployment of other App settings failing.","title":"AppDeployStatus"},{"location":"reference/model/app/app/app-deploy-status/#appdeploystatus","text":"Get information about the deploy status of an app","title":"AppDeployStatus"},{"location":"reference/model/app/app/app-deploy-status/#constructor","text":"","title":"Constructor"},{"location":"reference/model/app/app/app-deploy-status/#parameter","text":"Name Type Description app Integer The appId status Status The status of the deployment of App settings.","title":"Parameter"},{"location":"reference/model/app/app/app-deploy-status/#methods","text":"","title":"Methods"},{"location":"reference/model/app/app/app-deploy-status/#getapp","text":"Get the appId Parameter (none) Return Integer","title":"getApp()"},{"location":"reference/model/app/app/app-deploy-status/#getstatus","text":"The status of the deployment of App settings. Parameter (none) Return String","title":"getStatus()"},{"location":"reference/model/app/app/app-deploy-status/#enum","text":"","title":"Enum"},{"location":"reference/model/app/app/app-deploy-status/#status","text":"Name Type Value Description PROCESSING String PROCESSING The App settings are being deployed. SUCCESS String SUCCESS The App settings have been deployed. FAIL String FAIL An error occurred, and the deployment of App settings failed. CANCEL String CANCEL The deployment of App settings was canceled, due to the deployment of other App settings failing.","title":"Status"},{"location":"reference/model/app/app/app-model/","text":"AppModel Gets the basic information about the app. Permissions to view the App is needed. API Tokens cannot be used with this API. Constructor Parameter (none) Methods getAppId() Get the appId Parameter (none) Return Integer getCode() Get the code Parameter (none) Return String getName() Get the name Parameter (none) Return String getDescription() Get the description Parameter (none) Return String getSpaceId() Get the spaceId Parameter (none) Return Integer getThreadId() Get the threadId Parameter (none) Return Integer getCreator() Get the creator Parameter (none) Return Member getModifier() Get the modifier Parameter (none) Return Member getCreatedAt() Get the createdAt Parameter (none) Return Date getModifiedAt() Get the modifiedAt Parameter (none) Return Date Reference Get App Get Apps Get Form fields Get Form Layout","title":"App"},{"location":"reference/model/app/app/app-model/#appmodel","text":"Gets the basic information about the app. Permissions to view the App is needed. API Tokens cannot be used with this API.","title":"AppModel"},{"location":"reference/model/app/app/app-model/#constructor","text":"","title":"Constructor"},{"location":"reference/model/app/app/app-model/#parameter","text":"(none)","title":"Parameter"},{"location":"reference/model/app/app/app-model/#methods","text":"","title":"Methods"},{"location":"reference/model/app/app/app-model/#getappid","text":"Get the appId Parameter (none) Return Integer","title":"getAppId()"},{"location":"reference/model/app/app/app-model/#getcode","text":"Get the code Parameter (none) Return String","title":"getCode()"},{"location":"reference/model/app/app/app-model/#getname","text":"Get the name Parameter (none) Return String","title":"getName()"},{"location":"reference/model/app/app/app-model/#getdescription","text":"Get the description Parameter (none) Return String","title":"getDescription()"},{"location":"reference/model/app/app/app-model/#getspaceid","text":"Get the spaceId Parameter (none) Return Integer","title":"getSpaceId()"},{"location":"reference/model/app/app/app-model/#getthreadid","text":"Get the threadId Parameter (none) Return Integer","title":"getThreadId()"},{"location":"reference/model/app/app/app-model/#getcreator","text":"Get the creator Parameter (none) Return Member","title":"getCreator()"},{"location":"reference/model/app/app/app-model/#getmodifier","text":"Get the modifier Parameter (none) Return Member","title":"getModifier()"},{"location":"reference/model/app/app/app-model/#getcreatedat","text":"Get the createdAt Parameter (none) Return Date","title":"getCreatedAt()"},{"location":"reference/model/app/app/app-model/#getmodifiedat","text":"Get the modifiedAt Parameter (none) Return Date","title":"getModifiedAt()"},{"location":"reference/model/app/app/app-model/#reference","text":"Get App Get Apps Get Form fields Get Form Layout","title":"Reference"},{"location":"reference/model/app/app/get-app-deploy-status-response/","text":"GetAppDeployStatusResponse The response of the app deploy status. Methods getApps() Get information of the deploy statuses of multiple app Parameter (none) Return Array AppDeployStatus >","title":"GetAppDeployStatusResponse"},{"location":"reference/model/app/app/get-app-deploy-status-response/#getappdeploystatusresponse","text":"The response of the app deploy status.","title":"GetAppDeployStatusResponse"},{"location":"reference/model/app/app/get-app-deploy-status-response/#methods","text":"","title":"Methods"},{"location":"reference/model/app/app/get-app-deploy-status-response/#getapps","text":"Get information of the deploy statuses of multiple app Parameter (none) Return Array AppDeployStatus >","title":"getApps()"},{"location":"reference/model/app/app/preview-app/","text":"PreviewApp The preview app. Constructor Parameter Name Type Description app Integer The appId revision The revision of the preview app Methods getApp() Get the appId Parameter (none) Return Integer getRevision() The revision of the preview app. Parameter (none) Return Integer","title":"PreviewApp"},{"location":"reference/model/app/app/preview-app/#previewapp","text":"The preview app.","title":"PreviewApp"},{"location":"reference/model/app/app/preview-app/#constructor","text":"","title":"Constructor"},{"location":"reference/model/app/app/preview-app/#parameter","text":"Name Type Description app Integer The appId revision The revision of the preview app","title":"Parameter"},{"location":"reference/model/app/app/preview-app/#methods","text":"","title":"Methods"},{"location":"reference/model/app/app/preview-app/#getapp","text":"Get the appId Parameter (none) Return Integer","title":"getApp()"},{"location":"reference/model/app/app/preview-app/#getrevision","text":"The revision of the preview app. Parameter (none) Return Integer","title":"getRevision()"},{"location":"reference/model/app/form/form-fields-related_record/","text":"Related Record Get a list of fields and their settings. Permissions to view the App is needed. API Tokens cannot be used with this API. RelatedApp Methods getApp() Get the app Parameter (none) Return String Sample code get App Source code String app = relatedApp.getApp(); getCode() Get the code Parameter (none) Return String Sample code get Code Source code String app = relatedApp.getCode(); ReferenceTable Methods getCondition() Get the condition Parameter (none) Return FieldMapping Sample code get Condition Source code FieldMapping condition = referenceTable.getCondition(); getFilterCond() Get the filterCond Parameter (none) Return String Sample code get FilterCond Source code String filterCond = referenceTable.getFilterCond(); getRelatedApp() Get the relatedApp Parameter (none) Return RelatedApp Sample code get Related App Source code RelatedApp relatedApp = referenceTable.getRelatedApp(); getSize() Get the size Parameter (none) Return Integer Sample code get Size Source code Integer size = referenceTable.getSize(); getDisplayFields() Get the displayFields Parameter (none) Return List String> Sample code get Display Fields Source code ArrayList displayFields = referenceTable.getDisplayFields(); getSort() Get the sort Parameter (none) Return String Sample code get Sort Source code String sort = referenceTable.getSort(); RelatedRecordsField Warning extend the abstract class \" Field \" Methods getLabel() Get the label Parameter (none) Return String Sample code get Label Source code String label = relatedRecordsField.getLabel(); getNoLabel() Get the noLabel Parameter (none) Return Boolean Sample code get NoLabel Source code Boolean noLabel = relatedRecordsField.getNoLabel(); getReferenceTable() Get the referenceTable Parameter (none) Return ReferenceTable Sample code get Reference Table Source code ReferenceTable referenceTable = relatedRecordsField.getReferenceTable(); Reference Get App Get Apps Get Form fields Get Form Layout","title":"Related Record"},{"location":"reference/model/app/form/form-fields-related_record/#related-record","text":"Get a list of fields and their settings. Permissions to view the App is needed. API Tokens cannot be used with this API.","title":"Related Record"},{"location":"reference/model/app/form/form-fields-related_record/#relatedapp","text":"","title":"RelatedApp"},{"location":"reference/model/app/form/form-fields-related_record/#methods","text":"","title":"Methods"},{"location":"reference/model/app/form/form-fields-related_record/#getapp","text":"Get the app Parameter (none) Return String Sample code get App Source code String app = relatedApp.getApp();","title":"getApp()"},{"location":"reference/model/app/form/form-fields-related_record/#getcode","text":"Get the code Parameter (none) Return String Sample code get Code Source code String app = relatedApp.getCode();","title":"getCode()"},{"location":"reference/model/app/form/form-fields-related_record/#referencetable","text":"","title":"ReferenceTable"},{"location":"reference/model/app/form/form-fields-related_record/#methods_1","text":"","title":"Methods"},{"location":"reference/model/app/form/form-fields-related_record/#getcondition","text":"Get the condition Parameter (none) Return FieldMapping Sample code get Condition Source code FieldMapping condition = referenceTable.getCondition();","title":"getCondition()"},{"location":"reference/model/app/form/form-fields-related_record/#getfiltercond","text":"Get the filterCond Parameter (none) Return String Sample code get FilterCond Source code String filterCond = referenceTable.getFilterCond();","title":"getFilterCond()"},{"location":"reference/model/app/form/form-fields-related_record/#getrelatedapp","text":"Get the relatedApp Parameter (none) Return RelatedApp Sample code get Related App Source code RelatedApp relatedApp = referenceTable.getRelatedApp();","title":"getRelatedApp()"},{"location":"reference/model/app/form/form-fields-related_record/#getsize","text":"Get the size Parameter (none) Return Integer Sample code get Size Source code Integer size = referenceTable.getSize();","title":"getSize()"},{"location":"reference/model/app/form/form-fields-related_record/#getdisplayfields","text":"Get the displayFields Parameter (none) Return List String> Sample code get Display Fields Source code ArrayList displayFields = referenceTable.getDisplayFields();","title":"getDisplayFields()"},{"location":"reference/model/app/form/form-fields-related_record/#getsort","text":"Get the sort Parameter (none) Return String Sample code get Sort Source code String sort = referenceTable.getSort();","title":"getSort()"},{"location":"reference/model/app/form/form-fields-related_record/#relatedrecordsfield","text":"Warning extend the abstract class \" Field \"","title":"RelatedRecordsField"},{"location":"reference/model/app/form/form-fields-related_record/#methods_2","text":"","title":"Methods"},{"location":"reference/model/app/form/form-fields-related_record/#getlabel","text":"Get the label Parameter (none) Return String Sample code get Label Source code String label = relatedRecordsField.getLabel();","title":"getLabel()"},{"location":"reference/model/app/form/form-fields-related_record/#getnolabel","text":"Get the noLabel Parameter (none) Return Boolean Sample code get NoLabel Source code Boolean noLabel = relatedRecordsField.getNoLabel();","title":"getNoLabel()"},{"location":"reference/model/app/form/form-fields-related_record/#getreferencetable","text":"Get the referenceTable Parameter (none) Return ReferenceTable Sample code get Reference Table Source code ReferenceTable referenceTable = relatedRecordsField.getReferenceTable();","title":"getReferenceTable()"},{"location":"reference/model/app/form/form-fields-related_record/#reference","text":"Get App Get Apps Get Form fields Get Form Layout","title":"Reference"},{"location":"reference/model/app/form/form-fields-system/","text":"System Get a list of fields and their settings. Permissions to view the App is needed. API Tokens cannot be used with this API. AssigneeField Warning extend the abstract class \" AbstractProcessManagementField \" Methods (none) CategoryField Warning extend the abstract class \" AbstractSystemField \" Methods getEnabled() Get the enabled Parameter (none) Return Boolean Sample code get Enabled Source code Boolean enabled = categoryField.getEnabled(); CreatedTimeField Warning extend the abstract class \" AbstractSystemInfoField \" Methods (none) CreatorField Warning extend the abstract class \" AbstractSystemInfoField \" Methods (none) ModifierField Warning extend the abstract class \" AbstractSystemInfoField \" Methods (none) RecordNumberField Warning extend the abstract class \" AbstractSystemInfoField \" Methods (none) StatusField Warning extend the abstract class \" AbstractProcessManagementField \" Methods (none) UpdatedTimeField Warning extend the abstract class \" AbstractSystemInfoField \" Methods (none) AbstractSystemField Warning extend the abstract class \" Field \" This class is an abstract class. Methods getLabel() Get the label Parameter (none) Return String AbstractProcessManagementField Warning extend the abstract class \" AbstractSystemField \" This class is an abstract class. Methods getEnabled() Get the enabled Parameter (none) Return Boolean AbstractSystemInfoField Warning extend the abstract class \" AbstractSystemField \" This class is an abstract class. Methods getNoLabel() Get the noLabel Parameter (none) Return Boolean Reference Get App Get Apps Get Form fields Get Form Layout","title":"System"},{"location":"reference/model/app/form/form-fields-system/#system","text":"Get a list of fields and their settings. Permissions to view the App is needed. API Tokens cannot be used with this API.","title":"System"},{"location":"reference/model/app/form/form-fields-system/#assigneefield","text":"Warning extend the abstract class \" AbstractProcessManagementField \"","title":"AssigneeField"},{"location":"reference/model/app/form/form-fields-system/#methods","text":"(none)","title":"Methods"},{"location":"reference/model/app/form/form-fields-system/#categoryfield","text":"Warning extend the abstract class \" AbstractSystemField \"","title":"CategoryField"},{"location":"reference/model/app/form/form-fields-system/#methods_1","text":"","title":"Methods"},{"location":"reference/model/app/form/form-fields-system/#getenabled","text":"Get the enabled Parameter (none) Return Boolean Sample code get Enabled Source code Boolean enabled = categoryField.getEnabled();","title":"getEnabled()"},{"location":"reference/model/app/form/form-fields-system/#createdtimefield","text":"Warning extend the abstract class \" AbstractSystemInfoField \"","title":"CreatedTimeField"},{"location":"reference/model/app/form/form-fields-system/#methods_2","text":"(none)","title":"Methods"},{"location":"reference/model/app/form/form-fields-system/#creatorfield","text":"Warning extend the abstract class \" AbstractSystemInfoField \"","title":"CreatorField"},{"location":"reference/model/app/form/form-fields-system/#methods_3","text":"(none)","title":"Methods"},{"location":"reference/model/app/form/form-fields-system/#modifierfield","text":"Warning extend the abstract class \" AbstractSystemInfoField \"","title":"ModifierField"},{"location":"reference/model/app/form/form-fields-system/#methods_4","text":"(none)","title":"Methods"},{"location":"reference/model/app/form/form-fields-system/#recordnumberfield","text":"Warning extend the abstract class \" AbstractSystemInfoField \"","title":"RecordNumberField"},{"location":"reference/model/app/form/form-fields-system/#methods_5","text":"(none)","title":"Methods"},{"location":"reference/model/app/form/form-fields-system/#statusfield","text":"Warning extend the abstract class \" AbstractProcessManagementField \"","title":"StatusField"},{"location":"reference/model/app/form/form-fields-system/#methods_6","text":"(none)","title":"Methods"},{"location":"reference/model/app/form/form-fields-system/#updatedtimefield","text":"Warning extend the abstract class \" AbstractSystemInfoField \"","title":"UpdatedTimeField"},{"location":"reference/model/app/form/form-fields-system/#methods_7","text":"(none)","title":"Methods"},{"location":"reference/model/app/form/form-fields-system/#abstractsystemfield","text":"Warning extend the abstract class \" Field \" This class is an abstract class.","title":"AbstractSystemField"},{"location":"reference/model/app/form/form-fields-system/#methods_8","text":"","title":"Methods"},{"location":"reference/model/app/form/form-fields-system/#getlabel","text":"Get the label Parameter (none) Return String","title":"getLabel()"},{"location":"reference/model/app/form/form-fields-system/#abstractprocessmanagementfield","text":"Warning extend the abstract class \" AbstractSystemField \" This class is an abstract class.","title":"AbstractProcessManagementField"},{"location":"reference/model/app/form/form-fields-system/#methods_9","text":"","title":"Methods"},{"location":"reference/model/app/form/form-fields-system/#getenabled_1","text":"Get the enabled Parameter (none) Return Boolean","title":"getEnabled()"},{"location":"reference/model/app/form/form-fields-system/#abstractsysteminfofield","text":"Warning extend the abstract class \" AbstractSystemField \" This class is an abstract class.","title":"AbstractSystemInfoField"},{"location":"reference/model/app/form/form-fields-system/#methods_10","text":"","title":"Methods"},{"location":"reference/model/app/form/form-fields-system/#getnolabel","text":"Get the noLabel Parameter (none) Return Boolean","title":"getNoLabel()"},{"location":"reference/model/app/form/form-fields-system/#reference","text":"Get App Get Apps Get Form fields Get Form Layout","title":"Reference"},{"location":"reference/model/app/form/field/form-fields/","text":"Form Fields Get a list of fields and their settings. Permissions to view the App is needed. API Tokens cannot be used with this API. FormFields Methods getApp() Get the app Parameter (none) Return Integer Sample code get App Source code Integer app = formfields.getApp(); getRevision() Get the revision Parameter (none) Return Integer Sample code get Revision Source code int revision = formfields.getRevision(); getProperties() Get the properties Parameter (none) Return Map String, Field > Sample code get Properties Source code Map properties = formfields.getProperties(); FieldGroup Warning extend the abstract class \" Field \" Methods getLabel() Get the label Parameter (none) Return String Sample code get Label Source code String label = fieldGroup.getLabel(); getNoLabel() Get the noLabel Parameter (none) Return Boolean Sample code get NoLabel Source code Boolean noLabel = fieldGroup.getNoLabel(); getOpenGroup() Get the openGroup Parameter (none) Return Boolean Sample code get OpenGroup Source code Boolean openGroup = fieldGroup.getOpenGroup(); FieldMapping Methods getField() Get the field Parameter (none) Return String Sample code get Field Source code String field = fieldMapping.getField(); getRelatedFields() Get the relatedFields Parameter (none) Return String Sample code get Related Fields Source code String relatedFields = fieldMapping.getRelatedFields(); SubTableField Warning extend the abstract class \" Field \" Methods getFields() Get the fields Parameter (none) Return Map String, AbstractInputField > Sample code get Fields Source code Map fields = subTableField.getFields(); Field Warning This class is an abstract class. Methods getCode() Get the code Parameter (none) Return String getType() Get the type Parameter (none) Return LayoutType Reference Get App Get Apps Get Form fields Get Form Layout","title":"Form Fields"},{"location":"reference/model/app/form/field/form-fields/#form-fields","text":"Get a list of fields and their settings. Permissions to view the App is needed. API Tokens cannot be used with this API.","title":"Form Fields"},{"location":"reference/model/app/form/field/form-fields/#formfields","text":"","title":"FormFields"},{"location":"reference/model/app/form/field/form-fields/#methods","text":"","title":"Methods"},{"location":"reference/model/app/form/field/form-fields/#getapp","text":"Get the app Parameter (none) Return Integer Sample code get App Source code Integer app = formfields.getApp();","title":"getApp()"},{"location":"reference/model/app/form/field/form-fields/#getrevision","text":"Get the revision Parameter (none) Return Integer Sample code get Revision Source code int revision = formfields.getRevision();","title":"getRevision()"},{"location":"reference/model/app/form/field/form-fields/#getproperties","text":"Get the properties Parameter (none) Return Map String, Field > Sample code get Properties Source code Map properties = formfields.getProperties();","title":"getProperties()"},{"location":"reference/model/app/form/field/form-fields/#fieldgroup","text":"Warning extend the abstract class \" Field \"","title":"FieldGroup"},{"location":"reference/model/app/form/field/form-fields/#methods_1","text":"","title":"Methods"},{"location":"reference/model/app/form/field/form-fields/#getlabel","text":"Get the label Parameter (none) Return String Sample code get Label Source code String label = fieldGroup.getLabel();","title":"getLabel()"},{"location":"reference/model/app/form/field/form-fields/#getnolabel","text":"Get the noLabel Parameter (none) Return Boolean Sample code get NoLabel Source code Boolean noLabel = fieldGroup.getNoLabel();","title":"getNoLabel()"},{"location":"reference/model/app/form/field/form-fields/#getopengroup","text":"Get the openGroup Parameter (none) Return Boolean Sample code get OpenGroup Source code Boolean openGroup = fieldGroup.getOpenGroup();","title":"getOpenGroup()"},{"location":"reference/model/app/form/field/form-fields/#fieldmapping","text":"","title":"FieldMapping"},{"location":"reference/model/app/form/field/form-fields/#methods_2","text":"","title":"Methods"},{"location":"reference/model/app/form/field/form-fields/#getfield","text":"Get the field Parameter (none) Return String Sample code get Field Source code String field = fieldMapping.getField();","title":"getField()"},{"location":"reference/model/app/form/field/form-fields/#getrelatedfields","text":"Get the relatedFields Parameter (none) Return String Sample code get Related Fields Source code String relatedFields = fieldMapping.getRelatedFields();","title":"getRelatedFields()"},{"location":"reference/model/app/form/field/form-fields/#subtablefield","text":"Warning extend the abstract class \" Field \"","title":"SubTableField"},{"location":"reference/model/app/form/field/form-fields/#methods_3","text":"","title":"Methods"},{"location":"reference/model/app/form/field/form-fields/#getfields","text":"Get the fields Parameter (none) Return Map String, AbstractInputField > Sample code get Fields Source code Map fields = subTableField.getFields();","title":"getFields()"},{"location":"reference/model/app/form/field/form-fields/#field","text":"Warning This class is an abstract class.","title":"Field"},{"location":"reference/model/app/form/field/form-fields/#methods_4","text":"","title":"Methods"},{"location":"reference/model/app/form/field/form-fields/#getcode","text":"Get the code Parameter (none) Return String","title":"getCode()"},{"location":"reference/model/app/form/field/form-fields/#gettype","text":"Get the type Parameter (none) Return LayoutType","title":"getType()"},{"location":"reference/model/app/form/field/form-fields/#reference","text":"Get App Get Apps Get Form fields Get Form Layout","title":"Reference"},{"location":"reference/model/app/form/field/input/form-fields-input-lookup/","text":"Lookup Get a list of fields and their settings. Permissions to view the App is needed. API Tokens cannot be used with this API. LookupField Warning extend the abstract class \" AbstractInputField \" Methods getLookup() Get the lookup Parameter (none) Return LookupItem LookupItem Methods getFieldMapping() Get the fieldMapping Parameter (none) Return List FieldMapping > getFilterCond() Get the filterCond Parameter (none) Return String getLookupPickerFields() Get the lookupPickerFields Parameter (none) Return List String> getRelatedApp() Get the relatedApp Parameter (none) Return RelatedApp getRelatedKeyField() Get the relatedKeyField Parameter (none) Return String getSort() Get the sort Parameter (none) Return String Reference Get App Get Apps Get Form fields Get Form Layout","title":"Lookup"},{"location":"reference/model/app/form/field/input/form-fields-input-lookup/#lookup","text":"Get a list of fields and their settings. Permissions to view the App is needed. API Tokens cannot be used with this API.","title":"Lookup"},{"location":"reference/model/app/form/field/input/form-fields-input-lookup/#lookupfield","text":"Warning extend the abstract class \" AbstractInputField \"","title":"LookupField"},{"location":"reference/model/app/form/field/input/form-fields-input-lookup/#methods","text":"","title":"Methods"},{"location":"reference/model/app/form/field/input/form-fields-input-lookup/#getlookup","text":"Get the lookup Parameter (none) Return LookupItem","title":"getLookup()"},{"location":"reference/model/app/form/field/input/form-fields-input-lookup/#lookupitem","text":"","title":"LookupItem"},{"location":"reference/model/app/form/field/input/form-fields-input-lookup/#methods_1","text":"","title":"Methods"},{"location":"reference/model/app/form/field/input/form-fields-input-lookup/#getfieldmapping","text":"Get the fieldMapping Parameter (none) Return List FieldMapping >","title":"getFieldMapping()"},{"location":"reference/model/app/form/field/input/form-fields-input-lookup/#getfiltercond","text":"Get the filterCond Parameter (none) Return String","title":"getFilterCond()"},{"location":"reference/model/app/form/field/input/form-fields-input-lookup/#getlookuppickerfields","text":"Get the lookupPickerFields Parameter (none) Return List String>","title":"getLookupPickerFields()"},{"location":"reference/model/app/form/field/input/form-fields-input-lookup/#getrelatedapp","text":"Get the relatedApp Parameter (none) Return RelatedApp","title":"getRelatedApp()"},{"location":"reference/model/app/form/field/input/form-fields-input-lookup/#getrelatedkeyfield","text":"Get the relatedKeyField Parameter (none) Return String","title":"getRelatedKeyField()"},{"location":"reference/model/app/form/field/input/form-fields-input-lookup/#getsort","text":"Get the sort Parameter (none) Return String","title":"getSort()"},{"location":"reference/model/app/form/field/input/form-fields-input-lookup/#reference","text":"Get App Get Apps Get Form fields Get Form Layout","title":"Reference"},{"location":"reference/model/app/form/field/input/form-fields-input-member/","text":"Member Get a list of fields and their settings. Permissions to view the App is needed. API Tokens cannot be used with this API. DepartmentSelectionField Warning extend the abstract class \" AbstractMemberSelectField \" Methods (none) GroupSelectionField Warning extend the abstract class \" AbstractMemberSelectField \" Methods (none) MemberSelectEntity Methods getCode() Get the code Parameter (none) Return String getType() Get the type Parameter (none) Return MemberSelectEntityType UserSelectionField Warning extend the abstract class \" AbstractMemberSelectField \" Methods (none) AbstractMemberSelectField Warning extend the abstract class \" AbstractInputField \" This class is an abstract class. Methods getDefaultValue() Get the defaultValue Parameter (none) Return List MemberSelectEntity > getEntites() Get the entites Parameter (none) Return List MemberSelectEntity > Reference Get App Get Apps Get Form fields Get Form Layout","title":"Member"},{"location":"reference/model/app/form/field/input/form-fields-input-member/#member","text":"Get a list of fields and their settings. Permissions to view the App is needed. API Tokens cannot be used with this API.","title":"Member"},{"location":"reference/model/app/form/field/input/form-fields-input-member/#departmentselectionfield","text":"Warning extend the abstract class \" AbstractMemberSelectField \"","title":"DepartmentSelectionField"},{"location":"reference/model/app/form/field/input/form-fields-input-member/#methods","text":"(none)","title":"Methods"},{"location":"reference/model/app/form/field/input/form-fields-input-member/#groupselectionfield","text":"Warning extend the abstract class \" AbstractMemberSelectField \"","title":"GroupSelectionField"},{"location":"reference/model/app/form/field/input/form-fields-input-member/#methods_1","text":"(none)","title":"Methods"},{"location":"reference/model/app/form/field/input/form-fields-input-member/#memberselectentity","text":"","title":"MemberSelectEntity"},{"location":"reference/model/app/form/field/input/form-fields-input-member/#methods_2","text":"","title":"Methods"},{"location":"reference/model/app/form/field/input/form-fields-input-member/#getcode","text":"Get the code Parameter (none) Return String","title":"getCode()"},{"location":"reference/model/app/form/field/input/form-fields-input-member/#gettype","text":"Get the type Parameter (none) Return MemberSelectEntityType","title":"getType()"},{"location":"reference/model/app/form/field/input/form-fields-input-member/#userselectionfield","text":"Warning extend the abstract class \" AbstractMemberSelectField \"","title":"UserSelectionField"},{"location":"reference/model/app/form/field/input/form-fields-input-member/#methods_3","text":"(none)","title":"Methods"},{"location":"reference/model/app/form/field/input/form-fields-input-member/#abstractmemberselectfield","text":"Warning extend the abstract class \" AbstractInputField \" This class is an abstract class.","title":"AbstractMemberSelectField"},{"location":"reference/model/app/form/field/input/form-fields-input-member/#methods_4","text":"","title":"Methods"},{"location":"reference/model/app/form/field/input/form-fields-input-member/#getdefaultvalue","text":"Get the defaultValue Parameter (none) Return List MemberSelectEntity >","title":"getDefaultValue()"},{"location":"reference/model/app/form/field/input/form-fields-input-member/#getentites","text":"Get the entites Parameter (none) Return List MemberSelectEntity >","title":"getEntites()"},{"location":"reference/model/app/form/field/input/form-fields-input-member/#reference","text":"Get App Get Apps Get Form fields Get Form Layout","title":"Reference"},{"location":"reference/model/app/form/field/input/form-fields-input-selection/","text":"Selection Get a list of fields and their settings. Permissions to view the App is needed. API Tokens cannot be used with this API. CheckboxField Warning extend the abstract class \" AbstractSelectionField \" Methods getAlign() Get the align Parameter (none) Return AlignLayout getDefaultValue() Get the defaultValue Parameter (none) Return List String> DropDownField Warning extend the abstract class \" AbstractSelectionField \" Methods getDefaultValue() Get the defaultValue Parameter (none) Return String MultipleSelectField Warning extend the abstract class \" AbstractSelectionField \" Methods getDefaultValue() Get the defaultValue Parameter (none) Return List String> OptionData Methods getIndex() Get the index Parameter (none) Return Integer getLabel() Get the label Parameter (none) Return String RadioButtonField Warning extend the abstract class \" AbstractSelectionField \" Methods getAlign() Get the align Parameter (none) Return AlignLayout getDefaultValue() Get the defaultValue Parameter (none) Return String AbstractSelectionField Warning extend the abstract class \" AbstractInputField \" This class is an abstract class. Methods getOptions() Get the options Parameter (none) Return Map String, OptionData > Reference Get App Get Apps Get Form fields Get Form Layout","title":"Selection"},{"location":"reference/model/app/form/field/input/form-fields-input-selection/#selection","text":"Get a list of fields and their settings. Permissions to view the App is needed. API Tokens cannot be used with this API.","title":"Selection"},{"location":"reference/model/app/form/field/input/form-fields-input-selection/#checkboxfield","text":"Warning extend the abstract class \" AbstractSelectionField \"","title":"CheckboxField"},{"location":"reference/model/app/form/field/input/form-fields-input-selection/#methods","text":"","title":"Methods"},{"location":"reference/model/app/form/field/input/form-fields-input-selection/#getalign","text":"Get the align Parameter (none) Return AlignLayout","title":"getAlign()"},{"location":"reference/model/app/form/field/input/form-fields-input-selection/#getdefaultvalue","text":"Get the defaultValue Parameter (none) Return List String>","title":"getDefaultValue()"},{"location":"reference/model/app/form/field/input/form-fields-input-selection/#dropdownfield","text":"Warning extend the abstract class \" AbstractSelectionField \"","title":"DropDownField"},{"location":"reference/model/app/form/field/input/form-fields-input-selection/#methods_1","text":"","title":"Methods"},{"location":"reference/model/app/form/field/input/form-fields-input-selection/#getdefaultvalue_1","text":"Get the defaultValue Parameter (none) Return String","title":"getDefaultValue()"},{"location":"reference/model/app/form/field/input/form-fields-input-selection/#multipleselectfield","text":"Warning extend the abstract class \" AbstractSelectionField \"","title":"MultipleSelectField"},{"location":"reference/model/app/form/field/input/form-fields-input-selection/#methods_2","text":"","title":"Methods"},{"location":"reference/model/app/form/field/input/form-fields-input-selection/#getdefaultvalue_2","text":"Get the defaultValue Parameter (none) Return List String>","title":"getDefaultValue()"},{"location":"reference/model/app/form/field/input/form-fields-input-selection/#optiondata","text":"","title":"OptionData"},{"location":"reference/model/app/form/field/input/form-fields-input-selection/#methods_3","text":"","title":"Methods"},{"location":"reference/model/app/form/field/input/form-fields-input-selection/#getindex","text":"Get the index Parameter (none) Return Integer","title":"getIndex()"},{"location":"reference/model/app/form/field/input/form-fields-input-selection/#getlabel","text":"Get the label Parameter (none) Return String","title":"getLabel()"},{"location":"reference/model/app/form/field/input/form-fields-input-selection/#radiobuttonfield","text":"Warning extend the abstract class \" AbstractSelectionField \"","title":"RadioButtonField"},{"location":"reference/model/app/form/field/input/form-fields-input-selection/#methods_4","text":"","title":"Methods"},{"location":"reference/model/app/form/field/input/form-fields-input-selection/#getalign_1","text":"Get the align Parameter (none) Return AlignLayout","title":"getAlign()"},{"location":"reference/model/app/form/field/input/form-fields-input-selection/#getdefaultvalue_3","text":"Get the defaultValue Parameter (none) Return String","title":"getDefaultValue()"},{"location":"reference/model/app/form/field/input/form-fields-input-selection/#abstractselectionfield","text":"Warning extend the abstract class \" AbstractInputField \" This class is an abstract class.","title":"AbstractSelectionField"},{"location":"reference/model/app/form/field/input/form-fields-input-selection/#methods_5","text":"","title":"Methods"},{"location":"reference/model/app/form/field/input/form-fields-input-selection/#getoptions","text":"Get the options Parameter (none) Return Map String, OptionData >","title":"getOptions()"},{"location":"reference/model/app/form/field/input/form-fields-input-selection/#reference","text":"Get App Get Apps Get Form fields Get Form Layout","title":"Reference"},{"location":"reference/model/app/form/field/input/form-fields-input-time/","text":"Time Get a list of fields and their settings. Permissions to view the App is needed. API Tokens cannot be used with this API. DateField Warning extend the abstract class \" AbstractInputField \" Methods getUnique() Get the unique Parameter (none) Return Boolean getDefaultValue() Get the defaultValue Parameter (none) Return String getDefaultNowValue() Get the defaultNowValue Parameter (none) Return Boolean DateTimeField Warning extend the abstract class \" AbstractInputField \" Methods getUnique() Get the unique Parameter (none) Return Boolean getDefaultValue() Get the defaultValue Parameter (none) Return String getDefaultNowValue() Get the defaultNowValue Parameter (none) Return Boolean TimeField Warning extend the abstract class \" AbstractInputField \" Methods getDefaultValue() Get the defaultValue Parameter (none) Return String getDefaultNowValue() Get the defaultNowValue Parameter (none) Return Boolean Reference Get App Get Apps Get Form fields Get Form Layout","title":"Time"},{"location":"reference/model/app/form/field/input/form-fields-input-time/#time","text":"Get a list of fields and their settings. Permissions to view the App is needed. API Tokens cannot be used with this API.","title":"Time"},{"location":"reference/model/app/form/field/input/form-fields-input-time/#datefield","text":"Warning extend the abstract class \" AbstractInputField \"","title":"DateField"},{"location":"reference/model/app/form/field/input/form-fields-input-time/#methods","text":"","title":"Methods"},{"location":"reference/model/app/form/field/input/form-fields-input-time/#getunique","text":"Get the unique Parameter (none) Return Boolean","title":"getUnique()"},{"location":"reference/model/app/form/field/input/form-fields-input-time/#getdefaultvalue","text":"Get the defaultValue Parameter (none) Return String","title":"getDefaultValue()"},{"location":"reference/model/app/form/field/input/form-fields-input-time/#getdefaultnowvalue","text":"Get the defaultNowValue Parameter (none) Return Boolean","title":"getDefaultNowValue()"},{"location":"reference/model/app/form/field/input/form-fields-input-time/#datetimefield","text":"Warning extend the abstract class \" AbstractInputField \"","title":"DateTimeField"},{"location":"reference/model/app/form/field/input/form-fields-input-time/#methods_1","text":"","title":"Methods"},{"location":"reference/model/app/form/field/input/form-fields-input-time/#getunique_1","text":"Get the unique Parameter (none) Return Boolean","title":"getUnique()"},{"location":"reference/model/app/form/field/input/form-fields-input-time/#getdefaultvalue_1","text":"Get the defaultValue Parameter (none) Return String","title":"getDefaultValue()"},{"location":"reference/model/app/form/field/input/form-fields-input-time/#getdefaultnowvalue_1","text":"Get the defaultNowValue Parameter (none) Return Boolean","title":"getDefaultNowValue()"},{"location":"reference/model/app/form/field/input/form-fields-input-time/#timefield","text":"Warning extend the abstract class \" AbstractInputField \"","title":"TimeField"},{"location":"reference/model/app/form/field/input/form-fields-input-time/#methods_2","text":"","title":"Methods"},{"location":"reference/model/app/form/field/input/form-fields-input-time/#getdefaultvalue_2","text":"Get the defaultValue Parameter (none) Return String","title":"getDefaultValue()"},{"location":"reference/model/app/form/field/input/form-fields-input-time/#getdefaultnowvalue_2","text":"Get the defaultNowValue Parameter (none) Return Boolean","title":"getDefaultNowValue()"},{"location":"reference/model/app/form/field/input/form-fields-input-time/#reference","text":"Get App Get Apps Get Form fields Get Form Layout","title":"Reference"},{"location":"reference/model/app/form/field/input/form-fields-input/","text":"Input Get a list of fields and their settings. Permissions to view the App is needed. API Tokens cannot be used with this API. AttachmentField Warning extend the abstract class \" AbstractInputField \" Methods getThumbnailSize() Get the thumbnailSize Parameter (none) Return Integer CalculatedField Warning extend the abstract class \" AbstractInputField \" Methods getExpression() Get the expression Parameter (none) Return String getHideExpression() Get the hideExpression Parameter (none) Return Boolean getDisplayScale() Get the displayScale Parameter (none) Return Integer getUnit() Get the unit Parameter (none) Return String getUnitPosition() Get the unitPosition Parameter (none) Return UnitPosition getFormat() Get the format Parameter (none) Return NumberFormat LinkField Warning extend the abstract class \" AbstractInputField \" Methods getDefaultValue() Get the defaultValue Parameter (none) Return String getUnique() Get the unique Parameter (none) Return Boolean getMaxLength() Get the maxLength Parameter (none) Return Integer getMinLength() Get the minLength Parameter (none) Return Integer getProtocol() Get the protocol Parameter (none) Return LinkProtocol MultiLineTextField Warning extend the abstract class \" AbstractInputField \" Methods getDefaultValue() Get the defaultValue Parameter (none) Return String NumberField Warning extend the abstract class \" AbstractInputField \" Methods getDisplayScale() Get the displayScale Parameter (none) Return Integer getUnit() Get the unit Parameter (none) Return String getUnitPosition() Get the unitPosition Parameter (none) Return UnitPosition getDigit() Get the digit Parameter (none) Return Boolean getMaxValue() Get the maxValue Parameter (none) Return Integer getMinValue() Get the minValue Parameter (none) Return Integer getDefaultValue() Get the defaultValue Parameter (none) Return String getUnique() Get the unique Parameter (none) Return Boolean RichTextField Warning extend the abstract class \" AbstractInputField \" Methods getDefaultValue() Get the defaultValue Parameter (none) Return String SingleLineTextField Warning extend the abstract class \" AbstractInputField \" Methods getMinLength() Get the minLength Parameter (none) Return Integer getMaxLength() Get the maxLength Parameter (none) Return Integer getExpression() Get the expression Parameter (none) Return String getHideExpression() Get the hideExpression Parameter (none) Return Boolean getDefaultValue() Get the defaultValue Parameter (none) Return String getUnique() Get the unique Parameter (none) Return Boolean AbstractInputField Warning extend the abstract class \" Field \" This class is an abstract class. Methods getLabel() Get the label Parameter (none) Return String getNoLabel() Get the noLabel Parameter (none) Return Boolean getRequired() Get the required Parameter (none) Return Boolean Reference Get App Get Apps Get Form fields Get Form Layout","title":"Input"},{"location":"reference/model/app/form/field/input/form-fields-input/#input","text":"Get a list of fields and their settings. Permissions to view the App is needed. API Tokens cannot be used with this API.","title":"Input"},{"location":"reference/model/app/form/field/input/form-fields-input/#attachmentfield","text":"Warning extend the abstract class \" AbstractInputField \"","title":"AttachmentField"},{"location":"reference/model/app/form/field/input/form-fields-input/#methods","text":"","title":"Methods"},{"location":"reference/model/app/form/field/input/form-fields-input/#getthumbnailsize","text":"Get the thumbnailSize Parameter (none) Return Integer","title":"getThumbnailSize()"},{"location":"reference/model/app/form/field/input/form-fields-input/#calculatedfield","text":"Warning extend the abstract class \" AbstractInputField \"","title":"CalculatedField"},{"location":"reference/model/app/form/field/input/form-fields-input/#methods_1","text":"","title":"Methods"},{"location":"reference/model/app/form/field/input/form-fields-input/#getexpression","text":"Get the expression Parameter (none) Return String","title":"getExpression()"},{"location":"reference/model/app/form/field/input/form-fields-input/#gethideexpression","text":"Get the hideExpression Parameter (none) Return Boolean","title":"getHideExpression()"},{"location":"reference/model/app/form/field/input/form-fields-input/#getdisplayscale","text":"Get the displayScale Parameter (none) Return Integer","title":"getDisplayScale()"},{"location":"reference/model/app/form/field/input/form-fields-input/#getunit","text":"Get the unit Parameter (none) Return String","title":"getUnit()"},{"location":"reference/model/app/form/field/input/form-fields-input/#getunitposition","text":"Get the unitPosition Parameter (none) Return UnitPosition","title":"getUnitPosition()"},{"location":"reference/model/app/form/field/input/form-fields-input/#getformat","text":"Get the format Parameter (none) Return NumberFormat","title":"getFormat()"},{"location":"reference/model/app/form/field/input/form-fields-input/#linkfield","text":"Warning extend the abstract class \" AbstractInputField \"","title":"LinkField"},{"location":"reference/model/app/form/field/input/form-fields-input/#methods_2","text":"","title":"Methods"},{"location":"reference/model/app/form/field/input/form-fields-input/#getdefaultvalue","text":"Get the defaultValue Parameter (none) Return String","title":"getDefaultValue()"},{"location":"reference/model/app/form/field/input/form-fields-input/#getunique","text":"Get the unique Parameter (none) Return Boolean","title":"getUnique()"},{"location":"reference/model/app/form/field/input/form-fields-input/#getmaxlength","text":"Get the maxLength Parameter (none) Return Integer","title":"getMaxLength()"},{"location":"reference/model/app/form/field/input/form-fields-input/#getminlength","text":"Get the minLength Parameter (none) Return Integer","title":"getMinLength()"},{"location":"reference/model/app/form/field/input/form-fields-input/#getprotocol","text":"Get the protocol Parameter (none) Return LinkProtocol","title":"getProtocol()"},{"location":"reference/model/app/form/field/input/form-fields-input/#multilinetextfield","text":"Warning extend the abstract class \" AbstractInputField \"","title":"MultiLineTextField"},{"location":"reference/model/app/form/field/input/form-fields-input/#methods_3","text":"","title":"Methods"},{"location":"reference/model/app/form/field/input/form-fields-input/#getdefaultvalue_1","text":"Get the defaultValue Parameter (none) Return String","title":"getDefaultValue()"},{"location":"reference/model/app/form/field/input/form-fields-input/#numberfield","text":"Warning extend the abstract class \" AbstractInputField \"","title":"NumberField"},{"location":"reference/model/app/form/field/input/form-fields-input/#methods_4","text":"","title":"Methods"},{"location":"reference/model/app/form/field/input/form-fields-input/#getdisplayscale_1","text":"Get the displayScale Parameter (none) Return Integer","title":"getDisplayScale()"},{"location":"reference/model/app/form/field/input/form-fields-input/#getunit_1","text":"Get the unit Parameter (none) Return String","title":"getUnit()"},{"location":"reference/model/app/form/field/input/form-fields-input/#getunitposition_1","text":"Get the unitPosition Parameter (none) Return UnitPosition","title":"getUnitPosition()"},{"location":"reference/model/app/form/field/input/form-fields-input/#getdigit","text":"Get the digit Parameter (none) Return Boolean","title":"getDigit()"},{"location":"reference/model/app/form/field/input/form-fields-input/#getmaxvalue","text":"Get the maxValue Parameter (none) Return Integer","title":"getMaxValue()"},{"location":"reference/model/app/form/field/input/form-fields-input/#getminvalue","text":"Get the minValue Parameter (none) Return Integer","title":"getMinValue()"},{"location":"reference/model/app/form/field/input/form-fields-input/#getdefaultvalue_2","text":"Get the defaultValue Parameter (none) Return String","title":"getDefaultValue()"},{"location":"reference/model/app/form/field/input/form-fields-input/#getunique_1","text":"Get the unique Parameter (none) Return Boolean","title":"getUnique()"},{"location":"reference/model/app/form/field/input/form-fields-input/#richtextfield","text":"Warning extend the abstract class \" AbstractInputField \"","title":"RichTextField"},{"location":"reference/model/app/form/field/input/form-fields-input/#methods_5","text":"","title":"Methods"},{"location":"reference/model/app/form/field/input/form-fields-input/#getdefaultvalue_3","text":"Get the defaultValue Parameter (none) Return String","title":"getDefaultValue()"},{"location":"reference/model/app/form/field/input/form-fields-input/#singlelinetextfield","text":"Warning extend the abstract class \" AbstractInputField \"","title":"SingleLineTextField"},{"location":"reference/model/app/form/field/input/form-fields-input/#methods_6","text":"","title":"Methods"},{"location":"reference/model/app/form/field/input/form-fields-input/#getminlength_1","text":"Get the minLength Parameter (none) Return Integer","title":"getMinLength()"},{"location":"reference/model/app/form/field/input/form-fields-input/#getmaxlength_1","text":"Get the maxLength Parameter (none) Return Integer","title":"getMaxLength()"},{"location":"reference/model/app/form/field/input/form-fields-input/#getexpression_1","text":"Get the expression Parameter (none) Return String","title":"getExpression()"},{"location":"reference/model/app/form/field/input/form-fields-input/#gethideexpression_1","text":"Get the hideExpression Parameter (none) Return Boolean","title":"getHideExpression()"},{"location":"reference/model/app/form/field/input/form-fields-input/#getdefaultvalue_4","text":"Get the defaultValue Parameter (none) Return String","title":"getDefaultValue()"},{"location":"reference/model/app/form/field/input/form-fields-input/#getunique_2","text":"Get the unique Parameter (none) Return Boolean","title":"getUnique()"},{"location":"reference/model/app/form/field/input/form-fields-input/#abstractinputfield","text":"Warning extend the abstract class \" Field \" This class is an abstract class.","title":"AbstractInputField"},{"location":"reference/model/app/form/field/input/form-fields-input/#methods_7","text":"","title":"Methods"},{"location":"reference/model/app/form/field/input/form-fields-input/#getlabel","text":"Get the label Parameter (none) Return String","title":"getLabel()"},{"location":"reference/model/app/form/field/input/form-fields-input/#getnolabel","text":"Get the noLabel Parameter (none) Return Boolean","title":"getNoLabel()"},{"location":"reference/model/app/form/field/input/form-fields-input/#getrequired","text":"Get the required Parameter (none) Return Boolean","title":"getRequired()"},{"location":"reference/model/app/form/field/input/form-fields-input/#reference","text":"Get App Get Apps Get Form fields Get Form Layout","title":"Reference"},{"location":"reference/model/app/form/layout/form-layout/","text":"Form Layout Get the layout of a form. Length and width of the field, The fields you set on the table and their order, Put fields in the Group field and their layout, label, space, and border settings. Permissions to view the App is needed. API Tokens cannot be used with this API. FormLayout Methods getRevision() Get the revision Parameter (none) Return String getLayout() Get the layout Parameter (none) Return List ItemLayout > FieldLayout Methods getType() Get the type Parameter (none) Return String getCode() Get the code Parameter (none) Return String getElementId() Get the elementId Parameter (none) Return String getLabel() Get the label Parameter (none) Return String getSize() Get the size Parameter (none) Return FieldSize FieldSize Methods getWidth() Get the width Parameter (none) Return String getHeight() Get the height Parameter (none) Return String getInnerHeight() Get the innerHeight Parameter (none) Return String GroupLayout Warning extend the abstract class \" ItemLayout \" Methods getCode() Get the code Parameter (none) Return String getLayout() Get the layout Parameter (none) Return List RowLayout RowLayout Warning extend the abstract class \" ItemLayout \" Methods getFields() Get the fields Parameter (none) Return List FieldLayout SubTableLayout Warning extend the abstract class \" ItemLayout \" Methods getCode() Get the code Parameter (none) Return String ItemLayout Warning This class is an abstract class. Methods getType() Get the type Parameter (none) Return LayoutType Reference Get App Get Apps Get Form fields Get Form Layout","title":"Layout"},{"location":"reference/model/app/form/layout/form-layout/#form-layout","text":"Get the layout of a form. Length and width of the field, The fields you set on the table and their order, Put fields in the Group field and their layout, label, space, and border settings. Permissions to view the App is needed. API Tokens cannot be used with this API.","title":"Form Layout"},{"location":"reference/model/app/form/layout/form-layout/#formlayout","text":"","title":"FormLayout"},{"location":"reference/model/app/form/layout/form-layout/#methods","text":"","title":"Methods"},{"location":"reference/model/app/form/layout/form-layout/#getrevision","text":"Get the revision Parameter (none) Return String","title":"getRevision()"},{"location":"reference/model/app/form/layout/form-layout/#getlayout","text":"Get the layout Parameter (none) Return List ItemLayout >","title":"getLayout()"},{"location":"reference/model/app/form/layout/form-layout/#fieldlayout","text":"","title":"FieldLayout"},{"location":"reference/model/app/form/layout/form-layout/#methods_1","text":"","title":"Methods"},{"location":"reference/model/app/form/layout/form-layout/#gettype","text":"Get the type Parameter (none) Return String","title":"getType()"},{"location":"reference/model/app/form/layout/form-layout/#getcode","text":"Get the code Parameter (none) Return String","title":"getCode()"},{"location":"reference/model/app/form/layout/form-layout/#getelementid","text":"Get the elementId Parameter (none) Return String","title":"getElementId()"},{"location":"reference/model/app/form/layout/form-layout/#getlabel","text":"Get the label Parameter (none) Return String","title":"getLabel()"},{"location":"reference/model/app/form/layout/form-layout/#getsize","text":"Get the size Parameter (none) Return FieldSize","title":"getSize()"},{"location":"reference/model/app/form/layout/form-layout/#fieldsize","text":"","title":"FieldSize"},{"location":"reference/model/app/form/layout/form-layout/#methods_2","text":"","title":"Methods"},{"location":"reference/model/app/form/layout/form-layout/#getwidth","text":"Get the width Parameter (none) Return String","title":"getWidth()"},{"location":"reference/model/app/form/layout/form-layout/#getheight","text":"Get the height Parameter (none) Return String","title":"getHeight()"},{"location":"reference/model/app/form/layout/form-layout/#getinnerheight","text":"Get the innerHeight Parameter (none) Return String","title":"getInnerHeight()"},{"location":"reference/model/app/form/layout/form-layout/#grouplayout","text":"Warning extend the abstract class \" ItemLayout \"","title":"GroupLayout"},{"location":"reference/model/app/form/layout/form-layout/#methods_3","text":"","title":"Methods"},{"location":"reference/model/app/form/layout/form-layout/#getcode_1","text":"Get the code Parameter (none) Return String","title":"getCode()"},{"location":"reference/model/app/form/layout/form-layout/#getlayout_1","text":"Get the layout Parameter (none) Return List RowLayout","title":"getLayout()"},{"location":"reference/model/app/form/layout/form-layout/#rowlayout","text":"Warning extend the abstract class \" ItemLayout \"","title":"RowLayout"},{"location":"reference/model/app/form/layout/form-layout/#methods_4","text":"","title":"Methods"},{"location":"reference/model/app/form/layout/form-layout/#getfields","text":"Get the fields Parameter (none) Return List FieldLayout","title":"getFields()"},{"location":"reference/model/app/form/layout/form-layout/#subtablelayout","text":"Warning extend the abstract class \" ItemLayout \"","title":"SubTableLayout"},{"location":"reference/model/app/form/layout/form-layout/#methods_5","text":"","title":"Methods"},{"location":"reference/model/app/form/layout/form-layout/#getcode_2","text":"Get the code Parameter (none) Return String","title":"getCode()"},{"location":"reference/model/app/form/layout/form-layout/#itemlayout","text":"Warning This class is an abstract class.","title":"ItemLayout"},{"location":"reference/model/app/form/layout/form-layout/#methods_6","text":"","title":"Methods"},{"location":"reference/model/app/form/layout/form-layout/#gettype_1","text":"Get the type Parameter (none) Return LayoutType","title":"getType()"},{"location":"reference/model/app/form/layout/form-layout/#reference","text":"Get App Get Apps Get Form fields Get Form Layout","title":"Reference"},{"location":"reference/model/app/general/general-settings/","text":"GeneralSettings The general settings of app Methods getName() The name of the app. Parameter (none) Return String getDescription() The description of an app Parameter (none) Return String getIcon() Get the Icon of an app. Parameter (none) Return Icon getTheme() Get the theme of an app. Parameter (none) Return IconTheme getRevision() Get the revision of an app. Parameter (none) Return Integer Enum IconTheme Name Type Value WHITE String WHITE RED String RED BLUE String BLUE GREEN String GREEN YELLOW String YELLOW BLACK String BLACK","title":"General"},{"location":"reference/model/app/general/general-settings/#generalsettings","text":"The general settings of app","title":"GeneralSettings"},{"location":"reference/model/app/general/general-settings/#methods","text":"","title":"Methods"},{"location":"reference/model/app/general/general-settings/#getname","text":"The name of the app. Parameter (none) Return String","title":"getName()"},{"location":"reference/model/app/general/general-settings/#getdescription","text":"The description of an app Parameter (none) Return String","title":"getDescription()"},{"location":"reference/model/app/general/general-settings/#geticon","text":"Get the Icon of an app. Parameter (none) Return Icon","title":"getIcon()"},{"location":"reference/model/app/general/general-settings/#gettheme","text":"Get the theme of an app. Parameter (none) Return IconTheme","title":"getTheme()"},{"location":"reference/model/app/general/general-settings/#getrevision","text":"Get the revision of an app. Parameter (none) Return Integer","title":"getRevision()"},{"location":"reference/model/app/general/general-settings/#enum","text":"","title":"Enum"},{"location":"reference/model/app/general/general-settings/#icontheme","text":"Name Type Value WHITE String WHITE RED String RED BLUE String BLUE GREEN String GREEN YELLOW String YELLOW BLACK String BLACK","title":"IconTheme"},{"location":"reference/model/app/general/icon-model/","text":"Icon The Icom of an apps. Constructor Parameter Name Type Description key String The key of the Icon iconType IconType The icon type of the Icon file FileModel The file of the Icon Methods getFile() The file of the Icon Parameter (none) Return FileModel getKey() The key of the Icon Parameter (none) Return String getIconType() The icon type of the Icon Parameter (none) Return IconType Enum IconType Name Type Value FILE String FILE PRESET String PRESET","title":"Icon"},{"location":"reference/model/app/general/icon-model/#icon","text":"The Icom of an apps.","title":"Icon"},{"location":"reference/model/app/general/icon-model/#constructor","text":"","title":"Constructor"},{"location":"reference/model/app/general/icon-model/#parameter","text":"Name Type Description key String The key of the Icon iconType IconType The icon type of the Icon file FileModel The file of the Icon","title":"Parameter"},{"location":"reference/model/app/general/icon-model/#methods","text":"","title":"Methods"},{"location":"reference/model/app/general/icon-model/#getfile","text":"The file of the Icon Parameter (none) Return FileModel","title":"getFile()"},{"location":"reference/model/app/general/icon-model/#getkey","text":"The key of the Icon Parameter (none) Return String","title":"getKey()"},{"location":"reference/model/app/general/icon-model/#geticontype","text":"The icon type of the Icon Parameter (none) Return IconType","title":"getIconType()"},{"location":"reference/model/app/general/icon-model/#enum","text":"","title":"Enum"},{"location":"reference/model/app/general/icon-model/#icontype","text":"Name Type Value FILE String FILE PRESET String PRESET","title":"IconType"},{"location":"reference/model/app/view/get-view-response/","text":"GetViewsResponse The views of an apps. Constructor Parameter Name Type Description views [String: ViewModel ] The appId revision The revision of the preview app Methods getViews() Get the views of an app. Parameter (none) Return [String: ViewModel ] getRevision() The revision of the preview app. Parameter (none) Return Integer","title":"GetViewsResponse"},{"location":"reference/model/app/view/get-view-response/#getviewsresponse","text":"The views of an apps.","title":"GetViewsResponse"},{"location":"reference/model/app/view/get-view-response/#constructor","text":"","title":"Constructor"},{"location":"reference/model/app/view/get-view-response/#parameter","text":"Name Type Description views [String: ViewModel ] The appId revision The revision of the preview app","title":"Parameter"},{"location":"reference/model/app/view/get-view-response/#methods","text":"","title":"Methods"},{"location":"reference/model/app/view/get-view-response/#getviews","text":"Get the views of an app. Parameter (none) Return [String: ViewModel ]","title":"getViews()"},{"location":"reference/model/app/view/get-view-response/#getrevision","text":"The revision of the preview app. Parameter (none) Return Integer","title":"getRevision()"},{"location":"reference/model/app/view/update-views-response/","text":"UpdateViewsResponse The views of an apps. Constructor Parameter Name Type Description views [String: ViewModel ] The appId revision The revision of the preview app Methods getViews() Get the views of an app. Parameter (none) Return [String: ViewModel ] getRevision() The revision of the preview app. Parameter (none) Return Integer","title":"UpdateViewsResponse"},{"location":"reference/model/app/view/update-views-response/#updateviewsresponse","text":"The views of an apps.","title":"UpdateViewsResponse"},{"location":"reference/model/app/view/update-views-response/#constructor","text":"","title":"Constructor"},{"location":"reference/model/app/view/update-views-response/#parameter","text":"Name Type Description views [String: ViewModel ] The appId revision The revision of the preview app","title":"Parameter"},{"location":"reference/model/app/view/update-views-response/#methods","text":"","title":"Methods"},{"location":"reference/model/app/view/update-views-response/#getviews","text":"Get the views of an app. Parameter (none) Return [String: ViewModel ]","title":"getViews()"},{"location":"reference/model/app/view/update-views-response/#getrevision","text":"The revision of the preview app. Parameter (none) Return Integer","title":"getRevision()"},{"location":"reference/model/app/view/view-model/","text":"ViewModel General information of the member(user/group/organization) on the kintone application Methods getBuiltinType() Get the code of the user/group/organization Parameter (none) Return BuiltinType setCode() The BuiltinType of the built-in View. Parameter None Return BuiltinType getDate() The field code set for the Date Field. Responded for Calendar Views. Return String getFields() The list of field codes for the fields displayed in the View. Responded for List Views. Parameter None Return [String] getFilterCond() The filter condition as a query. Return String getHtml() The HTML code set for the View. Responded for Custom Views. Parameter None Return String getId() The View ID. Parameter None Return Integer getIndex() The display order (ascending) of the View, when listed with other views. Parameter None Return Integer getName() The name of the View. Parameter None Return String getPager() The pagination settings. Responded for Custom Views. Parameter None Return Boolean getSort() The sort order as a query. Parameter None Return String getTitle() The field code set for the Title Field. Responded for Calendar Views. Parameter None Return String getType() The type of View in Type Parameter None Return Type Enum Type Name Type Value Description LIST String LIST List View CALENDAR String CALENDAR Custom View CUSTOM String CUSTOM Custom View BuiltinType Name Type Value Description ASSIGNEE String ASSIGNEE The \"Assigned to me\" View.(This list is automatically created if the Process Management settings have been enabled in the app.)","title":"View"},{"location":"reference/model/app/view/view-model/#viewmodel","text":"General information of the member(user/group/organization) on the kintone application","title":"ViewModel"},{"location":"reference/model/app/view/view-model/#methods","text":"","title":"Methods"},{"location":"reference/model/app/view/view-model/#getbuiltintype","text":"Get the code of the user/group/organization Parameter (none) Return BuiltinType","title":"getBuiltinType()"},{"location":"reference/model/app/view/view-model/#setcode","text":"The BuiltinType of the built-in View. Parameter None Return BuiltinType","title":"setCode()"},{"location":"reference/model/app/view/view-model/#getdate","text":"The field code set for the Date Field. Responded for Calendar Views. Return String","title":"getDate()"},{"location":"reference/model/app/view/view-model/#getfields","text":"The list of field codes for the fields displayed in the View. Responded for List Views. Parameter None Return [String]","title":"getFields()"},{"location":"reference/model/app/view/view-model/#getfiltercond","text":"The filter condition as a query. Return String","title":"getFilterCond()"},{"location":"reference/model/app/view/view-model/#gethtml","text":"The HTML code set for the View. Responded for Custom Views. Parameter None Return String","title":"getHtml()"},{"location":"reference/model/app/view/view-model/#getid","text":"The View ID. Parameter None Return Integer","title":"getId()"},{"location":"reference/model/app/view/view-model/#getindex","text":"The display order (ascending) of the View, when listed with other views. Parameter None Return Integer","title":"getIndex()"},{"location":"reference/model/app/view/view-model/#getname","text":"The name of the View. Parameter None Return String","title":"getName()"},{"location":"reference/model/app/view/view-model/#getpager","text":"The pagination settings. Responded for Custom Views. Parameter None Return Boolean","title":"getPager()"},{"location":"reference/model/app/view/view-model/#getsort","text":"The sort order as a query. Parameter None Return String","title":"getSort()"},{"location":"reference/model/app/view/view-model/#gettitle","text":"The field code set for the Title Field. Responded for Calendar Views. Parameter None Return String","title":"getTitle()"},{"location":"reference/model/app/view/view-model/#gettype","text":"The type of View in Type Parameter None Return Type","title":"getType()"},{"location":"reference/model/app/view/view-model/#enum","text":"","title":"Enum"},{"location":"reference/model/app/view/view-model/#type","text":"Name Type Value Description LIST String LIST List View CALENDAR String CALENDAR Custom View CUSTOM String CUSTOM Custom View","title":"Type"},{"location":"reference/model/app/view/view-model/#builtintype","text":"Name Type Value Description ASSIGNEE String ASSIGNEE The \"Assigned to me\" View.(This list is automatically created if the Process Management settings have been enabled in the app.)","title":"BuiltinType"},{"location":"reference/model/bulk-request/bulk-request-item/","text":"BulkRequestItem An item of the bulk request Constructor Parameter Name Type Description method String The API method name. api String The path of the API. payload Object The parameters to be passed onto the API.Contents and formats will change depending on the API.","title":"Bulk request item"},{"location":"reference/model/bulk-request/bulk-request-item/#bulkrequestitem","text":"An item of the bulk request","title":"BulkRequestItem"},{"location":"reference/model/bulk-request/bulk-request-item/#constructor","text":"Parameter Name Type Description method String The API method name. api String The path of the API. payload Object The parameters to be passed onto the API.Contents and formats will change depending on the API.","title":"Constructor"},{"location":"reference/model/bulk-request/bulk-request-model/","text":"BulkRequestModel Store a list of requests and responses for a bulk request. Constructor Parameter (none) Methods addRequest(bulkRequestItem) Parameter Name Type Description bulkRequestItem BulkRequestItem The BulkRequest Item. Return (none)","title":"Bulk Request"},{"location":"reference/model/bulk-request/bulk-request-model/#bulkrequestmodel","text":"Store a list of requests and responses for a bulk request.","title":"BulkRequestModel"},{"location":"reference/model/bulk-request/bulk-request-model/#constructor","text":"Parameter (none)","title":"Constructor"},{"location":"reference/model/bulk-request/bulk-request-model/#methods","text":"","title":"Methods"},{"location":"reference/model/bulk-request/bulk-request-model/#addrequestbulkrequestitem","text":"Parameter Name Type Description bulkRequestItem BulkRequestItem The BulkRequest Item. Return (none)","title":"addRequest(bulkRequestItem)"},{"location":"reference/model/bulk-request/bulk-request-response/","text":"BulkRequestResponse List response form bulk request Constructor Parameter (none) Methods getResults() Parameter (none) Return ArrayList Object>","title":"Bulk Request Response"},{"location":"reference/model/bulk-request/bulk-request-response/#bulkrequestresponse","text":"List response form bulk request","title":"BulkRequestResponse"},{"location":"reference/model/bulk-request/bulk-request-response/#constructor","text":"Parameter (none)","title":"Constructor"},{"location":"reference/model/bulk-request/bulk-request-response/#methods","text":"","title":"Methods"},{"location":"reference/model/bulk-request/bulk-request-response/#getresults","text":"Parameter (none) Return ArrayList Object>","title":"getResults()"},{"location":"reference/model/cursor/record-cursor/","text":"RecordCursor Model General record cursor response, using for data response from the kintone app CreateRecordCursorResponse Methods getId() get the The cursor ID. Parameter (none) Return String getTotalCount() get Total of the records. Parameter (none) Return Integer GetRecordCursorResponse Methods getRecords() get the Records data response. Parameter (none) Return ArrayList HashMap String, FieldValue >> getNext() States whether there are more records that can be acquired from the cursor. true : There are still records to be acquired. false : There are no more records to be acquired. Parameter (none) Return Boolean","title":"RecordCursor"},{"location":"reference/model/cursor/record-cursor/#recordcursor-model","text":"General record cursor response, using for data response from the kintone app","title":"RecordCursor Model"},{"location":"reference/model/cursor/record-cursor/#createrecordcursorresponse","text":"","title":"CreateRecordCursorResponse"},{"location":"reference/model/cursor/record-cursor/#methods","text":"","title":"Methods"},{"location":"reference/model/cursor/record-cursor/#getid","text":"get the The cursor ID. Parameter (none) Return String","title":"getId()"},{"location":"reference/model/cursor/record-cursor/#gettotalcount","text":"get Total of the records. Parameter (none) Return Integer","title":"getTotalCount()"},{"location":"reference/model/cursor/record-cursor/#getrecordcursorresponse","text":"","title":"GetRecordCursorResponse"},{"location":"reference/model/cursor/record-cursor/#methods_1","text":"","title":"Methods"},{"location":"reference/model/cursor/record-cursor/#getrecords","text":"get the Records data response. Parameter (none) Return ArrayList HashMap String, FieldValue >>","title":"getRecords()"},{"location":"reference/model/cursor/record-cursor/#getnext","text":"States whether there are more records that can be acquired from the cursor. true : There are still records to be acquired. false : There are no more records to be acquired. Parameter (none) Return Boolean","title":"getNext()"},{"location":"reference/model/file/file-model/","text":"File Model Holds file information obtained from kintone. Methods getContentType() Get the content type of the file. Parameter (none) Return String getFileKey() Get the file key of the uploaded file. Parameter (none) Return String getName() Get the name of the uploaded file. Parameter (none) Return String getSize() Get the size of the file. Parameter (none) Return String","title":"File"},{"location":"reference/model/file/file-model/#file-model","text":"Holds file information obtained from kintone.","title":"File Model"},{"location":"reference/model/file/file-model/#methods","text":"","title":"Methods"},{"location":"reference/model/file/file-model/#getcontenttype","text":"Get the content type of the file. Parameter (none) Return String","title":"getContentType()"},{"location":"reference/model/file/file-model/#getfilekey","text":"Get the file key of the uploaded file. Parameter (none) Return String","title":"getFileKey()"},{"location":"reference/model/file/file-model/#getname","text":"Get the name of the uploaded file. Parameter (none) Return String","title":"getName()"},{"location":"reference/model/file/file-model/#getsize","text":"Get the size of the file. Parameter (none) Return String","title":"getSize()"},{"location":"reference/model/member/member/","text":"Member General information of the member(user/group/organization) on the kintone application Constructor Parameter Name Type Description code String The user/group/organization code. name String The user/group/organization name. Methods getCode() Get the code of the user/group/organization Parameter (none) Return String getName() Get the name of the user/group/organization Parameter (none) Return String","title":"Member"},{"location":"reference/model/member/member/#member","text":"General information of the member(user/group/organization) on the kintone application","title":"Member"},{"location":"reference/model/member/member/#constructor","text":"Parameter Name Type Description code String The user/group/organization code. name String The user/group/organization name.","title":"Constructor"},{"location":"reference/model/member/member/#methods","text":"","title":"Methods"},{"location":"reference/model/member/member/#getcode","text":"Get the code of the user/group/organization Parameter (none) Return String","title":"getCode()"},{"location":"reference/model/member/member/#getname","text":"Get the name of the user/group/organization Parameter (none) Return String","title":"getName()"},{"location":"reference/model/record/record-comment-model/","text":"Comment Model General comment structure of the record on kintone restAPI Comment Constructor Parameter (none) Methods getId() Get the Comment ID. Parameter (none) Return Integer Sample code get the Comment ID. Source code // execute GET RECORD_COMMENTS API int appID = 1; int recordID = 1; String order = \"asc\"; int offsset = 1; int limit = 2; GetCommentsResponse response = kintoneRecordManager.getComments(appID, recordID, order, offsset, offsset); ArrayList resultComments = response.getComments(); Comment comment = resultComments.get(0); int commentID = comment.getId(); getText() Get the comment including the line feed codes. Parameter (none) Return String Sample code get the comment including the line feed codes. Source code // execute GET RECORD_COMMENTS API int appID = 1; int recordID = 1; int order = \"asc\"; int offsset = 1; Integer limit = 2; GetCommentsResponse response = kintoneRecordManager.getComments(appID, recordID, order, offsset, limit); ArrayList resultComments = response.getComments(); Comment comment = resultComments.get(0); String commentText = comment.getText(); getCreatedAt() Get the created date and time of the comment. Parameter (none) Return Date Sample code get the created date and time of the comment. Source code // execute GET RECORD_COMMENTS API Integer appID = 1; Integer recordID = 1; String order = \"asc\"; Integer offsset = 1; Integer limit = 2; GetCommentsResponse response = kintoneRecordManager.getComments(appID, recordID, order, offsset, limit); ArrayList resultComments = response.getComments(); Comment comment = resultComments.get(0); Date commentCreatedAt = comment.getCreatedAt(); getCreator() Get an object including information of the comment creator. Parameter (none) Return Member Sample code get an object including information of the comment creator. Source code // execute GET RECORD_COMMENTS API Integer appID = 1; Integer recordID = 1; String order = \"asc\"; Integer offsset = 1; Integer limit = 2; GetCommentsResponse response = kintoneRecordManager.getComments(appID, recordID, order, offsset, limit); ArrayList resultComments = response.getComments(); Comment comment = resultComments.get(0); Member commentCreator = comment.getCreator(); getMentions() Get an array including information of mentioned users. Parameter (none) Return List CommentMention > Sample code get an array including information of mentioned users. Source code // execute GET RECORD_COMMENTS API Integer appID = 1; Integer recordID = 1; String order = \"asc\"; Integer offsset = 1; Integer limit = 2; GetCommentsResponse response = kintoneRecordManager.getComments(appID, recordID, order, offsset, limit); ArrayList resultComments = response.getComments(); Comment comment = resultComments.get(0); List commentMentions = comment.getMentions(); CommentContent Constructor Parameter (none) Methods setText(String text) set the comment including the line feed codes. Parameter Name type Description text String The comment including the line feed codes. Return (none) Sample code set the comment including the line feed codes. Source code // execute ADD RECORD_COMMENT API Integer app = 1; Integer record = 1; CommentContent comment = new CommentContent(); ArrayList mentionList = new ArrayList (); CommentMention mention = new CommentMention(); mention.setCode(\"sample_user\"); mention.setType(\"USER\"); mentionList.add(mention); comment.setText(\"test comment\"); comment.setMentions(mentionList); AddCommentResponse response = kintoneRecordManager.addComment(app, record, comment); setMentions(List CommentMention > mentions) Get an array including information of mentioned users. Parameter Name type Description mentions List CommentMention > An array including information of mentioned users. Return (none) Sample code get an array including information of mentioned users. Source code // execute ADD RECORD_COMMENT API Integer app = 1; Integer record = 1; CommentContent comment = new CommentContent(); ArrayList mentionList = new ArrayList (); CommentMention mention = new CommentMention(); mention.setCode(\"sample_user\"); mention.setType(\"USER\"); mentionList.add(mention); comment.setText(\"test comment\"); comment.setMentions(mentionList); AddCommentResponse response = kintoneRecordManager.addComment(app, record, comment); CommentMention Constructor Parameter (none) Methods getCode() Get the code of the mentioned user, group or organization. Parameter (none) Return String Sample code get the code of the mentioned user, group or organization. Source code // execute GET RECORD_COMMENTS API Integer appID = 1; Integer recordID = 1; String order = \"asc\"; Integer offsset = 1; Integer limit = 2; GetCommentsResponse response = kintoneRecordManager.getComments(appID, recordID, order, offsset, limit); ArrayList resultComments = response.getComments(); Comment comment = resultComments.get(0); List commentMentions = comment.getMentions(); CommentMention mention = commentMentions.get(0); String mentionUserCode = mention.getCode(); setCode(String code) set the comment including the line feed codes. Parameter Name type Description code String The code of the mentioned user, group or organization. Return (none) Sample code set the comment including the line feed codes. Source code // execute ADD RECORD_COMMENT API Integer app = 1; Integer record = 1; CommentContent comment = new CommentContent(); ArrayList mentionList = new ArrayList (); CommentMention mention = new CommentMention(); mention.setCode(\"sample_user\"); mention.setType(\"USER\"); mentionList.add(mention); comment.setText(\"test comment\"); comment.setMentions(mentionList); AddCommentResponse response = kintoneRecordManager.addComment(app, record, comment); getType() Get the type of the mentioned user, group or organization. Parameter (none) Return String Sample code get the type of the mentioned user, group or organization. Source code // execute GET RECORD_COMMENTS API Integer appID = 1; Integer recordID = 1; String order = \"asc\"; Integer offsset = 1; Integer limit = 2; GetCommentsResponse response = kintoneRecordManager.getComments(appID, recordID, order, offsset, offsset); ArrayList resultComments = response.getComments(); Comment comment = resultComments.get(0); List commentMentions = comment.getMentions(); CommentMention mention = commentMentions.get(0); String mentionUserType= mention.getType(); setType(String type) Get an array including information of mentioned users. Parameter Name type Description type String The type of the mentioned user, group or organization. Return (none) Sample code get an array including information of mentioned users. Source code // execute ADD RECORD_COMMENT API Integer app = 1; Integer record = 1; CommentContent comment = new CommentContent(); ArrayList mentionList = new ArrayList (); CommentMention mention = new CommentMention(); mention.setCode(\"sample_user\"); mention.setType(\"USER\"); mentionList.add(mention); comment.setText(\"test comment\"); comment.setMentions(mentionList); AddCommentResponse response = kintoneRecordManager.addComment(app, record, comment); GetCommentsResponse Constructor Parameter (none) Methods getComments() Get the comments List on a record. Parameter (none) Return ArrayList Comment > Sample code get the comments List on a record. Source code // execute GET RECORD_COMMENTS API Integer appID = 1; Integer recordID = 1; String order = \"asc\"; Integer offsset = 1; Integer limit = 2; GetCommentsResponse response = kintoneRecordManager.getComments(appID, recordID, order, offsset, limit); ArrayList resultComments = response.getComments(); getOlder() Get information of older comments. Parameter (none) Return Boolean Sample code get information of older comments. Source code // execute GET RECORD_COMMENTS API Integer appID = 1; Integer recordID = 1; String order = \"asc\"; Integer offsset = 1; Integer limit = 2; GetCommentsResponse response = kintoneRecordManager.getComments(appID, recordID, order, offsset, limit); Boolean resultOlderFlg = response.getOlder(); getNewer() Get information of newer comments. Parameter (none) Return Boolean Sample code get information of newer comments. Source code // execute GET RECORD_COMMENTS API Integer appID = 1; Integer recordID = 1; String order = \"asc\"; Integer offsset = 1; Integer limit = 2; GetCommentsResponse response = kintoneRecordManager.getComments(appID, recordID, order, offsset, limit); Boolean resultNewerFlg = response.getNewer(); AddCommentResponse Constructor Parameter (none) Methods getId() Get the ID of comment which have just created. Parameter (none) Return Integer Sample code get the ID of comment which have just created. Source code // execute ADD RECORD_COMMENT API Integer app = 1; Integer record = 1; CommentContent comment = new CommentContent(); ArrayList mentionList = new ArrayList (); CommentMention mention = new CommentMention(); mention.setCode(\"sample_user\"); mention.setType(\"USER\"); mentionList.add(mention); comment.setText(\"test comment\"); comment.setMentions(mentionList); AddCommentResponse response = kintoneRecordManager.addComment(app, record, comment); Integer resultId = response.getId();","title":"Comment Model"},{"location":"reference/model/record/record-comment-model/#comment-model","text":"General comment structure of the record on kintone restAPI","title":"Comment Model"},{"location":"reference/model/record/record-comment-model/#comment","text":"","title":"Comment"},{"location":"reference/model/record/record-comment-model/#constructor","text":"Parameter (none)","title":"Constructor"},{"location":"reference/model/record/record-comment-model/#methods","text":"","title":"Methods"},{"location":"reference/model/record/record-comment-model/#getid","text":"Get the Comment ID. Parameter (none) Return Integer Sample code get the Comment ID. Source code // execute GET RECORD_COMMENTS API int appID = 1; int recordID = 1; String order = \"asc\"; int offsset = 1; int limit = 2; GetCommentsResponse response = kintoneRecordManager.getComments(appID, recordID, order, offsset, offsset); ArrayList resultComments = response.getComments(); Comment comment = resultComments.get(0); int commentID = comment.getId();","title":"getId()"},{"location":"reference/model/record/record-comment-model/#gettext","text":"Get the comment including the line feed codes. Parameter (none) Return String Sample code get the comment including the line feed codes. Source code // execute GET RECORD_COMMENTS API int appID = 1; int recordID = 1; int order = \"asc\"; int offsset = 1; Integer limit = 2; GetCommentsResponse response = kintoneRecordManager.getComments(appID, recordID, order, offsset, limit); ArrayList resultComments = response.getComments(); Comment comment = resultComments.get(0); String commentText = comment.getText();","title":"getText()"},{"location":"reference/model/record/record-comment-model/#getcreatedat","text":"Get the created date and time of the comment. Parameter (none) Return Date Sample code get the created date and time of the comment. Source code // execute GET RECORD_COMMENTS API Integer appID = 1; Integer recordID = 1; String order = \"asc\"; Integer offsset = 1; Integer limit = 2; GetCommentsResponse response = kintoneRecordManager.getComments(appID, recordID, order, offsset, limit); ArrayList resultComments = response.getComments(); Comment comment = resultComments.get(0); Date commentCreatedAt = comment.getCreatedAt();","title":"getCreatedAt()"},{"location":"reference/model/record/record-comment-model/#getcreator","text":"Get an object including information of the comment creator. Parameter (none) Return Member Sample code get an object including information of the comment creator. Source code // execute GET RECORD_COMMENTS API Integer appID = 1; Integer recordID = 1; String order = \"asc\"; Integer offsset = 1; Integer limit = 2; GetCommentsResponse response = kintoneRecordManager.getComments(appID, recordID, order, offsset, limit); ArrayList resultComments = response.getComments(); Comment comment = resultComments.get(0); Member commentCreator = comment.getCreator();","title":"getCreator()"},{"location":"reference/model/record/record-comment-model/#getmentions","text":"Get an array including information of mentioned users. Parameter (none) Return List CommentMention > Sample code get an array including information of mentioned users. Source code // execute GET RECORD_COMMENTS API Integer appID = 1; Integer recordID = 1; String order = \"asc\"; Integer offsset = 1; Integer limit = 2; GetCommentsResponse response = kintoneRecordManager.getComments(appID, recordID, order, offsset, limit); ArrayList resultComments = response.getComments(); Comment comment = resultComments.get(0); List commentMentions = comment.getMentions();","title":"getMentions()"},{"location":"reference/model/record/record-comment-model/#commentcontent","text":"","title":"CommentContent"},{"location":"reference/model/record/record-comment-model/#constructor_1","text":"Parameter (none)","title":"Constructor"},{"location":"reference/model/record/record-comment-model/#methods_1","text":"","title":"Methods"},{"location":"reference/model/record/record-comment-model/#settextstring-text","text":"set the comment including the line feed codes. Parameter Name type Description text String The comment including the line feed codes. Return (none) Sample code set the comment including the line feed codes. Source code // execute ADD RECORD_COMMENT API Integer app = 1; Integer record = 1; CommentContent comment = new CommentContent(); ArrayList mentionList = new ArrayList (); CommentMention mention = new CommentMention(); mention.setCode(\"sample_user\"); mention.setType(\"USER\"); mentionList.add(mention); comment.setText(\"test comment\"); comment.setMentions(mentionList); AddCommentResponse response = kintoneRecordManager.addComment(app, record, comment);","title":"setText(String text)"},{"location":"reference/model/record/record-comment-model/#setmentionslistcommentmention62-mentions","text":"Get an array including information of mentioned users. Parameter Name type Description mentions List CommentMention > An array including information of mentioned users. Return (none) Sample code get an array including information of mentioned users. Source code // execute ADD RECORD_COMMENT API Integer app = 1; Integer record = 1; CommentContent comment = new CommentContent(); ArrayList mentionList = new ArrayList (); CommentMention mention = new CommentMention(); mention.setCode(\"sample_user\"); mention.setType(\"USER\"); mentionList.add(mention); comment.setText(\"test comment\"); comment.setMentions(mentionList); AddCommentResponse response = kintoneRecordManager.addComment(app, record, comment);","title":"setMentions(List&lt;CommentMention> mentions)"},{"location":"reference/model/record/record-comment-model/#commentmention","text":"","title":"CommentMention"},{"location":"reference/model/record/record-comment-model/#constructor_2","text":"Parameter (none)","title":"Constructor"},{"location":"reference/model/record/record-comment-model/#methods_2","text":"","title":"Methods"},{"location":"reference/model/record/record-comment-model/#getcode","text":"Get the code of the mentioned user, group or organization. Parameter (none) Return String Sample code get the code of the mentioned user, group or organization. Source code // execute GET RECORD_COMMENTS API Integer appID = 1; Integer recordID = 1; String order = \"asc\"; Integer offsset = 1; Integer limit = 2; GetCommentsResponse response = kintoneRecordManager.getComments(appID, recordID, order, offsset, limit); ArrayList resultComments = response.getComments(); Comment comment = resultComments.get(0); List commentMentions = comment.getMentions(); CommentMention mention = commentMentions.get(0); String mentionUserCode = mention.getCode();","title":"getCode()"},{"location":"reference/model/record/record-comment-model/#setcodestring-code","text":"set the comment including the line feed codes. Parameter Name type Description code String The code of the mentioned user, group or organization. Return (none) Sample code set the comment including the line feed codes. Source code // execute ADD RECORD_COMMENT API Integer app = 1; Integer record = 1; CommentContent comment = new CommentContent(); ArrayList mentionList = new ArrayList (); CommentMention mention = new CommentMention(); mention.setCode(\"sample_user\"); mention.setType(\"USER\"); mentionList.add(mention); comment.setText(\"test comment\"); comment.setMentions(mentionList); AddCommentResponse response = kintoneRecordManager.addComment(app, record, comment);","title":"setCode(String code)"},{"location":"reference/model/record/record-comment-model/#gettype","text":"Get the type of the mentioned user, group or organization. Parameter (none) Return String Sample code get the type of the mentioned user, group or organization. Source code // execute GET RECORD_COMMENTS API Integer appID = 1; Integer recordID = 1; String order = \"asc\"; Integer offsset = 1; Integer limit = 2; GetCommentsResponse response = kintoneRecordManager.getComments(appID, recordID, order, offsset, offsset); ArrayList resultComments = response.getComments(); Comment comment = resultComments.get(0); List commentMentions = comment.getMentions(); CommentMention mention = commentMentions.get(0); String mentionUserType= mention.getType();","title":"getType()"},{"location":"reference/model/record/record-comment-model/#settypestring-type","text":"Get an array including information of mentioned users. Parameter Name type Description type String The type of the mentioned user, group or organization. Return (none) Sample code get an array including information of mentioned users. Source code // execute ADD RECORD_COMMENT API Integer app = 1; Integer record = 1; CommentContent comment = new CommentContent(); ArrayList mentionList = new ArrayList (); CommentMention mention = new CommentMention(); mention.setCode(\"sample_user\"); mention.setType(\"USER\"); mentionList.add(mention); comment.setText(\"test comment\"); comment.setMentions(mentionList); AddCommentResponse response = kintoneRecordManager.addComment(app, record, comment);","title":"setType(String type)"},{"location":"reference/model/record/record-comment-model/#getcommentsresponse","text":"","title":"GetCommentsResponse"},{"location":"reference/model/record/record-comment-model/#constructor_3","text":"Parameter (none)","title":"Constructor"},{"location":"reference/model/record/record-comment-model/#methods_3","text":"","title":"Methods"},{"location":"reference/model/record/record-comment-model/#getcomments","text":"Get the comments List on a record. Parameter (none) Return ArrayList Comment > Sample code get the comments List on a record. Source code // execute GET RECORD_COMMENTS API Integer appID = 1; Integer recordID = 1; String order = \"asc\"; Integer offsset = 1; Integer limit = 2; GetCommentsResponse response = kintoneRecordManager.getComments(appID, recordID, order, offsset, limit); ArrayList resultComments = response.getComments();","title":"getComments()"},{"location":"reference/model/record/record-comment-model/#getolder","text":"Get information of older comments. Parameter (none) Return Boolean Sample code get information of older comments. Source code // execute GET RECORD_COMMENTS API Integer appID = 1; Integer recordID = 1; String order = \"asc\"; Integer offsset = 1; Integer limit = 2; GetCommentsResponse response = kintoneRecordManager.getComments(appID, recordID, order, offsset, limit); Boolean resultOlderFlg = response.getOlder();","title":"getOlder()"},{"location":"reference/model/record/record-comment-model/#getnewer","text":"Get information of newer comments. Parameter (none) Return Boolean Sample code get information of newer comments. Source code // execute GET RECORD_COMMENTS API Integer appID = 1; Integer recordID = 1; String order = \"asc\"; Integer offsset = 1; Integer limit = 2; GetCommentsResponse response = kintoneRecordManager.getComments(appID, recordID, order, offsset, limit); Boolean resultNewerFlg = response.getNewer();","title":"getNewer()"},{"location":"reference/model/record/record-comment-model/#addcommentresponse","text":"","title":"AddCommentResponse"},{"location":"reference/model/record/record-comment-model/#constructor_4","text":"Parameter (none)","title":"Constructor"},{"location":"reference/model/record/record-comment-model/#methods_4","text":"","title":"Methods"},{"location":"reference/model/record/record-comment-model/#getid_1","text":"Get the ID of comment which have just created. Parameter (none) Return Integer Sample code get the ID of comment which have just created. Source code // execute ADD RECORD_COMMENT API Integer app = 1; Integer record = 1; CommentContent comment = new CommentContent(); ArrayList mentionList = new ArrayList (); CommentMention mention = new CommentMention(); mention.setCode(\"sample_user\"); mention.setType(\"USER\"); mentionList.add(mention); comment.setText(\"test comment\"); comment.setMentions(mentionList); AddCommentResponse response = kintoneRecordManager.addComment(app, record, comment); Integer resultId = response.getId();","title":"getId()"},{"location":"reference/model/record/record-field-model/","text":"Field Model FieldValue General Field's value of the kintone app Constructor Parameter (none) Methods getType() get the type of field. Parameter (none) Return FieldType Sample code get the type of field. Source code // execute GET RECORD API Integer appID = 1; Integer recordID =1; GetRecordResponse response = kintoneRecordManager.getRecord(appID, recordID); HashMap resultRecord = response.getRecord(); FieldValue fv = resultRecord.get(\"sample field\"); FieldType fieldType = fv.getType(); setType(FieldType type) set the type of field. Parameter Name type Description type FieldType The type of field - kintone-sdk FieldType constants. Return (none) Sample code set the type of field. Source code Integer appID = 1; HashMap record = new HashMap (); FieldValue fv = new FieldValue(); fv.setType(FieldType.SINGLE_LINE_TEXT); fv.setValue(\"sample_AddRecord\"); record.put(\"FieldCode1\", fv); AddRecordResponse response = kintoneRecordManager.addRecord(appID, record); getValue() get the value of field in the record. Parameter (none) Return Object Sample code get the value of field in the record. Source code // execute GET RECORD API Integer appID = 1; Integer recordID =1; GetRecordResponse response = kintoneRecordManager.getRecord(appID, recordID); HashMap resultRecord = response.getRecord(); FieldValue fv = resultRecord.get(\"sample field\"); Object fieldValue = fv.getValue(); setValue(Object value) set the value of field in the record. Parameter Name type Description value Object The value of field in the record, read more at Field Type here . Return (none) Sample code set the value of field in the record. Source code Integer appID = 1; HashMap record = new HashMap (); FieldValue fv = new FieldValue(); fv.setType(FieldType.SINGLE_LINE_TEXT); fv.setValue(\"sample_AddRecord\"); record.put(\"FieldCode1\", fv); AddRecordResponse response = kintoneRecordManager.addRecord(appID, record); SubTableValueItem Constructor Parameter (none) Methods getID() get the ID of item in table. Parameter (none) Return Integer Sample code get the ID of item in table. Source code // execute GET RECORD API Integer appID = 1; Integer recordID =1; GetRecordResponse response = kintoneRecordManager.getRecord(appID, recordID); HashMap resultRecord = response.getRecord(); FieldValue fv = resultRecord.get(\"SubTable field\"); Object fieldValue = fv.getValue(); ArrayList subTable = (ArrayList )fieldValue; Integer itemID = subTable.get(0).getID(); setID(Integer id) set the ID of table. Parameter Name type Description id Integer The ID of table . Return (none) Sample code set the ID of item in table. Source code SubTableValueItem tableItem = new SubTableValueItem(); tableItem.setID(00000); HashMap tableItemValue = new HashMap (); FieldValue fv1 = new FieldValue(); fv1.setType(FieldType.SINGLE_LINE_TEXT); fv1.setValue(\"sample_text1\"); FieldValue fv2 = new FieldValue(); fv2.setType(FieldType.SINGLE_LINE_TEXT); fv2.setValue(\"sample_text2\"); tableItemValue.put(\"sample field1\", fv1); tableItemValue.put(\"sample field2\", fv2); tableItem.setValue(tableItemValue); getValue() get the value of field in the record. Parameter (none) Return HashMap String, FieldValue > Sample code get the ID of item in table. Source code // execute GET RECORD API Integer appID = 1; Integer recordID =1; GetRecordResponse response = kintoneRecordManager.getRecord(appID, recordID); HashMap resultRecord = response.getRecord(); FieldValue fv = resultRecord.get(\"SubTable field\"); Object fieldValue = fv.getValue(); ArrayList subTable = (ArrayList )fieldValue; HashMap itemValue= subTable.get(0).getValue(); setValue(HashMap String, FieldValue > value) set the value of field in the record. Parameter Name type Description value HashMap String, FieldValue > The row data of table. Return (none) Sample code get the ID of item in table. Source code SubTableValueItem tableItem = new SubTableValueItem(); tableItem.setID(00000); HashMap tableItemValue = new HashMap (); FieldValue fv1 = new FieldValue(); fv1.setType(FieldType.SINGLE_LINE_TEXT); fv1.setValue(\"sample_text1\"); FieldValue fv2 = new FieldValue(); fv2.setType(FieldType.SINGLE_LINE_TEXT); fv2.setValue(\"sample_text2\"); tableItemValue.put(\"sample field1\", fv1); tableItemValue.put(\"sample field2\", fv2); tableItem.setValue(tableItemValue);","title":"Field Model"},{"location":"reference/model/record/record-field-model/#field-model","text":"","title":"Field Model"},{"location":"reference/model/record/record-field-model/#fieldvalue","text":"General Field's value of the kintone app","title":"FieldValue"},{"location":"reference/model/record/record-field-model/#constructor","text":"Parameter (none)","title":"Constructor"},{"location":"reference/model/record/record-field-model/#methods","text":"","title":"Methods"},{"location":"reference/model/record/record-field-model/#gettype","text":"get the type of field. Parameter (none) Return FieldType Sample code get the type of field. Source code // execute GET RECORD API Integer appID = 1; Integer recordID =1; GetRecordResponse response = kintoneRecordManager.getRecord(appID, recordID); HashMap resultRecord = response.getRecord(); FieldValue fv = resultRecord.get(\"sample field\"); FieldType fieldType = fv.getType();","title":"getType()"},{"location":"reference/model/record/record-field-model/#settypefieldtype-type","text":"set the type of field. Parameter Name type Description type FieldType The type of field - kintone-sdk FieldType constants. Return (none) Sample code set the type of field. Source code Integer appID = 1; HashMap record = new HashMap (); FieldValue fv = new FieldValue(); fv.setType(FieldType.SINGLE_LINE_TEXT); fv.setValue(\"sample_AddRecord\"); record.put(\"FieldCode1\", fv); AddRecordResponse response = kintoneRecordManager.addRecord(appID, record);","title":"setType(FieldType type)"},{"location":"reference/model/record/record-field-model/#getvalue","text":"get the value of field in the record. Parameter (none) Return Object Sample code get the value of field in the record. Source code // execute GET RECORD API Integer appID = 1; Integer recordID =1; GetRecordResponse response = kintoneRecordManager.getRecord(appID, recordID); HashMap resultRecord = response.getRecord(); FieldValue fv = resultRecord.get(\"sample field\"); Object fieldValue = fv.getValue();","title":"getValue()"},{"location":"reference/model/record/record-field-model/#setvalueobject-value","text":"set the value of field in the record. Parameter Name type Description value Object The value of field in the record, read more at Field Type here . Return (none) Sample code set the value of field in the record. Source code Integer appID = 1; HashMap record = new HashMap (); FieldValue fv = new FieldValue(); fv.setType(FieldType.SINGLE_LINE_TEXT); fv.setValue(\"sample_AddRecord\"); record.put(\"FieldCode1\", fv); AddRecordResponse response = kintoneRecordManager.addRecord(appID, record);","title":"setValue(Object value)"},{"location":"reference/model/record/record-field-model/#subtablevalueitem","text":"","title":"SubTableValueItem"},{"location":"reference/model/record/record-field-model/#constructor_1","text":"Parameter (none)","title":"Constructor"},{"location":"reference/model/record/record-field-model/#methods_1","text":"","title":"Methods"},{"location":"reference/model/record/record-field-model/#getid","text":"get the ID of item in table. Parameter (none) Return Integer Sample code get the ID of item in table. Source code // execute GET RECORD API Integer appID = 1; Integer recordID =1; GetRecordResponse response = kintoneRecordManager.getRecord(appID, recordID); HashMap resultRecord = response.getRecord(); FieldValue fv = resultRecord.get(\"SubTable field\"); Object fieldValue = fv.getValue(); ArrayList subTable = (ArrayList )fieldValue; Integer itemID = subTable.get(0).getID();","title":"getID()"},{"location":"reference/model/record/record-field-model/#setidinteger-id","text":"set the ID of table. Parameter Name type Description id Integer The ID of table . Return (none) Sample code set the ID of item in table. Source code SubTableValueItem tableItem = new SubTableValueItem(); tableItem.setID(00000); HashMap tableItemValue = new HashMap (); FieldValue fv1 = new FieldValue(); fv1.setType(FieldType.SINGLE_LINE_TEXT); fv1.setValue(\"sample_text1\"); FieldValue fv2 = new FieldValue(); fv2.setType(FieldType.SINGLE_LINE_TEXT); fv2.setValue(\"sample_text2\"); tableItemValue.put(\"sample field1\", fv1); tableItemValue.put(\"sample field2\", fv2); tableItem.setValue(tableItemValue);","title":"setID(Integer id)"},{"location":"reference/model/record/record-field-model/#getvalue_1","text":"get the value of field in the record. Parameter (none) Return HashMap String, FieldValue > Sample code get the ID of item in table. Source code // execute GET RECORD API Integer appID = 1; Integer recordID =1; GetRecordResponse response = kintoneRecordManager.getRecord(appID, recordID); HashMap resultRecord = response.getRecord(); FieldValue fv = resultRecord.get(\"SubTable field\"); Object fieldValue = fv.getValue(); ArrayList subTable = (ArrayList )fieldValue; HashMap itemValue= subTable.get(0).getValue();","title":"getValue()"},{"location":"reference/model/record/record-field-model/#setvaluehashmapstring-fieldvalue62-value","text":"set the value of field in the record. Parameter Name type Description value HashMap String, FieldValue > The row data of table. Return (none) Sample code get the ID of item in table. Source code SubTableValueItem tableItem = new SubTableValueItem(); tableItem.setID(00000); HashMap tableItemValue = new HashMap (); FieldValue fv1 = new FieldValue(); fv1.setType(FieldType.SINGLE_LINE_TEXT); fv1.setValue(\"sample_text1\"); FieldValue fv2 = new FieldValue(); fv2.setType(FieldType.SINGLE_LINE_TEXT); fv2.setValue(\"sample_text2\"); tableItemValue.put(\"sample field1\", fv1); tableItemValue.put(\"sample field2\", fv2); tableItem.setValue(tableItemValue);","title":"setValue(HashMap&lt;String, FieldValue> value)"},{"location":"reference/model/record/record-model/","text":"Record Model General record response, using for data response from the kintone app GetRecordResponse Methods getRecord() get the Record data response. Parameter (none) Return HashMap String, FieldValue > Sample code get the Record data response. Source code // execute GET RECORD API Integer appID = 1; Integer recordID =1; GetRecordResponse response = kintoneRecordManager.getRecord(appID, recordID); HashMap resultRecord = response.getRecord(); GetRecordsResponse Methods getRecords() get the Records data response. Parameter (none) Return ArrayList HashMap String, FieldValue >> Sample code get the Records data response Source code // execute GET RECORDS API Integer appID = 1; String query = \"$id >=\" + 1 + \"and $id < =\" + 10 + \"order by $id asc\"; GetRecordsResponse response = kintoneRecordManager.getRecords(appID, query, null, true); ArrayList > resultRecords = response.getRecords(); getTotalCount() get the number of records response. Parameter (none) Return Integer Sample code get the number of records response Source code // execute GET RECORDS API Integer appID = 1; String query = \"$id >=\" + 1 + \"and $id < =\" + 10 + \"order by $id asc\"; GetRecordsResponse response = kintoneRecordManager.getRecords(appID, query, null, true); Integer count = response.getTotalCount(); AddRecordResponse Methods getID() get the the ID of record added. Parameter (none) Return Integer Sample code get the the ID of record added Source code // execute ADD RECORD API Integer appID = 1; HashMap record = new HashMap (); FieldValue fv = new FieldValue(); fv.setType(FieldType.SINGLE_LINE_TEXT); fv.setValue(\"sample_AddRecord\"); record.put(\"FieldCode1\", fv); AddRecordResponse response = kintoneRecordManager.addRecord(appID, record); Integer resultID = response.getID(); getRevision() get the revision number of record added. Parameter (none) Return Integer Sample code get the revision number of record added Source code // execute ADD RECORD API Integer appID = 1; HashMap record = new HashMap (); FieldValue fv = new FieldValue(); fv.setType(FieldType.SINGLE_LINE_TEXT); fv.setValue(\"sample_AddRecord\"); record.put(\"FieldCode1\", fv); AddRecordResponse response = kintoneRecordManager.addRecord(appID, record); Integer resultRevision = response.getRevision(); AddRecordsResponse Methods getIDs() get the array of added records ID. Parameter (none) Return ArrayList Integer> Sample code get the array of added records ID Source code // execute ADD RECORDS API Integer appID = 1; ArrayList > records = new ArrayList >(); HashMap record1 = new HashMap (); HashMap record2 = new HashMap (); FieldValue fv = new FieldValue(); fv.setType(FieldType.SINGLE_LINE_TEXT); fv.setValue(\"sample_AddRecords1\"); FieldValue fv2 = new FieldValue(); fv2.setType(FieldType.SINGLE_LINE_TEXT); fv2.setValue(\"sample_AddRecords2\"); record1.put(\"FieldCode1\", fv); record2.put(\"FieldCode1\", fv2); records.add(record1); records.add(record2); AddRecordsResponse response = kintoneRecordManager.addRecords(appID, records); ArrayList resultIDs = response.getIDs(); getRevisions() get the array of added records revision number. Parameter (none) Return ArrayList Integer> Sample code get the array of added records revision number Source code // execute ADD RECORDS API Integer appID = 1; ArrayList > records = new ArrayList >(); HashMap record1 = new HashMap (); HashMap record2 = new HashMap (); FieldValue fv = new FieldValue(); fv.setType(FieldType.SINGLE_LINE_TEXT); fv.setValue(\"sample_AddRecords1\"); FieldValue fv2 = new FieldValue(); fv2.setType(FieldType.SINGLE_LINE_TEXT); fv2.setValue(\"sample_AddRecords2\"); record1.put(\"FieldCode1\", fv); record2.put(\"FieldCode1\", fv2); records.add(record1); records.add(record2); AddRecordsResponse response = kintoneRecordManager.addRecords(appID, records); ArrayList resultRevisions = response.getRevisions(); UpdateRecordResponse Methods getRevision() get the revision number of record updated. Parameter (none) Return Integer Sample code get the revision number of record updated Source code // execute UPDATE RECORD API Integer appID = 1; Integer recordID = 1; HashMap record = new HashMap (); Integer revision = 1; FieldValue fv = new FieldValue(); fv.setType(FieldType.SINGLE_LINE_TEXT); fv.setValue(\"sample_updateRecordById\"); record.put(\"FieldCode1\", fv); UpdateRecordResponse response = kintoneRecordManager.updateRecordByID(appID, recordID, record, revision); Integer resultRevision = response.getRevision(); UpdateRecordsResponse Methods getRecords() get the array of added records ID with revision. Parameter (none) Return ArrayList RecordUpdateResponseItem > Sample code get the array of added records ID with revision Source code // execute UPDATE RECORDS API Integer appID = 1; HashMap record1 = new HashMap (); HashMap record2 = new HashMap (); Integer recordId1 = 1; Integer recordId2 = 2; FieldValue fv1 = new FieldValue(); fv1.setType(FieldType.SINGLE_LINE_TEXT); fv1.setValue(\"test_updateRecords1\"); FieldValue fv2 = new FieldValue(); fv2.setType(FieldType.SINGLE_LINE_TEXT); fv2.setValue(\"test_updateRecords2\"); record1.put(\"FieldCode1\", fv1); record2.put(\"FieldCode1\", fv2); ArrayList records = new ArrayList (); records.add(new RecordUpdateItem(recordId1, null, null, record1)); records.add(new RecordUpdateItem(recordId2, null, null, record2)); UpdateRecordsResponse response = kintoneRecordManager.updateRecords(appID, records); ArrayList resultRuris = response.getRecords(); RecordUpdateResponseItem Methods getID() get the the ID of record updated. Parameter (none) Return Integer Sample code get the the ID of record updated Source code // execute UPDATE RECORDS API Integer appID = 1; HashMap record1 = new HashMap (); HashMap record2 = new HashMap (); Integer recordId1 = 1; Integer recordId2 = 2; FieldValue fv1 = new FieldValue(); fv1.setType(FieldType.SINGLE_LINE_TEXT); fv1.setValue(\"test_updateRecords1\"); FieldValue fv2 = new FieldValue(); fv2.setType(FieldType.SINGLE_LINE_TEXT); fv2.setValue(\"test_updateRecords2\"); record1.put(\"FieldCode1\", fv1); record2.put(\"FieldCode1\", fv2); ArrayList records = ArrayList (); records.add(new RecordUpdateItem(recordId1, null, null, record1)); records.add(new RecordUpdateItem(recordId2, null, null, record2)); UpdateRecordsResponse response = kintoneRecordManager.updateRecords(appID, records); ArrayList resultRuris = response.getRecords(); RecordUpdateResponseItem resultRusi = resultRuris.get(0); Integer resultID = resultRusi.getID(); getRevision() get the revision number of record updated. Parameter (none) Return Integer Sample code get the revision number of record updated Source code // execute UPDATE RECORDS API Integer appID = 1; HashMap record1 = new HashMap (); HashMap record2 = new HashMap (); Integer recordId1 = 1; Integer recordId2 = 2; FieldValue fv1 = new FieldValue(); fv1.setType(FieldType.SINGLE_LINE_TEXT); fv1.setValue(\"test_updateRecords1\"); FieldValue fv2 = new FieldValue(); fv2.setType(FieldType.SINGLE_LINE_TEXT); fv2.setValue(\"test_updateRecords2\"); record1.put(\"FieldCode1\", fv1); record2.put(\"FieldCode1\", fv2); ArrayList records = new ArrayList (); records.add(new RecordUpdateItem(recordId1, null, null, record1)); records.add(new RecordUpdateItem(recordId2, null, null, record2)); UpdateRecordsResponse response = kintoneRecordManager.updateRecords(appID, records); ArrayList resultRuris = response.getRecords(); RecordUpdateResponseItem resultRusi = resultRuris.get(0); Integer resultRevision = resultRusi.getRevision(); RecordUpdateItem Constructor Parameter Name type Description id Integer The ID of the record. revision Integer The revision number of the record. updateKey RecordUpdateKey The unique key of the record to be updated. Required, if id will not be specified. To specify this field, the field must have the \"Prohibit duplicate values\" option turned on. record HashMap String, FieldValue > The data to update record. Sample code init RecordUpdateItem class Source code // execute UPDATE RECORDS API Integer appID = 1; HashMap record1 = new HashMap (); HashMap record2 = new HashMap (); Integer recordId1 = 1; Integer recordId2 = 2; FieldValue fv1 = new FieldValue(); fv1.setType(FieldType.SINGLE_LINE_TEXT); fv1.setValue(\"test_updateRecords1\"); FieldValue fv2 = new FieldValue(); fv2.setType(FieldType.SINGLE_LINE_TEXT); fv2.setValue(\"test_updateRecords2\"); record1.put(\"FieldCode1\", fv1); record2.put(\"FieldCode1\", fv2); RecordUpdateItem updateItem1 = new RecordUpdateItem(recordId1, null, null, record1); RecordUpdateItem updateItem2 = new RecordUpdateItem(recordId2, null, null, record2); ArrayList records = new ArrayList (); records.add(updateItem1); records.add(updateItem2); UpdateRecordsResponse response = kintoneRecordManager.updateRecords(appID, records); Methods (none) RecordUpdateKey Constructor Parameter Name type Description field String The field code of unique key in the kintone app. value String The field value in the record. Sample code init RecordUpdateKey class Source code String field = \"field_code\"; String value = \"unique_value1\"; RecordUpdateKey uKey = new RecordUpdateKey(field, value); Methods (none) RecordUpdateStatusItem Constructor Parameter Name type Description action String The Action name of the action you want. assignee String (Optional) The next Assignee. Specify the Assignee's log in name.. id Integer The record ID. revision Integer (Optional) The revision number of the record before updating the status.If the specified revision is not the latest revision, the request will result in an error. Sample code init RecordUpdateStatusItem class Source code // execute UPDATE RECORDS API Integer appID = 1; String action = \"\u51e6\u7406\u958b\u59cb\"; String assignee = \"sample_user1\"; Integer recordID =1; Integer revision = 1; ArrayList rusi = new ArrayList (); RecordUpdateStatusItem updateStatusItem = new RecordUpdateStatusItem(action, assignee, recordID, revision); rusi.add(updateStatusItem); UpdateRecordsResponse response = kintoneRecordManager.updateRecordsStatus(appID, rusi); Methods (none)","title":"Record"},{"location":"reference/model/record/record-model/#record-model","text":"General record response, using for data response from the kintone app","title":"Record Model"},{"location":"reference/model/record/record-model/#getrecordresponse","text":"","title":"GetRecordResponse"},{"location":"reference/model/record/record-model/#methods","text":"","title":"Methods"},{"location":"reference/model/record/record-model/#getrecord","text":"get the Record data response. Parameter (none) Return HashMap String, FieldValue > Sample code get the Record data response. Source code // execute GET RECORD API Integer appID = 1; Integer recordID =1; GetRecordResponse response = kintoneRecordManager.getRecord(appID, recordID); HashMap resultRecord = response.getRecord();","title":"getRecord()"},{"location":"reference/model/record/record-model/#getrecordsresponse","text":"","title":"GetRecordsResponse"},{"location":"reference/model/record/record-model/#methods_1","text":"","title":"Methods"},{"location":"reference/model/record/record-model/#getrecords","text":"get the Records data response. Parameter (none) Return ArrayList HashMap String, FieldValue >> Sample code get the Records data response Source code // execute GET RECORDS API Integer appID = 1; String query = \"$id >=\" + 1 + \"and $id < =\" + 10 + \"order by $id asc\"; GetRecordsResponse response = kintoneRecordManager.getRecords(appID, query, null, true); ArrayList > resultRecords = response.getRecords();","title":"getRecords()"},{"location":"reference/model/record/record-model/#gettotalcount","text":"get the number of records response. Parameter (none) Return Integer Sample code get the number of records response Source code // execute GET RECORDS API Integer appID = 1; String query = \"$id >=\" + 1 + \"and $id < =\" + 10 + \"order by $id asc\"; GetRecordsResponse response = kintoneRecordManager.getRecords(appID, query, null, true); Integer count = response.getTotalCount();","title":"getTotalCount()"},{"location":"reference/model/record/record-model/#addrecordresponse","text":"","title":"AddRecordResponse"},{"location":"reference/model/record/record-model/#methods_2","text":"","title":"Methods"},{"location":"reference/model/record/record-model/#getid","text":"get the the ID of record added. Parameter (none) Return Integer Sample code get the the ID of record added Source code // execute ADD RECORD API Integer appID = 1; HashMap record = new HashMap (); FieldValue fv = new FieldValue(); fv.setType(FieldType.SINGLE_LINE_TEXT); fv.setValue(\"sample_AddRecord\"); record.put(\"FieldCode1\", fv); AddRecordResponse response = kintoneRecordManager.addRecord(appID, record); Integer resultID = response.getID();","title":"getID()"},{"location":"reference/model/record/record-model/#getrevision","text":"get the revision number of record added. Parameter (none) Return Integer Sample code get the revision number of record added Source code // execute ADD RECORD API Integer appID = 1; HashMap record = new HashMap (); FieldValue fv = new FieldValue(); fv.setType(FieldType.SINGLE_LINE_TEXT); fv.setValue(\"sample_AddRecord\"); record.put(\"FieldCode1\", fv); AddRecordResponse response = kintoneRecordManager.addRecord(appID, record); Integer resultRevision = response.getRevision();","title":"getRevision()"},{"location":"reference/model/record/record-model/#addrecordsresponse","text":"","title":"AddRecordsResponse"},{"location":"reference/model/record/record-model/#methods_3","text":"","title":"Methods"},{"location":"reference/model/record/record-model/#getids","text":"get the array of added records ID. Parameter (none) Return ArrayList Integer> Sample code get the array of added records ID Source code // execute ADD RECORDS API Integer appID = 1; ArrayList > records = new ArrayList >(); HashMap record1 = new HashMap (); HashMap record2 = new HashMap (); FieldValue fv = new FieldValue(); fv.setType(FieldType.SINGLE_LINE_TEXT); fv.setValue(\"sample_AddRecords1\"); FieldValue fv2 = new FieldValue(); fv2.setType(FieldType.SINGLE_LINE_TEXT); fv2.setValue(\"sample_AddRecords2\"); record1.put(\"FieldCode1\", fv); record2.put(\"FieldCode1\", fv2); records.add(record1); records.add(record2); AddRecordsResponse response = kintoneRecordManager.addRecords(appID, records); ArrayList resultIDs = response.getIDs();","title":"getIDs()"},{"location":"reference/model/record/record-model/#getrevisions","text":"get the array of added records revision number. Parameter (none) Return ArrayList Integer> Sample code get the array of added records revision number Source code // execute ADD RECORDS API Integer appID = 1; ArrayList > records = new ArrayList >(); HashMap record1 = new HashMap (); HashMap record2 = new HashMap (); FieldValue fv = new FieldValue(); fv.setType(FieldType.SINGLE_LINE_TEXT); fv.setValue(\"sample_AddRecords1\"); FieldValue fv2 = new FieldValue(); fv2.setType(FieldType.SINGLE_LINE_TEXT); fv2.setValue(\"sample_AddRecords2\"); record1.put(\"FieldCode1\", fv); record2.put(\"FieldCode1\", fv2); records.add(record1); records.add(record2); AddRecordsResponse response = kintoneRecordManager.addRecords(appID, records); ArrayList resultRevisions = response.getRevisions();","title":"getRevisions()"},{"location":"reference/model/record/record-model/#updaterecordresponse","text":"","title":"UpdateRecordResponse"},{"location":"reference/model/record/record-model/#methods_4","text":"","title":"Methods"},{"location":"reference/model/record/record-model/#getrevision_1","text":"get the revision number of record updated. Parameter (none) Return Integer Sample code get the revision number of record updated Source code // execute UPDATE RECORD API Integer appID = 1; Integer recordID = 1; HashMap record = new HashMap (); Integer revision = 1; FieldValue fv = new FieldValue(); fv.setType(FieldType.SINGLE_LINE_TEXT); fv.setValue(\"sample_updateRecordById\"); record.put(\"FieldCode1\", fv); UpdateRecordResponse response = kintoneRecordManager.updateRecordByID(appID, recordID, record, revision); Integer resultRevision = response.getRevision();","title":"getRevision()"},{"location":"reference/model/record/record-model/#updaterecordsresponse","text":"","title":"UpdateRecordsResponse"},{"location":"reference/model/record/record-model/#methods_5","text":"","title":"Methods"},{"location":"reference/model/record/record-model/#getrecords_1","text":"get the array of added records ID with revision. Parameter (none) Return ArrayList RecordUpdateResponseItem > Sample code get the array of added records ID with revision Source code // execute UPDATE RECORDS API Integer appID = 1; HashMap record1 = new HashMap (); HashMap record2 = new HashMap (); Integer recordId1 = 1; Integer recordId2 = 2; FieldValue fv1 = new FieldValue(); fv1.setType(FieldType.SINGLE_LINE_TEXT); fv1.setValue(\"test_updateRecords1\"); FieldValue fv2 = new FieldValue(); fv2.setType(FieldType.SINGLE_LINE_TEXT); fv2.setValue(\"test_updateRecords2\"); record1.put(\"FieldCode1\", fv1); record2.put(\"FieldCode1\", fv2); ArrayList records = new ArrayList (); records.add(new RecordUpdateItem(recordId1, null, null, record1)); records.add(new RecordUpdateItem(recordId2, null, null, record2)); UpdateRecordsResponse response = kintoneRecordManager.updateRecords(appID, records); ArrayList resultRuris = response.getRecords();","title":"getRecords()"},{"location":"reference/model/record/record-model/#recordupdateresponseitem","text":"","title":"RecordUpdateResponseItem"},{"location":"reference/model/record/record-model/#methods_6","text":"","title":"Methods"},{"location":"reference/model/record/record-model/#getid_1","text":"get the the ID of record updated. Parameter (none) Return Integer Sample code get the the ID of record updated Source code // execute UPDATE RECORDS API Integer appID = 1; HashMap record1 = new HashMap (); HashMap record2 = new HashMap (); Integer recordId1 = 1; Integer recordId2 = 2; FieldValue fv1 = new FieldValue(); fv1.setType(FieldType.SINGLE_LINE_TEXT); fv1.setValue(\"test_updateRecords1\"); FieldValue fv2 = new FieldValue(); fv2.setType(FieldType.SINGLE_LINE_TEXT); fv2.setValue(\"test_updateRecords2\"); record1.put(\"FieldCode1\", fv1); record2.put(\"FieldCode1\", fv2); ArrayList records = ArrayList (); records.add(new RecordUpdateItem(recordId1, null, null, record1)); records.add(new RecordUpdateItem(recordId2, null, null, record2)); UpdateRecordsResponse response = kintoneRecordManager.updateRecords(appID, records); ArrayList resultRuris = response.getRecords(); RecordUpdateResponseItem resultRusi = resultRuris.get(0); Integer resultID = resultRusi.getID();","title":"getID()"},{"location":"reference/model/record/record-model/#getrevision_2","text":"get the revision number of record updated. Parameter (none) Return Integer Sample code get the revision number of record updated Source code // execute UPDATE RECORDS API Integer appID = 1; HashMap record1 = new HashMap (); HashMap record2 = new HashMap (); Integer recordId1 = 1; Integer recordId2 = 2; FieldValue fv1 = new FieldValue(); fv1.setType(FieldType.SINGLE_LINE_TEXT); fv1.setValue(\"test_updateRecords1\"); FieldValue fv2 = new FieldValue(); fv2.setType(FieldType.SINGLE_LINE_TEXT); fv2.setValue(\"test_updateRecords2\"); record1.put(\"FieldCode1\", fv1); record2.put(\"FieldCode1\", fv2); ArrayList records = new ArrayList (); records.add(new RecordUpdateItem(recordId1, null, null, record1)); records.add(new RecordUpdateItem(recordId2, null, null, record2)); UpdateRecordsResponse response = kintoneRecordManager.updateRecords(appID, records); ArrayList resultRuris = response.getRecords(); RecordUpdateResponseItem resultRusi = resultRuris.get(0); Integer resultRevision = resultRusi.getRevision();","title":"getRevision()"},{"location":"reference/model/record/record-model/#recordupdateitem","text":"","title":"RecordUpdateItem"},{"location":"reference/model/record/record-model/#constructor","text":"Parameter Name type Description id Integer The ID of the record. revision Integer The revision number of the record. updateKey RecordUpdateKey The unique key of the record to be updated. Required, if id will not be specified. To specify this field, the field must have the \"Prohibit duplicate values\" option turned on. record HashMap String, FieldValue > The data to update record. Sample code init RecordUpdateItem class Source code // execute UPDATE RECORDS API Integer appID = 1; HashMap record1 = new HashMap (); HashMap record2 = new HashMap (); Integer recordId1 = 1; Integer recordId2 = 2; FieldValue fv1 = new FieldValue(); fv1.setType(FieldType.SINGLE_LINE_TEXT); fv1.setValue(\"test_updateRecords1\"); FieldValue fv2 = new FieldValue(); fv2.setType(FieldType.SINGLE_LINE_TEXT); fv2.setValue(\"test_updateRecords2\"); record1.put(\"FieldCode1\", fv1); record2.put(\"FieldCode1\", fv2); RecordUpdateItem updateItem1 = new RecordUpdateItem(recordId1, null, null, record1); RecordUpdateItem updateItem2 = new RecordUpdateItem(recordId2, null, null, record2); ArrayList records = new ArrayList (); records.add(updateItem1); records.add(updateItem2); UpdateRecordsResponse response = kintoneRecordManager.updateRecords(appID, records);","title":"Constructor"},{"location":"reference/model/record/record-model/#methods_7","text":"(none)","title":"Methods"},{"location":"reference/model/record/record-model/#recordupdatekey","text":"","title":"RecordUpdateKey"},{"location":"reference/model/record/record-model/#constructor_1","text":"Parameter Name type Description field String The field code of unique key in the kintone app. value String The field value in the record. Sample code init RecordUpdateKey class Source code String field = \"field_code\"; String value = \"unique_value1\"; RecordUpdateKey uKey = new RecordUpdateKey(field, value);","title":"Constructor"},{"location":"reference/model/record/record-model/#methods_8","text":"(none)","title":"Methods"},{"location":"reference/model/record/record-model/#recordupdatestatusitem","text":"","title":"RecordUpdateStatusItem"},{"location":"reference/model/record/record-model/#constructor_2","text":"Parameter Name type Description action String The Action name of the action you want. assignee String (Optional) The next Assignee. Specify the Assignee's log in name.. id Integer The record ID. revision Integer (Optional) The revision number of the record before updating the status.If the specified revision is not the latest revision, the request will result in an error. Sample code init RecordUpdateStatusItem class Source code // execute UPDATE RECORDS API Integer appID = 1; String action = \"\u51e6\u7406\u958b\u59cb\"; String assignee = \"sample_user1\"; Integer recordID =1; Integer revision = 1; ArrayList rusi = new ArrayList (); RecordUpdateStatusItem updateStatusItem = new RecordUpdateStatusItem(action, assignee, recordID, revision); rusi.add(updateStatusItem); UpdateRecordsResponse response = kintoneRecordManager.updateRecordsStatus(appID, rusi);","title":"Constructor"},{"location":"reference/model/record/record-model/#methods_9","text":"(none)","title":"Methods"}]}